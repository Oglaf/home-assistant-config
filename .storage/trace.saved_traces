{
  "version": 1,
  "minor_version": 1,
  "key": "trace.saved_traces",
  "data": {
    "automation.1688854997782": [
      {
        "extended_dict": {
          "last_step": "action/0/default/11",
          "run_id": "2af669b00cbefa4975bd52baa81bb61f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T01:03:24.950290+00:00",
            "finish": "2023-11-29T01:05:29.598370+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "state of binary_sensor.zigbee_motion_sensor_motion",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T01:03:24.952643+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-29T00:59:36.586258+00:00",
                      "mode": "restart",
                      "current": 1,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-28T22:08:09.365210+00:00",
                    "last_updated": "2023-11-29T00:59:36.586283+00:00",
                    "context": {
                      "id": "01HGC9DAR7GVEDCASKD5Q8D7BK",
                      "parent_id": "01HGC9DAR7V69TQVWZRAX2EX2R",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                    "from_state": {
                      "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                      "state": "off",
                      "attributes": {
                        "migrated_to_cache": true,
                        "device_class": "motion",
                        "friendly_name": "Zigbee motion sensor Motion"
                      },
                      "last_changed": "2023-11-29T01:02:28.440089+00:00",
                      "last_updated": "2023-11-29T01:02:28.440089+00:00",
                      "context": {
                        "id": "01HGC9JJJRT1BWK81TM5VR3AVW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                      "state": "on",
                      "attributes": {
                        "migrated_to_cache": true,
                        "device_class": "motion",
                        "friendly_name": "Zigbee motion sensor Motion"
                      },
                      "last_changed": "2023-11-29T01:03:24.949958+00:00",
                      "last_updated": "2023-11-29T01:03:24.949958+00:00",
                      "context": {
                        "id": "01HGC9M9RNNFJQSWTJ6C3GK4GB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.zigbee_motion_sensor_motion"
                  },
                  "motion_trigger": [
                    "binary_sensor.zigbee_motion_sensor_motion"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T01:03:24.952687+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.952727+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.952761+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T01:03:24.952799+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/0/conditions/1": [
              {
                "path": "condition/0/conditions/0/conditions/1",
                "timestamp": "2023-11-29T01:03:24.952866+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-29T01:03:24.952934+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0": [
              {
                "path": "condition/1/conditions/0",
                "timestamp": "2023-11-29T01:03:24.952972+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2023-11-29T01:03:24.953142+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/2/conditions/0": [
              {
                "path": "condition/2/conditions/0",
                "timestamp": "2023-11-29T01:03:24.953181+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/2/conditions/1": [
              {
                "path": "condition/2/conditions/1",
                "timestamp": "2023-11-29T01:03:24.953308+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/2/conditions/2": [
              {
                "path": "condition/2/conditions/2",
                "timestamp": "2023-11-29T01:03:24.953435+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2023-11-29T01:03:24.953599+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/3/conditions/0": [
              {
                "path": "condition/3/conditions/0",
                "timestamp": "2023-11-29T01:03:24.953639+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/4": [
              {
                "path": "condition/4",
                "timestamp": "2023-11-29T01:03:24.953772+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/4/conditions/0": [
              {
                "path": "condition/4/conditions/0",
                "timestamp": "2023-11-29T01:03:24.953808+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/4/conditions/1": [
              {
                "path": "condition/4/conditions/1",
                "timestamp": "2023-11-29T01:03:24.953929+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/4/conditions/1/conditions/0": [
              {
                "path": "condition/4/conditions/1/conditions/0",
                "timestamp": "2023-11-29T01:03:24.953967+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:03:24.953992"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "01:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "condition/4/conditions/1/conditions/1": [
              {
                "path": "condition/4/conditions/1/conditions/1",
                "timestamp": "2023-11-29T01:03:24.954033+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/5": [
              {
                "path": "condition/5",
                "timestamp": "2023-11-29T01:03:24.954176+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/5/conditions/0": [
              {
                "path": "condition/5/conditions/0",
                "timestamp": "2023-11-29T01:03:24.954213+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/5/conditions/1": [
              {
                "path": "condition/5/conditions/1",
                "timestamp": "2023-11-29T01:03:24.954332+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/5/conditions/1/conditions/0": [
              {
                "path": "condition/5/conditions/1/conditions/0",
                "timestamp": "2023-11-29T01:03:24.954370+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/5/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/5/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T01:03:24.954402+00:00",
                "result": {
                  "result": true,
                  "state": 2.0
                }
              }
            ],
            "condition/5/conditions/1/conditions/1": [
              {
                "path": "condition/5/conditions/1/conditions/1",
                "timestamp": "2023-11-29T01:03:24.954462+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/5/conditions/2": [
              {
                "path": "condition/5/conditions/2",
                "timestamp": "2023-11-29T01:03:24.954592+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/5/conditions/2/conditions/0": [
              {
                "path": "condition/5/conditions/2/conditions/0",
                "timestamp": "2023-11-29T01:03:24.954628+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "zone.home"
                  ]
                }
              }
            ],
            "condition/5/conditions/2/conditions/1": [
              {
                "path": "condition/5/conditions/2/conditions/1",
                "timestamp": "2023-11-29T01:03:24.954819+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T01:03:24.956687+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC9M9RPJ8X50V19BFJGME60",
                    "parent_id": "01HGC9M9RNNFJQSWTJ6C3GK4GB",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-29T01:03:24.956771+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.956818+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.956855+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.956893+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/1": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/1",
                "timestamp": "2023-11-29T01:03:24.957061+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/1/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/1/conditions/0",
                "timestamp": "2023-11-29T01:03:24.957128+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/2": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/2",
                "timestamp": "2023-11-29T01:03:24.957283+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/2/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/2/conditions/0",
                "timestamp": "2023-11-29T01:03:24.957322+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/default/0": [
              {
                "path": "action/0/default/0",
                "timestamp": "2023-11-29T01:03:24.957709+00:00"
              }
            ],
            "action/0/default/0/choose/0": [
              {
                "path": "action/0/default/0/choose/0",
                "timestamp": "2023-11-29T01:03:24.957778+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/0/conditions/0": [
              {
                "path": "action/0/default/0/choose/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.957819+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/1": [
              {
                "path": "action/0/default/0/choose/1",
                "timestamp": "2023-11-29T01:03:24.957890+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/1/conditions/0": [
              {
                "path": "action/0/default/0/choose/1/conditions/0",
                "timestamp": "2023-11-29T01:03:24.957929+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/2": [
              {
                "path": "action/0/default/0/choose/2",
                "timestamp": "2023-11-29T01:03:24.957995+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/2/conditions/0": [
              {
                "path": "action/0/default/0/choose/2/conditions/0",
                "timestamp": "2023-11-29T01:03:24.958036+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/3": [
              {
                "path": "action/0/default/0/choose/3",
                "timestamp": "2023-11-29T01:03:24.958101+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/3/conditions/0": [
              {
                "path": "action/0/default/0/choose/3/conditions/0",
                "timestamp": "2023-11-29T01:03:24.958139+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/4": [
              {
                "path": "action/0/default/0/choose/4",
                "timestamp": "2023-11-29T01:03:24.958204+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/4/conditions/0": [
              {
                "path": "action/0/default/0/choose/4/conditions/0",
                "timestamp": "2023-11-29T01:03:24.958242+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/5": [
              {
                "path": "action/0/default/0/choose/5",
                "timestamp": "2023-11-29T01:03:24.958308+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/5/conditions/0": [
              {
                "path": "action/0/default/0/choose/5/conditions/0",
                "timestamp": "2023-11-29T01:03:24.958348+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/1": [
              {
                "path": "action/0/default/1",
                "timestamp": "2023-11-29T01:03:24.958429+00:00"
              }
            ],
            "action/0/default/1/choose/0": [
              {
                "path": "action/0/default/1/choose/0",
                "timestamp": "2023-11-29T01:03:24.958492+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/1/choose/0/conditions/0": [
              {
                "path": "action/0/default/1/choose/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.958532+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/default/2": [
              {
                "path": "action/0/default/2",
                "timestamp": "2023-11-29T01:03:24.958709+00:00"
              }
            ],
            "action/0/default/2/choose/0": [
              {
                "path": "action/0/default/2/choose/0",
                "timestamp": "2023-11-29T01:03:24.958773+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/2/choose/0/conditions/0": [
              {
                "path": "action/0/default/2/choose/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.958812+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/default/3": [
              {
                "path": "action/0/default/3",
                "timestamp": "2023-11-29T01:03:24.958978+00:00"
              }
            ],
            "action/0/default/3/choose/0": [
              {
                "path": "action/0/default/3/choose/0",
                "timestamp": "2023-11-29T01:03:24.959043+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/3/choose/0/conditions/0": [
              {
                "path": "action/0/default/3/choose/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.959083+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/default/4": [
              {
                "path": "action/0/default/4",
                "timestamp": "2023-11-29T01:03:24.959248+00:00",
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/0/default/4/choose/0": [
              {
                "path": "action/0/default/4/choose/0",
                "timestamp": "2023-11-29T01:03:24.959312+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/default/4/choose/0/conditions/0": [
              {
                "path": "action/0/default/4/choose/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.959352+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/0/default/4/choose/0/sequence/0": [
              {
                "path": "action/0/default/4/choose/0/sequence/0",
                "timestamp": "2023-11-29T01:03:24.959715+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_on",
                    "service_data": {
                      "transition": 0,
                      "entity_id": []
                    },
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/5": [
              {
                "path": "action/0/default/5",
                "timestamp": "2023-11-29T01:03:24.961608+00:00",
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/6": [
              {
                "path": "action/0/default/6",
                "timestamp": "2023-11-29T01:03:24.962296+00:00",
                "result": {
                  "params": {
                    "domain": "scene",
                    "service": "turn_on",
                    "service_data": {
                      "transition": 0,
                      "entity_id": []
                    },
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/7": [
              {
                "path": "action/0/default/7",
                "timestamp": "2023-11-29T01:03:24.963043+00:00",
                "result": {
                  "choice": 1
                }
              }
            ],
            "action/0/default/7/choose/0": [
              {
                "path": "action/0/default/7/choose/0",
                "timestamp": "2023-11-29T01:03:24.963120+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/7/choose/0/conditions/0": [
              {
                "path": "action/0/default/7/choose/0/conditions/0",
                "timestamp": "2023-11-29T01:03:24.963164+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/7/choose/1": [
              {
                "path": "action/0/default/7/choose/1",
                "timestamp": "2023-11-29T01:03:24.963235+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/default/7/choose/1/conditions/0": [
              {
                "path": "action/0/default/7/choose/1/conditions/0",
                "timestamp": "2023-11-29T01:03:24.963275+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/default/7/choose/1/conditions/0/entity_id/0": [
              {
                "path": "action/0/default/7/choose/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T01:03:24.963318+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "action/0/default/7/choose/1/sequence/0": [
              {
                "path": "action/0/default/7/choose/1/sequence/0",
                "timestamp": "2023-11-29T01:03:24.963636+00:00",
                "result": {
                  "wait": {
                    "remaining": null,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                      "from_state": {
                        "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                        "state": "on",
                        "attributes": {
                          "migrated_to_cache": true,
                          "device_class": "motion",
                          "friendly_name": "Zigbee motion sensor Motion"
                        },
                        "last_changed": "2023-11-29T01:03:24.949958+00:00",
                        "last_updated": "2023-11-29T01:03:24.949958+00:00",
                        "context": {
                          "id": "01HGC9M9RNNFJQSWTJ6C3GK4GB",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                        "state": "off",
                        "attributes": {
                          "migrated_to_cache": true,
                          "device_class": "motion",
                          "friendly_name": "Zigbee motion sensor Motion"
                        },
                        "last_changed": "2023-11-29T01:04:29.538177+00:00",
                        "last_updated": "2023-11-29T01:04:29.538177+00:00",
                        "context": {
                          "id": "01HGC9P8V2RF6SWFF7EEE8X6EX",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.zigbee_motion_sensor_motion"
                    }
                  }
                }
              }
            ],
            "action/0/default/8": [
              {
                "path": "action/0/default/8",
                "timestamp": "2023-11-29T01:04:29.538848+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                      "from_state": {
                        "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                        "state": "on",
                        "attributes": {
                          "migrated_to_cache": true,
                          "device_class": "motion",
                          "friendly_name": "Zigbee motion sensor Motion"
                        },
                        "last_changed": "2023-11-29T01:03:24.949958+00:00",
                        "last_updated": "2023-11-29T01:03:24.949958+00:00",
                        "context": {
                          "id": "01HGC9M9RNNFJQSWTJ6C3GK4GB",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                        "state": "off",
                        "attributes": {
                          "migrated_to_cache": true,
                          "device_class": "motion",
                          "friendly_name": "Zigbee motion sensor Motion"
                        },
                        "last_changed": "2023-11-29T01:04:29.538177+00:00",
                        "last_updated": "2023-11-29T01:04:29.538177+00:00",
                        "context": {
                          "id": "01HGC9P8V2RF6SWFF7EEE8X6EX",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.zigbee_motion_sensor_motion"
                    }
                  }
                },
                "result": {
                  "delay": 60.0,
                  "done": true
                }
              }
            ],
            "action/0/default/9": [
              {
                "path": "action/0/default/9",
                "timestamp": "2023-11-29T01:05:29.540804+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "transition": 0,
                      "entity_id": [
                        "light.bedroom_light"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "light.bedroom_light"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/10": [
              {
                "path": "action/0/default/10",
                "timestamp": "2023-11-29T01:05:29.594890+00:00",
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/11": [
              {
                "path": "action/0/default/11",
                "timestamp": "2023-11-29T01:05:29.597402+00:00",
                "result": {
                  "params": {
                    "domain": "scene",
                    "service": "turn_on",
                    "service_data": {
                      "transition": 0,
                      "entity_id": []
                    },
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.zigbee_motion_sensor_motion"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.zigbee_motion_sensor_motion"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.zigbee_motion_sensor_motion"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.zigbee_motion_sensor_motion"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGC9M9RPJ8X50V19BFJGME60",
            "parent_id": "01HGC9M9RNNFJQSWTJ6C3GK4GB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/default/11",
          "run_id": "2af669b00cbefa4975bd52baa81bb61f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T01:03:24.950290+00:00",
            "finish": "2023-11-29T01:05:29.598370+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "state of binary_sensor.zigbee_motion_sensor_motion"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "cb30c928e05eb0cf5ea1f5c0f2cdd826",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:00:00.112257+00:00",
            "finish": "2023-11-29T03:00:00.115328+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time",
          "trace": {
            "trigger/11": [
              {
                "path": "trigger/11",
                "timestamp": "2023-11-29T03:00:00.113732+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-29T01:03:24.956489+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-28T22:08:09.365210+00:00",
                    "last_updated": "2023-11-29T01:05:29.598200+00:00",
                    "context": {
                      "id": "01HGC9R3FYX4S8R3ZYX6MK7C0W",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t11",
                    "idx": "11",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-29T00:00:00.112071-03:00",
                    "description": "time",
                    "entity_id": null
                  },
                  "motion_trigger": [
                    "binary_sensor.zigbee_motion_sensor_motion"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:00:00.113769+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T03:00:00.113791+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:00:00.113808+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.113827+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-29T03:00:00.113888+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:00:00.113910+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.113931+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-29T03:00:00.113970+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0": [
              {
                "path": "condition/0/conditions/2/conditions/0",
                "timestamp": "2023-11-29T03:00:00.113990+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/2/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.114019+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2023-11-29T03:00:00.114051+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0": [
              {
                "path": "condition/0/conditions/3/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114066+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/3/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.114083+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/4": [
              {
                "path": "condition/0/conditions/4",
                "timestamp": "2023-11-29T03:00:00.114113+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/4/conditions/0": [
              {
                "path": "condition/0/conditions/4/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114128+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5": [
              {
                "path": "condition/0/conditions/5",
                "timestamp": "2023-11-29T03:00:00.114212+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114230+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114246+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5/conditions/1": [
              {
                "path": "condition/0/conditions/5/conditions/1",
                "timestamp": "2023-11-29T03:00:00.114336+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114357+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/6": [
              {
                "path": "condition/0/conditions/6",
                "timestamp": "2023-11-29T03:00:00.114435+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/6/conditions/0": [
              {
                "path": "condition/0/conditions/6/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114456+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7": [
              {
                "path": "condition/0/conditions/7",
                "timestamp": "2023-11-29T03:00:00.114485+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7/conditions/0": [
              {
                "path": "condition/0/conditions/7/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114504+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8": [
              {
                "path": "condition/0/conditions/8",
                "timestamp": "2023-11-29T03:00:00.114533+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0": [
              {
                "path": "condition/0/conditions/8/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114552+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/8/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.114573+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/9": [
              {
                "path": "condition/0/conditions/9",
                "timestamp": "2023-11-29T03:00:00.114610+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0": [
              {
                "path": "condition/0/conditions/9/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114629+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/9/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.114649+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/10": [
              {
                "path": "condition/0/conditions/10",
                "timestamp": "2023-11-29T03:00:00.114685+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0": [
              {
                "path": "condition/0/conditions/10/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114705+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/10/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.114724+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/11": [
              {
                "path": "condition/0/conditions/11",
                "timestamp": "2023-11-29T03:00:00.114761+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/11/conditions/0": [
              {
                "path": "condition/0/conditions/11/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114780+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12": [
              {
                "path": "condition/0/conditions/12",
                "timestamp": "2023-11-29T03:00:00.114856+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114877+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:00:00.114895+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12/conditions/1": [
              {
                "path": "condition/0/conditions/12/conditions/1",
                "timestamp": "2023-11-29T03:00:00.114975+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:00:00.115002+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/13": [
              {
                "path": "condition/0/conditions/13",
                "timestamp": "2023-11-29T03:00:00.115068+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/13/conditions/0": [
              {
                "path": "condition/0/conditions/13/conditions/0",
                "timestamp": "2023-11-29T03:00:00.115098+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "light.bedroom_light"
                  ]
                }
              }
            ],
            "condition/0/conditions/14": [
              {
                "path": "condition/0/conditions/14",
                "timestamp": "2023-11-29T03:00:00.115245+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0": [
              {
                "path": "condition/0/conditions/14/conditions/0",
                "timestamp": "2023-11-29T03:00:00.115267+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/14/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.115288+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.zigbee_motion_sensor_motion"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.zigbee_motion_sensor_motion"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.zigbee_motion_sensor_motion"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.zigbee_motion_sensor_motion"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGCG9RZGSXD7YBXQA380GNAF",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "cb30c928e05eb0cf5ea1f5c0f2cdd826",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:00:00.112257+00:00",
            "finish": "2023-11-29T03:00:00.115328+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "085505f50d0809b6ee6cde8b991f9ead",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:00:00.188685+00:00",
            "finish": "2023-11-29T03:00:00.191205+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time",
          "trace": {
            "trigger/4": [
              {
                "path": "trigger/4",
                "timestamp": "2023-11-29T03:00:00.189874+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-29T01:03:24.956489+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-28T22:08:09.365210+00:00",
                    "last_updated": "2023-11-29T01:05:29.598200+00:00",
                    "context": {
                      "id": "01HGC9R3FYX4S8R3ZYX6MK7C0W",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t4",
                    "idx": "4",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-29T00:00:00.188524-03:00",
                    "description": "time",
                    "entity_id": null
                  },
                  "motion_trigger": [
                    "binary_sensor.zigbee_motion_sensor_motion"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:00:00.189903+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T03:00:00.189924+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:00:00.189940+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.189958+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-29T03:00:00.189995+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190011+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.190027+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-29T03:00:00.190057+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0": [
              {
                "path": "condition/0/conditions/2/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190074+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/2/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.190090+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2023-11-29T03:00:00.190120+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0": [
              {
                "path": "condition/0/conditions/3/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190136+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/3/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.190158+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/4": [
              {
                "path": "condition/0/conditions/4",
                "timestamp": "2023-11-29T03:00:00.190190+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/4/conditions/0": [
              {
                "path": "condition/0/conditions/4/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190207+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5": [
              {
                "path": "condition/0/conditions/5",
                "timestamp": "2023-11-29T03:00:00.190273+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190290+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190304+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5/conditions/1": [
              {
                "path": "condition/0/conditions/5/conditions/1",
                "timestamp": "2023-11-29T03:00:00.190364+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190381+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/6": [
              {
                "path": "condition/0/conditions/6",
                "timestamp": "2023-11-29T03:00:00.190480+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/6/conditions/0": [
              {
                "path": "condition/0/conditions/6/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190498+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7": [
              {
                "path": "condition/0/conditions/7",
                "timestamp": "2023-11-29T03:00:00.190521+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7/conditions/0": [
              {
                "path": "condition/0/conditions/7/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190536+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8": [
              {
                "path": "condition/0/conditions/8",
                "timestamp": "2023-11-29T03:00:00.190560+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0": [
              {
                "path": "condition/0/conditions/8/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190575+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/8/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.190592+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/9": [
              {
                "path": "condition/0/conditions/9",
                "timestamp": "2023-11-29T03:00:00.190626+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0": [
              {
                "path": "condition/0/conditions/9/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190644+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/9/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.190661+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/10": [
              {
                "path": "condition/0/conditions/10",
                "timestamp": "2023-11-29T03:00:00.190691+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0": [
              {
                "path": "condition/0/conditions/10/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190707+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/10/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.190724+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/11": [
              {
                "path": "condition/0/conditions/11",
                "timestamp": "2023-11-29T03:00:00.190753+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/11/conditions/0": [
              {
                "path": "condition/0/conditions/11/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190769+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12": [
              {
                "path": "condition/0/conditions/12",
                "timestamp": "2023-11-29T03:00:00.190831+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190848+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190868+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12/conditions/1": [
              {
                "path": "condition/0/conditions/12/conditions/1",
                "timestamp": "2023-11-29T03:00:00.190931+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:00:00.190947+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/13": [
              {
                "path": "condition/0/conditions/13",
                "timestamp": "2023-11-29T03:00:00.191009+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/13/conditions/0": [
              {
                "path": "condition/0/conditions/13/conditions/0",
                "timestamp": "2023-11-29T03:00:00.191026+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "light.bedroom_light"
                  ]
                }
              }
            ],
            "condition/0/conditions/14": [
              {
                "path": "condition/0/conditions/14",
                "timestamp": "2023-11-29T03:00:00.191134+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0": [
              {
                "path": "condition/0/conditions/14/conditions/0",
                "timestamp": "2023-11-29T03:00:00.191156+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/14/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:00:00.191173+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.zigbee_motion_sensor_motion"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.zigbee_motion_sensor_motion"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.zigbee_motion_sensor_motion"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.zigbee_motion_sensor_motion"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGCG9S1WDRRBCD8Z9004Q6FQ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "085505f50d0809b6ee6cde8b991f9ead",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:00:00.188685+00:00",
            "finish": "2023-11-29T03:00:00.191205+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/default/11",
          "run_id": "e7a9bcaced47bdc5ec7a7f92f5d34443",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T03:19:00.472192+00:00",
            "finish": "2023-11-29T03:21:04.391409+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "state of binary_sensor.zigbee_motion_sensor_motion",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:19:00.474579+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-29T01:03:24.956489+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-28T22:08:09.365210+00:00",
                    "last_updated": "2023-11-29T01:05:29.598200+00:00",
                    "context": {
                      "id": "01HGC9R3FYX4S8R3ZYX6MK7C0W",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                    "from_state": {
                      "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                      "state": "off",
                      "attributes": {
                        "migrated_to_cache": true,
                        "device_class": "motion",
                        "friendly_name": "Zigbee motion sensor Motion"
                      },
                      "last_changed": "2023-11-29T01:04:29.538177+00:00",
                      "last_updated": "2023-11-29T01:04:29.538177+00:00",
                      "context": {
                        "id": "01HGC9P8V2RF6SWFF7EEE8X6EX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                      "state": "on",
                      "attributes": {
                        "migrated_to_cache": true,
                        "device_class": "motion",
                        "friendly_name": "Zigbee motion sensor Motion"
                      },
                      "last_changed": "2023-11-29T03:19:00.471839+00:00",
                      "last_updated": "2023-11-29T03:19:00.471839+00:00",
                      "context": {
                        "id": "01HGCHCJKQP740FJ3ZMY5ZK4WN",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.zigbee_motion_sensor_motion"
                  },
                  "motion_trigger": [
                    "binary_sensor.zigbee_motion_sensor_motion"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:19:00.474627+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.474667+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.474702+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:19:00.474740+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/0/conditions/1": [
              {
                "path": "condition/0/conditions/0/conditions/1",
                "timestamp": "2023-11-29T03:19:00.474807+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-29T03:19:00.474878+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0": [
              {
                "path": "condition/1/conditions/0",
                "timestamp": "2023-11-29T03:19:00.474915+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/2": [
              {
                "path": "condition/2",
                "timestamp": "2023-11-29T03:19:00.475063+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/2/conditions/0": [
              {
                "path": "condition/2/conditions/0",
                "timestamp": "2023-11-29T03:19:00.475101+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/2/conditions/1": [
              {
                "path": "condition/2/conditions/1",
                "timestamp": "2023-11-29T03:19:00.475227+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/2/conditions/2": [
              {
                "path": "condition/2/conditions/2",
                "timestamp": "2023-11-29T03:19:00.475351+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "sun.sun"
                  ]
                }
              }
            ],
            "condition/3": [
              {
                "path": "condition/3",
                "timestamp": "2023-11-29T03:19:00.475562+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/3/conditions/0": [
              {
                "path": "condition/3/conditions/0",
                "timestamp": "2023-11-29T03:19:00.475602+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/4": [
              {
                "path": "condition/4",
                "timestamp": "2023-11-29T03:19:00.475736+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/4/conditions/0": [
              {
                "path": "condition/4/conditions/0",
                "timestamp": "2023-11-29T03:19:00.475773+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/4/conditions/1": [
              {
                "path": "condition/4/conditions/1",
                "timestamp": "2023-11-29T03:19:00.475893+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/4/conditions/1/conditions/0": [
              {
                "path": "condition/4/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:19:00.475931+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:19:00.475956"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "01:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "now_weekday": "wed",
                  "result": true
                }
              }
            ],
            "condition/4/conditions/1/conditions/1": [
              {
                "path": "condition/4/conditions/1/conditions/1",
                "timestamp": "2023-11-29T03:19:00.475998+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "condition/5": [
              {
                "path": "condition/5",
                "timestamp": "2023-11-29T03:19:00.476139+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/5/conditions/0": [
              {
                "path": "condition/5/conditions/0",
                "timestamp": "2023-11-29T03:19:00.476177+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/5/conditions/1": [
              {
                "path": "condition/5/conditions/1",
                "timestamp": "2023-11-29T03:19:00.476297+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/5/conditions/1/conditions/0": [
              {
                "path": "condition/5/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:19:00.476335+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/5/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/5/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:19:00.476367+00:00",
                "result": {
                  "result": true,
                  "state": 2.0
                }
              }
            ],
            "condition/5/conditions/1/conditions/1": [
              {
                "path": "condition/5/conditions/1/conditions/1",
                "timestamp": "2023-11-29T03:19:00.476428+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/5/conditions/2": [
              {
                "path": "condition/5/conditions/2",
                "timestamp": "2023-11-29T03:19:00.476559+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/5/conditions/2/conditions/0": [
              {
                "path": "condition/5/conditions/2/conditions/0",
                "timestamp": "2023-11-29T03:19:00.476595+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "zone.home"
                  ]
                }
              }
            ],
            "condition/5/conditions/2/conditions/1": [
              {
                "path": "condition/5/conditions/2/conditions/1",
                "timestamp": "2023-11-29T03:19:00.476787+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T03:19:00.478080+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGCHCJKR14NQ8G5V1804K8JF",
                    "parent_id": "01HGCHCJKQP740FJ3ZMY5ZK4WN",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-29T03:19:00.478169+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.478218+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.478254+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.478292+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/1": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/1",
                "timestamp": "2023-11-29T03:19:00.478465+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/1/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/1/conditions/0",
                "timestamp": "2023-11-29T03:19:00.478505+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/2": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/2",
                "timestamp": "2023-11-29T03:19:00.478649+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0/conditions/2/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0/conditions/2/conditions/0",
                "timestamp": "2023-11-29T03:19:00.478688+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/default/0": [
              {
                "path": "action/0/default/0",
                "timestamp": "2023-11-29T03:19:00.479120+00:00"
              }
            ],
            "action/0/default/0/choose/0": [
              {
                "path": "action/0/default/0/choose/0",
                "timestamp": "2023-11-29T03:19:00.479191+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/0/conditions/0": [
              {
                "path": "action/0/default/0/choose/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.479230+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/1": [
              {
                "path": "action/0/default/0/choose/1",
                "timestamp": "2023-11-29T03:19:00.479299+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/1/conditions/0": [
              {
                "path": "action/0/default/0/choose/1/conditions/0",
                "timestamp": "2023-11-29T03:19:00.479337+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/2": [
              {
                "path": "action/0/default/0/choose/2",
                "timestamp": "2023-11-29T03:19:00.479400+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/2/conditions/0": [
              {
                "path": "action/0/default/0/choose/2/conditions/0",
                "timestamp": "2023-11-29T03:19:00.479440+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/3": [
              {
                "path": "action/0/default/0/choose/3",
                "timestamp": "2023-11-29T03:19:00.479504+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/3/conditions/0": [
              {
                "path": "action/0/default/0/choose/3/conditions/0",
                "timestamp": "2023-11-29T03:19:00.479542+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/4": [
              {
                "path": "action/0/default/0/choose/4",
                "timestamp": "2023-11-29T03:19:00.479605+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/4/conditions/0": [
              {
                "path": "action/0/default/0/choose/4/conditions/0",
                "timestamp": "2023-11-29T03:19:00.479643+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/5": [
              {
                "path": "action/0/default/0/choose/5",
                "timestamp": "2023-11-29T03:19:00.479706+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/0/choose/5/conditions/0": [
              {
                "path": "action/0/default/0/choose/5/conditions/0",
                "timestamp": "2023-11-29T03:19:00.479744+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/1": [
              {
                "path": "action/0/default/1",
                "timestamp": "2023-11-29T03:19:00.479825+00:00"
              }
            ],
            "action/0/default/1/choose/0": [
              {
                "path": "action/0/default/1/choose/0",
                "timestamp": "2023-11-29T03:19:00.479885+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/1/choose/0/conditions/0": [
              {
                "path": "action/0/default/1/choose/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.479924+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/default/2": [
              {
                "path": "action/0/default/2",
                "timestamp": "2023-11-29T03:19:00.480097+00:00"
              }
            ],
            "action/0/default/2/choose/0": [
              {
                "path": "action/0/default/2/choose/0",
                "timestamp": "2023-11-29T03:19:00.480160+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/2/choose/0/conditions/0": [
              {
                "path": "action/0/default/2/choose/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.480199+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/default/3": [
              {
                "path": "action/0/default/3",
                "timestamp": "2023-11-29T03:19:00.480391+00:00"
              }
            ],
            "action/0/default/3/choose/0": [
              {
                "path": "action/0/default/3/choose/0",
                "timestamp": "2023-11-29T03:19:00.480466+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/3/choose/0/conditions/0": [
              {
                "path": "action/0/default/3/choose/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.480505+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/0/default/4": [
              {
                "path": "action/0/default/4",
                "timestamp": "2023-11-29T03:19:00.480667+00:00",
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/0/default/4/choose/0": [
              {
                "path": "action/0/default/4/choose/0",
                "timestamp": "2023-11-29T03:19:00.480730+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/default/4/choose/0/conditions/0": [
              {
                "path": "action/0/default/4/choose/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.480767+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/0/default/4/choose/0/sequence/0": [
              {
                "path": "action/0/default/4/choose/0/sequence/0",
                "timestamp": "2023-11-29T03:19:00.481172+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_on",
                    "service_data": {
                      "transition": 0,
                      "entity_id": [
                        "light.bedroom_light"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "light.bedroom_light"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/5": [
              {
                "path": "action/0/default/5",
                "timestamp": "2023-11-29T03:19:00.560554+00:00",
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/6": [
              {
                "path": "action/0/default/6",
                "timestamp": "2023-11-29T03:19:00.561230+00:00",
                "result": {
                  "params": {
                    "domain": "scene",
                    "service": "turn_on",
                    "service_data": {
                      "transition": 0,
                      "entity_id": []
                    },
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/7": [
              {
                "path": "action/0/default/7",
                "timestamp": "2023-11-29T03:19:00.561970+00:00",
                "result": {
                  "choice": 1
                }
              }
            ],
            "action/0/default/7/choose/0": [
              {
                "path": "action/0/default/7/choose/0",
                "timestamp": "2023-11-29T03:19:00.562046+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/7/choose/0/conditions/0": [
              {
                "path": "action/0/default/7/choose/0/conditions/0",
                "timestamp": "2023-11-29T03:19:00.562088+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/default/7/choose/1": [
              {
                "path": "action/0/default/7/choose/1",
                "timestamp": "2023-11-29T03:19:00.562157+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/default/7/choose/1/conditions/0": [
              {
                "path": "action/0/default/7/choose/1/conditions/0",
                "timestamp": "2023-11-29T03:19:00.562195+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/default/7/choose/1/conditions/0/entity_id/0": [
              {
                "path": "action/0/default/7/choose/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T03:19:00.562235+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "action/0/default/7/choose/1/sequence/0": [
              {
                "path": "action/0/default/7/choose/1/sequence/0",
                "timestamp": "2023-11-29T03:19:00.562553+00:00",
                "result": {
                  "wait": {
                    "remaining": null,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                      "from_state": {
                        "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                        "state": "on",
                        "attributes": {
                          "migrated_to_cache": true,
                          "device_class": "motion",
                          "friendly_name": "Zigbee motion sensor Motion"
                        },
                        "last_changed": "2023-11-29T03:19:00.471839+00:00",
                        "last_updated": "2023-11-29T03:19:00.471839+00:00",
                        "context": {
                          "id": "01HGCHCJKQP740FJ3ZMY5ZK4WN",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                        "state": "off",
                        "attributes": {
                          "migrated_to_cache": true,
                          "device_class": "motion",
                          "friendly_name": "Zigbee motion sensor Motion"
                        },
                        "last_changed": "2023-11-29T03:20:04.319062+00:00",
                        "last_updated": "2023-11-29T03:20:04.319062+00:00",
                        "context": {
                          "id": "01HGCHEGYZ753PHMD4PXVN5BCH",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.zigbee_motion_sensor_motion"
                    }
                  }
                }
              }
            ],
            "action/0/default/8": [
              {
                "path": "action/0/default/8",
                "timestamp": "2023-11-29T03:20:04.319748+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": null,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "state",
                      "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                      "from_state": {
                        "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                        "state": "on",
                        "attributes": {
                          "migrated_to_cache": true,
                          "device_class": "motion",
                          "friendly_name": "Zigbee motion sensor Motion"
                        },
                        "last_changed": "2023-11-29T03:19:00.471839+00:00",
                        "last_updated": "2023-11-29T03:19:00.471839+00:00",
                        "context": {
                          "id": "01HGCHCJKQP740FJ3ZMY5ZK4WN",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "to_state": {
                        "entity_id": "binary_sensor.zigbee_motion_sensor_motion",
                        "state": "off",
                        "attributes": {
                          "migrated_to_cache": true,
                          "device_class": "motion",
                          "friendly_name": "Zigbee motion sensor Motion"
                        },
                        "last_changed": "2023-11-29T03:20:04.319062+00:00",
                        "last_updated": "2023-11-29T03:20:04.319062+00:00",
                        "context": {
                          "id": "01HGCHEGYZ753PHMD4PXVN5BCH",
                          "parent_id": null,
                          "user_id": null
                        }
                      },
                      "for": null,
                      "attribute": null,
                      "description": "state of binary_sensor.zigbee_motion_sensor_motion"
                    }
                  }
                },
                "result": {
                  "delay": 60.0,
                  "done": true
                }
              }
            ],
            "action/0/default/9": [
              {
                "path": "action/0/default/9",
                "timestamp": "2023-11-29T03:21:04.321841+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "transition": 0,
                      "entity_id": [
                        "light.bedroom_light"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "light.bedroom_light"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/10": [
              {
                "path": "action/0/default/10",
                "timestamp": "2023-11-29T03:21:04.387943+00:00",
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/default/11": [
              {
                "path": "action/0/default/11",
                "timestamp": "2023-11-29T03:21:04.390390+00:00",
                "result": {
                  "params": {
                    "domain": "scene",
                    "service": "turn_on",
                    "service_data": {
                      "transition": 0,
                      "entity_id": []
                    },
                    "target": {
                      "entity_id": []
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.zigbee_motion_sensor_motion"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.zigbee_motion_sensor_motion"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.zigbee_motion_sensor_motion"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.zigbee_motion_sensor_motion"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGCHCJKR14NQ8G5V1804K8JF",
            "parent_id": "01HGCHCJKQP740FJ3ZMY5ZK4WN",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/default/11",
          "run_id": "e7a9bcaced47bdc5ec7a7f92f5d34443",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T03:19:00.472192+00:00",
            "finish": "2023-11-29T03:21:04.391409+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "state of binary_sensor.zigbee_motion_sensor_motion"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "efb6df3c4865392ca8b4b99a822d3860",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T04:00:00.274794+00:00",
            "finish": "2023-11-29T04:00:00.279901+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time",
          "trace": {
            "trigger/10": [
              {
                "path": "trigger/10",
                "timestamp": "2023-11-29T04:00:00.277178+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-29T03:19:00.477002+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-28T22:08:09.365210+00:00",
                    "last_updated": "2023-11-29T03:21:04.391225+00:00",
                    "context": {
                      "id": "01HGCHGBM749QGPXAMGCET0AGN",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t10",
                    "idx": "10",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-29T01:00:00.274575-03:00",
                    "description": "time",
                    "entity_id": null
                  },
                  "motion_trigger": [
                    "binary_sensor.zigbee_motion_sensor_motion"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T04:00:00.277224+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T04:00:00.277264+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-29T04:00:00.277301+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.277339+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-29T04:00:00.277418+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-29T04:00:00.277454+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.277490+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-29T04:00:00.277559+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0": [
              {
                "path": "condition/0/conditions/2/conditions/0",
                "timestamp": "2023-11-29T04:00:00.277593+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/2/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.277629+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2023-11-29T04:00:00.277695+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0": [
              {
                "path": "condition/0/conditions/3/conditions/0",
                "timestamp": "2023-11-29T04:00:00.277730+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/3/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.277764+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/4": [
              {
                "path": "condition/0/conditions/4",
                "timestamp": "2023-11-29T04:00:00.277828+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/4/conditions/0": [
              {
                "path": "condition/0/conditions/4/conditions/0",
                "timestamp": "2023-11-29T04:00:00.277862+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5": [
              {
                "path": "condition/0/conditions/5",
                "timestamp": "2023-11-29T04:00:00.278005+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278041+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278073+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5/conditions/1": [
              {
                "path": "condition/0/conditions/5/conditions/1",
                "timestamp": "2023-11-29T04:00:00.278204+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/1/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278240+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/6": [
              {
                "path": "condition/0/conditions/6",
                "timestamp": "2023-11-29T04:00:00.278376+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/6/conditions/0": [
              {
                "path": "condition/0/conditions/6/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278413+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7": [
              {
                "path": "condition/0/conditions/7",
                "timestamp": "2023-11-29T04:00:00.278464+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7/conditions/0": [
              {
                "path": "condition/0/conditions/7/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278497+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8": [
              {
                "path": "condition/0/conditions/8",
                "timestamp": "2023-11-29T04:00:00.278547+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0": [
              {
                "path": "condition/0/conditions/8/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278580+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/8/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.278615+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/9": [
              {
                "path": "condition/0/conditions/9",
                "timestamp": "2023-11-29T04:00:00.278680+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0": [
              {
                "path": "condition/0/conditions/9/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278713+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/9/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.278748+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/10": [
              {
                "path": "condition/0/conditions/10",
                "timestamp": "2023-11-29T04:00:00.278811+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0": [
              {
                "path": "condition/0/conditions/10/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278845+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/10/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.278880+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/11": [
              {
                "path": "condition/0/conditions/11",
                "timestamp": "2023-11-29T04:00:00.278944+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/11/conditions/0": [
              {
                "path": "condition/0/conditions/11/conditions/0",
                "timestamp": "2023-11-29T04:00:00.278978+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12": [
              {
                "path": "condition/0/conditions/12",
                "timestamp": "2023-11-29T04:00:00.279110+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0",
                "timestamp": "2023-11-29T04:00:00.279146+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0/conditions/0",
                "timestamp": "2023-11-29T04:00:00.279178+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12/conditions/1": [
              {
                "path": "condition/0/conditions/12/conditions/1",
                "timestamp": "2023-11-29T04:00:00.279308+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/1/conditions/0",
                "timestamp": "2023-11-29T04:00:00.279358+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/13": [
              {
                "path": "condition/0/conditions/13",
                "timestamp": "2023-11-29T04:00:00.279505+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/13/conditions/0": [
              {
                "path": "condition/0/conditions/13/conditions/0",
                "timestamp": "2023-11-29T04:00:00.279541+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "light.bedroom_light"
                  ]
                }
              }
            ],
            "condition/0/conditions/14": [
              {
                "path": "condition/0/conditions/14",
                "timestamp": "2023-11-29T04:00:00.279760+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0": [
              {
                "path": "condition/0/conditions/14/conditions/0",
                "timestamp": "2023-11-29T04:00:00.279798+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/14/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.279833+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.zigbee_motion_sensor_motion"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.zigbee_motion_sensor_motion"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.zigbee_motion_sensor_motion"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.zigbee_motion_sensor_motion"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGCKQMRJ1T75WW5MGT5KKZ93",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "efb6df3c4865392ca8b4b99a822d3860",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T04:00:00.274794+00:00",
            "finish": "2023-11-29T04:00:00.279901+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time"
        }
      }
    ],
    "automation.1684086727943": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "5aa6c9c1437f5f6a817629579bde4ae7",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:41:18.998859+00:00",
            "finish": "2023-11-29T03:41:18.999474+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:41:18.999335+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-28T18:32:55.736628+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T22:08:09.364434+00:00",
                    "last_updated": "2023-11-28T22:08:09.364434+00:00",
                    "context": {
                      "id": "01HGBZKCMMT4YV8AVDTQXA66VD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713285,
                        "longitude": -49.2995981,
                        "gps_accuracy": 12,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:30:31.194276+00:00",
                      "context": {
                        "id": "01HGCJ1N4TJKE2AFR016WD851W",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713392,
                        "longitude": -49.2996383,
                        "gps_accuracy": 10,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:41:18.998288+00:00",
                      "context": {
                        "id": "01HGCJNDRPYB8N085VVMVYFFDF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:41:18.999372+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGCJNDRPME9EW2M3WAZP4PDR",
            "parent_id": "01HGCJNDRPYB8N085VVMVYFFDF",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "5aa6c9c1437f5f6a817629579bde4ae7",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:41:18.998859+00:00",
            "finish": "2023-11-29T03:41:18.999474+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "7c316581c0be07b0318fc5b076759a8e",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:44:31.248826+00:00",
            "finish": "2023-11-29T03:44:31.249525+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:44:31.249381+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-28T18:32:55.736628+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T22:08:09.364434+00:00",
                    "last_updated": "2023-11-28T22:08:09.364434+00:00",
                    "context": {
                      "id": "01HGBZKCMMT4YV8AVDTQXA66VD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713392,
                        "longitude": -49.2996383,
                        "gps_accuracy": 10,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:41:18.998288+00:00",
                      "context": {
                        "id": "01HGCJNDRPYB8N085VVMVYFFDF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713392,
                        "longitude": -49.2996383,
                        "gps_accuracy": 100,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:44:31.248191+00:00",
                      "context": {
                        "id": "01HGCJV9GGW9V2V4GPDDNV2MKZ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:44:31.249420+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGCJV9GG65BXNXP6DHMAVDYW",
            "parent_id": "01HGCJV9GGW9V2V4GPDDNV2MKZ",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "7c316581c0be07b0318fc5b076759a8e",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:44:31.248826+00:00",
            "finish": "2023-11-29T03:44:31.249525+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "fea2da52f7206c663c93d0ef827a7455",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:47:53.773309+00:00",
            "finish": "2023-11-29T03:47:53.773957+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:47:53.773816+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-28T18:32:55.736628+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T22:08:09.364434+00:00",
                    "last_updated": "2023-11-28T22:08:09.364434+00:00",
                    "context": {
                      "id": "01HGBZKCMMT4YV8AVDTQXA66VD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713392,
                        "longitude": -49.2996383,
                        "gps_accuracy": 100,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:44:31.248191+00:00",
                      "context": {
                        "id": "01HGCJV9GGW9V2V4GPDDNV2MKZ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713213,
                        "longitude": -49.299586,
                        "gps_accuracy": 20,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:47:53.772138+00:00",
                      "context": {
                        "id": "01HGCK1F9CPDKT48F4RXZS4XJ8",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:47:53.773853+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGCK1F9D3C3J3B7C622VXQR5",
            "parent_id": "01HGCK1F9CPDKT48F4RXZS4XJ8",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "fea2da52f7206c663c93d0ef827a7455",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:47:53.773309+00:00",
            "finish": "2023-11-29T03:47:53.773957+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "2adc01c5d1d40de129adb7684a605a55",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:56:33.288200+00:00",
            "finish": "2023-11-29T03:56:33.288864+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:56:33.288723+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-28T18:32:55.736628+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T22:08:09.364434+00:00",
                    "last_updated": "2023-11-28T22:08:09.364434+00:00",
                    "context": {
                      "id": "01HGBZKCMMT4YV8AVDTQXA66VD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713213,
                        "longitude": -49.299586,
                        "gps_accuracy": 20,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:47:53.772138+00:00",
                      "context": {
                        "id": "01HGCK1F9CPDKT48F4RXZS4XJ8",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713082,
                        "longitude": -49.2995972,
                        "gps_accuracy": 10,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:56:33.285913+00:00",
                      "context": {
                        "id": "01HGCKHAM503R8AA1SM325VMSX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:56:33.288761+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGCKHAM867N3X9F0K4SHB69E",
            "parent_id": "01HGCKHAM503R8AA1SM325VMSX",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "2adc01c5d1d40de129adb7684a605a55",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:56:33.288200+00:00",
            "finish": "2023-11-29T03:56:33.288864+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "ed66467a22da3310033d46de39164c85",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:58:32.980784+00:00",
            "finish": "2023-11-29T03:58:32.981499+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:58:32.981329+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-28T18:32:55.736628+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T22:08:09.364434+00:00",
                    "last_updated": "2023-11-28T22:08:09.364434+00:00",
                    "context": {
                      "id": "01HGBZKCMMT4YV8AVDTQXA66VD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713082,
                        "longitude": -49.2995972,
                        "gps_accuracy": 10,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:56:33.285913+00:00",
                      "context": {
                        "id": "01HGCKHAM503R8AA1SM325VMSX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713284,
                        "longitude": -49.2996045,
                        "gps_accuracy": 11,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T22:08:05.971611+00:00",
                      "last_updated": "2023-11-29T03:58:32.979335+00:00",
                      "context": {
                        "id": "01HGCKMZGK4TQ2S2V5FC4K7F0N",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:58:32.981388+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGCKMZGMJENEN33VYY1EQACT",
            "parent_id": "01HGCKMZGK4TQ2S2V5FC4K7F0N",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "ed66467a22da3310033d46de39164c85",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:58:32.980784+00:00",
            "finish": "2023-11-29T03:58:32.981499+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      }
    ],
    "automation.1683953508588": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "6c24aef484e1fcf7903312df96e85293",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:50:10.606483+00:00",
            "finish": "2023-11-29T03:50:10.606632+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:50:10.606512+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T22:08:09.364338+00:00",
                    "last_updated": "2023-11-28T22:08:09.364338+00:00",
                    "context": {
                      "id": "01HGBZKCMMXSFT49GPDZMHJRM5",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "78",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:49:29.584127+00:00",
                      "last_updated": "2023-11-29T03:49:29.584127+00:00",
                      "context": {
                        "id": "01HGCK4CVGZCF56QXA4TBERFMV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "79",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:50:10.606337+00:00",
                      "last_updated": "2023-11-29T03:50:10.606337+00:00",
                      "context": {
                        "id": "01HGCK5MXEX88Q2VXTDY47AK31",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:50:10.606529+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGCK5MXEAFGKQ0B7JBNJGKWG",
            "parent_id": "01HGCK5MXEX88Q2VXTDY47AK31",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "6c24aef484e1fcf7903312df96e85293",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:50:10.606483+00:00",
            "finish": "2023-11-29T03:50:10.606632+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "df983827f30305d6b6976351b4d252ef",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:56:34.038288+00:00",
            "finish": "2023-11-29T03:56:34.038545+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:56:34.038338+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T22:08:09.364338+00:00",
                    "last_updated": "2023-11-28T22:08:09.364338+00:00",
                    "context": {
                      "id": "01HGBZKCMMXSFT49GPDZMHJRM5",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "79",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:50:10.606337+00:00",
                      "last_updated": "2023-11-29T03:50:10.606337+00:00",
                      "context": {
                        "id": "01HGCK5MXEX88Q2VXTDY47AK31",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "88",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-80",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:56:34.037611+00:00",
                      "last_updated": "2023-11-29T03:56:34.037611+00:00",
                      "context": {
                        "id": "01HGCKHBBN3N50VHQTBFMNVY6Z",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:56:34.038372+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGCKHBBPQTM024V8NZ9WNTK5",
            "parent_id": "01HGCKHBBN3N50VHQTBFMNVY6Z",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "df983827f30305d6b6976351b4d252ef",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:56:34.038288+00:00",
            "finish": "2023-11-29T03:56:34.038545+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "9542989f102016f8a1993b9a76433cf4",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:57:02.586022+00:00",
            "finish": "2023-11-29T03:57:02.586298+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:57:02.586074+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T22:08:09.364338+00:00",
                    "last_updated": "2023-11-28T22:08:09.364338+00:00",
                    "context": {
                      "id": "01HGBZKCMMXSFT49GPDZMHJRM5",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "88",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-80",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:56:34.037611+00:00",
                      "last_updated": "2023-11-29T03:56:34.037611+00:00",
                      "context": {
                        "id": "01HGCKHBBN3N50VHQTBFMNVY6Z",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "89",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-80",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:57:02.585744+00:00",
                      "last_updated": "2023-11-29T03:57:02.585744+00:00",
                      "context": {
                        "id": "01HGCKJ77SGXPQ94T9E667CD2Q",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:57:02.586109+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGCKJ77SW8M14N2X70XJ4RQ5",
            "parent_id": "01HGCKJ77SGXPQ94T9E667CD2Q",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "9542989f102016f8a1993b9a76433cf4",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:57:02.586022+00:00",
            "finish": "2023-11-29T03:57:02.586298+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "11d381534f7e0fe5c22f8e873a4ef16e",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:58:33.648997+00:00",
            "finish": "2023-11-29T03:58:33.649200+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:58:33.649038+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T22:08:09.364338+00:00",
                    "last_updated": "2023-11-28T22:08:09.364338+00:00",
                    "context": {
                      "id": "01HGBZKCMMXSFT49GPDZMHJRM5",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "89",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-80",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:57:02.585744+00:00",
                      "last_updated": "2023-11-29T03:57:02.585744+00:00",
                      "context": {
                        "id": "01HGCKJ77SGXPQ94T9E667CD2Q",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "91",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-90",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:58:33.647777+00:00",
                      "last_updated": "2023-11-29T03:58:33.647777+00:00",
                      "context": {
                        "id": "01HGCKN05F6V4PAH1VVKKDQ10C",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:58:33.649061+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGCKN05G1N55E1QBH4SVCZV1",
            "parent_id": "01HGCKN05F6V4PAH1VVKKDQ10C",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "11d381534f7e0fe5c22f8e873a4ef16e",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:58:33.648997+00:00",
            "finish": "2023-11-29T03:58:33.649200+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "0dd5219595d6c5a3794b0451bae271c5",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:59:06.129050+00:00",
            "finish": "2023-11-29T03:59:06.129349+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:59:06.129124+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T22:08:09.364338+00:00",
                    "last_updated": "2023-11-28T22:08:09.364338+00:00",
                    "context": {
                      "id": "01HGBZKCMMXSFT49GPDZMHJRM5",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "91",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-90",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:58:33.647777+00:00",
                      "last_updated": "2023-11-29T03:58:33.647777+00:00",
                      "context": {
                        "id": "01HGCKN05F6V4PAH1VVKKDQ10C",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "92",
                      "attributes": {
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-charging-90",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-29T03:59:06.128767+00:00",
                      "last_updated": "2023-11-29T03:59:06.128767+00:00",
                      "context": {
                        "id": "01HGCKNZWGA472T43N63C1AD77",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:59:06.129160+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGCKNZWHJZ1MS09D43707P1B",
            "parent_id": "01HGCKNZWGA472T43N63C1AD77",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "0dd5219595d6c5a3794b0451bae271c5",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:59:06.129050+00:00",
            "finish": "2023-11-29T03:59:06.129349+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      }
    ],
    "automation.1684208941685": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "9de4fa0ada476d9d538865f4382e9c21",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:20:00.050938+00:00",
            "finish": "2023-11-29T03:20:00.051124+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-29T03:20:00.050992+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T22:08:09.364815+00:00",
                    "last_updated": "2023-11-28T22:08:09.364815+00:00",
                    "context": {
                      "id": "01HGBZKCMMSJSNQYEAZ7JYSC2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-29T00:20:00.050712-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:20:00.051028+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-29T03:20:00.051063+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCHECSJC42Q436CTVEPJ930",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "9de4fa0ada476d9d538865f4382e9c21",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:20:00.050938+00:00",
            "finish": "2023-11-29T03:20:00.051124+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "18ea8872c5238d26f3e4f6b8c7344aa0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:30:00.050624+00:00",
            "finish": "2023-11-29T03:30:00.050730+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-29T03:30:00.050657+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T22:08:09.364815+00:00",
                    "last_updated": "2023-11-28T22:08:09.364815+00:00",
                    "context": {
                      "id": "01HGBZKCMMSJSNQYEAZ7JYSC2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-29T00:30:00.050475-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:30:00.050679+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-29T03:30:00.050698+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCJ0PQJZP44X3MPWG12CJWY",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "18ea8872c5238d26f3e4f6b8c7344aa0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:30:00.050624+00:00",
            "finish": "2023-11-29T03:30:00.050730+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "a47d6ec7126ecabad89b189bd1315ec7",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:40:00.051049+00:00",
            "finish": "2023-11-29T03:40:00.051242+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-29T03:40:00.051106+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T22:08:09.364815+00:00",
                    "last_updated": "2023-11-28T22:08:09.364815+00:00",
                    "context": {
                      "id": "01HGBZKCMMSJSNQYEAZ7JYSC2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-29T00:40:00.050818-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:40:00.051144+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-29T03:40:00.051180+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCJK0NKSGD0HD4KH21PBRKH",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "a47d6ec7126ecabad89b189bd1315ec7",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:40:00.051049+00:00",
            "finish": "2023-11-29T03:40:00.051242+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "9a1bd9a86b211d610207133db3bb9740",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:50:00.050603+00:00",
            "finish": "2023-11-29T03:50:00.050767+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-29T03:50:00.050652+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T22:08:09.364815+00:00",
                    "last_updated": "2023-11-28T22:08:09.364815+00:00",
                    "context": {
                      "id": "01HGBZKCMMSJSNQYEAZ7JYSC2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-29T00:50:00.050389-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:50:00.050683+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-29T03:50:00.050714+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCK5AKJ9F887CKQN6XW89C1",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "9a1bd9a86b211d610207133db3bb9740",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:50:00.050603+00:00",
            "finish": "2023-11-29T03:50:00.050767+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "489122a4e03a5ad432fab0c13c779c2a",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T04:00:00.050931+00:00",
            "finish": "2023-11-29T04:00:00.051136+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-29T04:00:00.050993+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T22:08:09.364815+00:00",
                    "last_updated": "2023-11-28T22:08:09.364815+00:00",
                    "context": {
                      "id": "01HGBZKCMMSJSNQYEAZ7JYSC2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-29T01:00:00.050654-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T04:00:00.051033+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-29T04:00:00.051070+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCKQMHJHH7WTH8B9QCXE6A9",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "489122a4e03a5ad432fab0c13c779c2a",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T04:00:00.050931+00:00",
            "finish": "2023-11-29T04:00:00.051136+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      }
    ],
    "automation.1700481253602": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "038319c77662b2da5d2a3cdbaee0d2e6",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T11:05:00.385189+00:00",
            "finish": "2023-11-26T11:05:03.295937+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T11:05:00.385249+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.jellyfin_turn_on",
                    "state": "on",
                    "attributes": {
                      "id": "1700481253602",
                      "last_triggered": "2023-11-25T11:05:00.261411+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "JELLYFIN - Turn on"
                    },
                    "last_changed": "2023-11-26T11:01:53.602003+00:00",
                    "last_updated": "2023-11-26T11:01:53.602003+00:00",
                    "context": {
                      "id": "01HG5MNZT23YTYMZDEBCW3ZK0G",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T08:05:00.384916-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T11:05:00.385619+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG5MVP7151JJ7C4G49QBPEHB",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "docker_start_jellyfin",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1700481253602",
            "alias": "JELLYFIN - Turn on",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:05:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "shell_command.docker_start_jellyfin",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG5MVP7151JJ7C4G49QBPEHB",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "038319c77662b2da5d2a3cdbaee0d2e6",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T11:05:00.385189+00:00",
            "finish": "2023-11-26T11:05:03.295937+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "382bfb57dc1b376307d04a13522b7e72",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T11:05:00.480310+00:00",
            "finish": "2023-11-27T11:05:03.012790+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T11:05:00.480347+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.jellyfin_turn_on",
                    "state": "on",
                    "attributes": {
                      "id": "1700481253602",
                      "last_triggered": "2023-11-26T11:05:00.385369+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "JELLYFIN - Turn on"
                    },
                    "last_changed": "2023-11-27T11:01:53.205381+00:00",
                    "last_updated": "2023-11-27T11:01:53.205381+00:00",
                    "context": {
                      "id": "01HG872PDNTYWZGJSBJ1EW6XEF",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T08:05:00.480112-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T11:05:00.480588+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG878DA0EYA1AJXEWACENG4M",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "docker_start_jellyfin",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1700481253602",
            "alias": "JELLYFIN - Turn on",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:05:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "shell_command.docker_start_jellyfin",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG878DA0EYA1AJXEWACENG4M",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "382bfb57dc1b376307d04a13522b7e72",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T11:05:00.480310+00:00",
            "finish": "2023-11-27T11:05:03.012790+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "def00472fcc5f1f3217103350f7bdb83",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T11:05:00.092600+00:00",
            "finish": "2023-11-28T11:05:02.356605+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T11:05:00.092666+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.jellyfin_turn_on",
                    "state": "on",
                    "attributes": {
                      "id": "1700481253602",
                      "last_triggered": "2023-11-27T11:05:00.480428+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "JELLYFIN - Turn on"
                    },
                    "last_changed": "2023-11-28T11:01:51.128550+00:00",
                    "last_updated": "2023-11-28T11:01:51.128550+00:00",
                    "context": {
                      "id": "01HGASFBCRG561S9JSTFDSH9NJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T08:05:00.092315-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T11:05:00.093074+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGASN3XWTBY6EKH89WC6D4CE",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "docker_start_jellyfin",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1700481253602",
            "alias": "JELLYFIN - Turn on",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:05:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "shell_command.docker_start_jellyfin",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGASN3XWTBY6EKH89WC6D4CE",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "def00472fcc5f1f3217103350f7bdb83",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T11:05:00.092600+00:00",
            "finish": "2023-11-28T11:05:02.356605+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time"
        }
      }
    ],
    "automation.1684209316498": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "cc3b55c4af132ebc7582f91cd15fbe92",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:06:13.806277+00:00",
            "finish": "2023-11-26T11:06:13.806463+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T11:06:13.806332+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684209316498",
                      "last_triggered": "2023-10-20T14:01:40.005739+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off heater"
                    },
                    "last_changed": "2023-11-26T11:01:53.600857+00:00",
                    "last_updated": "2023-11-26T11:01:53.600857+00:00",
                    "context": {
                      "id": "01HG5MNZT0XSZMQ34SG8RZV93V",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.office_temperature_sensor_temperature",
                    "below": null,
                    "above": "input_number.thermostat_temperature",
                    "from_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "unavailable",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-26T11:02:07.506203+00:00",
                      "last_updated": "2023-11-26T11:02:07.506203+00:00",
                      "context": {
                        "id": "01HG5MPDCJCXQNNNW1QEKS1VE4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "22.5",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-26T11:06:13.804401+00:00",
                      "last_updated": "2023-11-26T11:06:13.804401+00:00",
                      "context": {
                        "id": "01HG5MXXXC45YSNKWWHZA6Q2WE",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "numeric state of sensor.office_temperature_sensor_temperature"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T11:06:13.806370+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T11:06:13.806407+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684209316498",
            "alias": "SWITCH - Turn off heater",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0
                },
                "above": "input_number.thermostat_temperature"
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "above": "input_number.thermostat_temperature"
              }
            ],
            "action": [
              {
                "service": "switch.turn_off",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG5MXXXE1PTJC5PMW6TYTHBR",
            "parent_id": "01HG5MXXXC45YSNKWWHZA6Q2WE",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "cc3b55c4af132ebc7582f91cd15fbe92",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:06:13.806277+00:00",
            "finish": "2023-11-26T11:06:13.806463+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "60d8861f0122f6b43ec8635d4dfdb81b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:06:39.998325+00:00",
            "finish": "2023-11-27T11:06:39.998513+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T11:06:39.998380+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684209316498",
                      "last_triggered": "2023-10-20T14:01:40.005739+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off heater"
                    },
                    "last_changed": "2023-11-27T11:01:53.204149+00:00",
                    "last_updated": "2023-11-27T11:01:53.204149+00:00",
                    "context": {
                      "id": "01HG872PDMMA0GGHC97E9K2193",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.office_temperature_sensor_temperature",
                    "below": null,
                    "above": "input_number.thermostat_temperature",
                    "from_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "unavailable",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-27T11:02:07.704492+00:00",
                      "last_updated": "2023-11-27T11:02:07.704492+00:00",
                      "context": {
                        "id": "01HG8734JRS6K462N34GN0G6DB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "22.1",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-27T11:06:39.996403+00:00",
                      "last_updated": "2023-11-27T11:06:39.996403+00:00",
                      "context": {
                        "id": "01HG87BEFW55A10FBTVM4TZG1Y",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "numeric state of sensor.office_temperature_sensor_temperature"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:06:39.998419+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-27T11:06:39.998453+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684209316498",
            "alias": "SWITCH - Turn off heater",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0
                },
                "above": "input_number.thermostat_temperature"
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "above": "input_number.thermostat_temperature"
              }
            ],
            "action": [
              {
                "service": "switch.turn_off",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG87BEFY3QN0SJ3M13G01MEP",
            "parent_id": "01HG87BEFW55A10FBTVM4TZG1Y",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "60d8861f0122f6b43ec8635d4dfdb81b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:06:39.998325+00:00",
            "finish": "2023-11-27T11:06:39.998513+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "43be9ab44edf93d6e825a89ab2073de2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:07:02.932450+00:00",
            "finish": "2023-11-28T11:07:02.932569+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T11:07:02.932494+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684209316498",
                      "last_triggered": "2023-10-20T14:01:40.005739+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off heater"
                    },
                    "last_changed": "2023-11-28T11:01:51.127866+00:00",
                    "last_updated": "2023-11-28T11:01:51.127866+00:00",
                    "context": {
                      "id": "01HGASFBCQQ8PCN6MMVWNFMDFN",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.office_temperature_sensor_temperature",
                    "below": null,
                    "above": "input_number.thermostat_temperature",
                    "from_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "unavailable",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-28T11:02:05.599067+00:00",
                      "last_updated": "2023-11-28T11:02:05.599067+00:00",
                      "context": {
                        "id": "01HGASFSGZ19RD1SN6DM5NAWJF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "22.3",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-28T11:07:02.931075+00:00",
                      "last_updated": "2023-11-28T11:07:02.931075+00:00",
                      "context": {
                        "id": "01HGASRVWK26R6EPM2DJQK0YX9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "numeric state of sensor.office_temperature_sensor_temperature"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:07:02.932517+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-28T11:07:02.932537+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684209316498",
            "alias": "SWITCH - Turn off heater",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0
                },
                "above": "input_number.thermostat_temperature"
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "above": "input_number.thermostat_temperature"
              }
            ],
            "action": [
              {
                "service": "switch.turn_off",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGASRVWMD7BMSCPZE4652ADK",
            "parent_id": "01HGASRVWK26R6EPM2DJQK0YX9",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "43be9ab44edf93d6e825a89ab2073de2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:07:02.932450+00:00",
            "finish": "2023-11-28T11:07:02.932569+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature"
        }
      }
    ],
    "automation.1684209621936": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1",
          "run_id": "1971aee7debc96596bc8d6a4022effa3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:55:00.334842+00:00",
            "finish": "2023-11-26T11:55:00.335083+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T11:55:00.334885+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-26T11:01:53.601039+00:00",
                    "last_updated": "2023-11-26T11:01:53.601039+00:00",
                    "context": {
                      "id": "01HG5MNZT1XQ7G4NQJDF76TTVH",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T08:55:00.334613-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T11:55:00.334923+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-26T11:55:00.334951+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.334967"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "sun",
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-26T11:55:00.335023+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:24:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.335041"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon"
                  ],
                  "now_weekday": "sun",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG5QQ7VEEX13YR1N55AKBX91",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1",
          "run_id": "1971aee7debc96596bc8d6a4022effa3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:55:00.334842+00:00",
            "finish": "2023-11-26T11:55:00.335083+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "582ed3a9cd85d736b9817c717d849c11",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:25:00.138463+00:00",
            "finish": "2023-11-27T11:25:00.138805+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T11:25:00.138512+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-27T11:01:53.204375+00:00",
                    "last_updated": "2023-11-27T11:01:53.204375+00:00",
                    "context": {
                      "id": "01HG872PDM8HEAGBPMFQG40G2R",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T08:25:00.138202-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:25:00.138553+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T11:25:00.138582+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.138600"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T11:25:00.138647+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:24:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.138662"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-27T11:25:00.138716+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-27T11:25:00.138751+00:00",
                "result": {
                  "result": false,
                  "state": "Cool",
                  "wanted_state": "Heat"
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG88D0VA3B7HPM05J51SX3D0",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "582ed3a9cd85d736b9817c717d849c11",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:25:00.138463+00:00",
            "finish": "2023-11-27T11:25:00.138805+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "86c7f3ff08306d2bbd84ca73bad98f17",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:55:00.415943+00:00",
            "finish": "2023-11-27T11:55:00.416376+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T11:55:00.416003+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.872577+00:00",
                    "last_updated": "2023-11-27T11:37:20.872577+00:00",
                    "context": {
                      "id": "01HG893M783YTYMZDEBCW3ZK0G",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T08:55:00.415616-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:55:00.416051+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T11:55:00.416080+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.416096"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T11:55:00.416153+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:24:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.416198"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-27T11:55:00.416278+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-27T11:55:00.416316+00:00",
                "result": {
                  "result": false,
                  "state": "Cool",
                  "wanted_state": "Heat"
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG8A3YXZC37V0TT5HNQTVWTG",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "86c7f3ff08306d2bbd84ca73bad98f17",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:55:00.415943+00:00",
            "finish": "2023-11-27T11:55:00.416376+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1",
          "run_id": "6b5b9ce8308cc7e3a08b6bef4b0d92c8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:25:00.262038+00:00",
            "finish": "2023-11-28T11:25:00.262355+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T11:25:00.262124+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-28T11:01:51.127960+00:00",
                    "last_updated": "2023-11-28T11:01:51.127960+00:00",
                    "context": {
                      "id": "01HGASFBCQRSGA3TN666RR4BWJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T08:25:00.261777-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:25:00.262170+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T11:25:00.262199+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.262215"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T11:25:00.262263+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:24:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.262281"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon"
                  ],
                  "now_weekday": "tue",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGATSQZ55GGGGTBNT1K7HJD1",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1",
          "run_id": "6b5b9ce8308cc7e3a08b6bef4b0d92c8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:25:00.262038+00:00",
            "finish": "2023-11-28T11:25:00.262355+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "80c9b222e9cf42911485ca86dc73aa02",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:55:00.500170+00:00",
            "finish": "2023-11-28T11:55:00.500459+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T11:55:00.500211+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-28T11:01:51.127960+00:00",
                    "last_updated": "2023-11-28T11:01:51.127960+00:00",
                    "context": {
                      "id": "01HGASFBCQRSGA3TN666RR4BWJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T08:55:00.499939-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:55:00.500251+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T11:55:00.500279+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.500295"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-28T11:55:00.500371+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-28T11:55:00.500407+00:00",
                "result": {
                  "result": false,
                  "state": "Cool",
                  "wanted_state": "Heat"
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGAWGP0MQ5N1XYPJDJG7SZN0",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "80c9b222e9cf42911485ca86dc73aa02",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:55:00.500170+00:00",
            "finish": "2023-11-28T11:55:00.500459+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      }
    ],
    "automation.1672712190023": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "a75fea175464a059064dd4b9f90ab348",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:25:00.371056+00:00",
            "finish": "2023-11-26T11:25:00.371239+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T11:25:00.371120+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.pc_daily_christian_pc_wol",
                    "state": "on",
                    "attributes": {
                      "id": "1672712190023",
                      "last_triggered": "2023-11-24T11:25:00.070904+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "PC - Daily Christian-PC WoL"
                    },
                    "last_changed": "2023-11-26T11:01:53.596196+00:00",
                    "last_updated": "2023-11-26T11:01:53.596196+00:00",
                    "context": {
                      "id": "01HG5MNZSWF959RQ7TNECYZ705",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T08:25:00.370785-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T11:25:00.371165+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.371185"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "sun",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1672712190023",
            "alias": "PC - Daily Christian-PC WoL",
            "description": "Bussiness day WoL",
            "trigger": [
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri"
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "target": {
                  "entity_id": "switch.christian_pc_wol"
                },
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG5P0A2K5Z08GQTMR4XXAXQC",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "a75fea175464a059064dd4b9f90ab348",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:25:00.371056+00:00",
            "finish": "2023-11-26T11:25:00.371239+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "17dea253dea19d33fc8248aa537782c3",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T11:25:00.469684+00:00",
            "finish": "2023-11-27T11:25:01.478415+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T11:25:00.469730+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.pc_daily_christian_pc_wol",
                    "state": "on",
                    "attributes": {
                      "id": "1672712190023",
                      "last_triggered": "2023-11-24T11:25:00.070904+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "PC - Daily Christian-PC WoL"
                    },
                    "last_changed": "2023-11-27T11:01:53.199400+00:00",
                    "last_updated": "2023-11-27T11:01:53.199400+00:00",
                    "context": {
                      "id": "01HG872PDFNBAEJRMYPV7Z5Y3F",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T08:25:00.469447-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:25:00.469769+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.469788"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T11:25:00.470223+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG88D15NKAJ7NVMTNTTQ3Q4C",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.christian_pc_wol"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672712190023",
            "alias": "PC - Daily Christian-PC WoL",
            "description": "Bussiness day WoL",
            "trigger": [
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri"
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "target": {
                  "entity_id": "switch.christian_pc_wol"
                },
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG88D15NKAJ7NVMTNTTQ3Q4C",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "17dea253dea19d33fc8248aa537782c3",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T11:25:00.469684+00:00",
            "finish": "2023-11-27T11:25:01.478415+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "d0a3b2ddf7c0a98ea1c80e251f062b64",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T11:25:00.388830+00:00",
            "finish": "2023-11-28T11:25:01.397642+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T11:25:00.388871+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.pc_daily_christian_pc_wol",
                    "state": "on",
                    "attributes": {
                      "id": "1672712190023",
                      "last_triggered": "2023-11-27T11:25:00.469944+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "PC - Daily Christian-PC WoL"
                    },
                    "last_changed": "2023-11-28T11:01:51.125177+00:00",
                    "last_updated": "2023-11-28T11:01:51.125177+00:00",
                    "context": {
                      "id": "01HGASFBCN29T6KXGE0EXSKJWK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T08:25:00.388613-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:25:00.388908+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.388926"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T11:25:00.390977+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGATSR34300HSQ06HQHD0ZZK",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.christian_pc_wol"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672712190023",
            "alias": "PC - Daily Christian-PC WoL",
            "description": "Bussiness day WoL",
            "trigger": [
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri"
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "target": {
                  "entity_id": "switch.christian_pc_wol"
                },
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGATSR34300HSQ06HQHD0ZZK",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "d0a3b2ddf7c0a98ea1c80e251f062b64",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T11:25:00.388830+00:00",
            "finish": "2023-11-28T11:25:01.397642+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time"
        }
      }
    ],
    "automation.1673477422415": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/2/entity_id/0",
          "run_id": "1f8c4c9b04c80dd202d3280b6b568833",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T22:09:56.099571+00:00",
            "finish": "2023-11-27T22:09:56.100147+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T22:09:56.099607+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.868081+00:00",
                    "last_updated": "2023-11-27T11:37:20.868081+00:00",
                    "context": {
                      "id": "01HG893M741WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "from_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "off",
                      "attributes": {
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-27T21:12:01.019261+00:00",
                      "last_updated": "2023-11-27T21:12:01.019261+00:00",
                      "context": {
                        "id": "01HG99ZW7VFYBDCCKA2H9WGECB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "on",
                      "attributes": {
                        "round_trip_time_avg": 0.791,
                        "round_trip_time_max": 1.697,
                        "round_trip_time_mdev": "",
                        "round_trip_time_min": 0.3,
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-27T22:09:56.099230+00:00",
                      "last_updated": "2023-11-27T22:09:56.099230+00:00",
                      "context": {
                        "id": "01HG9D9XW3GHPFQR4RTJGRGQ1N",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.christian_pc"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T22:09:56.099642+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T22:09:56.099667+00:00",
                "result": {
                  "wanted_time_after": "2023-11-27T21:51:00.858560+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T22:09:56.099949+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-27T22:09:56.099976+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T22:09:56.100005+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-27T22:09:56.100067+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/entity_id/0": [
              {
                "path": "condition/0/conditions/2/entity_id/0",
                "timestamp": "2023-11-27T22:09:56.100096+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9D9XW3Z4RQ035TW4F8M703",
            "parent_id": "01HG9D9XW3GHPFQR4RTJGRGQ1N",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/2/entity_id/0",
          "run_id": "1f8c4c9b04c80dd202d3280b6b568833",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T22:09:56.099571+00:00",
            "finish": "2023-11-27T22:09:56.100147+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "5825a350bc25a0b3ae7d7f308f2e08df",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:28:26.700442+00:00",
            "finish": "2023-11-28T03:28:26.700640+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T03:28:26.700463+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.868081+00:00",
                    "last_updated": "2023-11-27T11:37:20.868081+00:00",
                    "context": {
                      "id": "01HG893M741WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "from_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "off",
                      "attributes": {
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-27T22:59:01.230996+00:00",
                      "last_updated": "2023-11-27T22:59:01.230996+00:00",
                      "context": {
                        "id": "01HG9G3SZECZBNRQ737T6YJP3Q",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "on",
                      "attributes": {
                        "round_trip_time_avg": 0.557,
                        "round_trip_time_max": 0.813,
                        "round_trip_time_mdev": "",
                        "round_trip_time_min": 0.249,
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-28T03:28:26.699246+00:00",
                      "last_updated": "2023-11-28T03:28:26.699246+00:00",
                      "context": {
                        "id": "01HG9ZH4JB87PGVSFG8J833F1E",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.christian_pc"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T03:28:26.700481+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T03:28:26.700495+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:51:45.252192+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9ZH4JCKEHZEPK1RH5R1V0W",
            "parent_id": "01HG9ZH4JB87PGVSFG8J833F1E",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "5825a350bc25a0b3ae7d7f308f2e08df",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:28:26.700442+00:00",
            "finish": "2023-11-28T03:28:26.700640+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "9850fb33340ab335de9d275010176402",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:25:30.196062+00:00",
            "finish": "2023-11-28T11:25:30.196491+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T11:25:30.196108+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-28T11:01:51.125299+00:00",
                    "last_updated": "2023-11-28T11:01:51.125299+00:00",
                    "context": {
                      "id": "01HGASFBCNGG46EC80FM5GVAZJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "from_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "off",
                      "attributes": {
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-28T11:01:51.165164+00:00",
                      "last_updated": "2023-11-28T11:01:51.165164+00:00",
                      "context": {
                        "id": "01HGASFBDXPDKSMCT2EQCA6WQG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "on",
                      "attributes": {
                        "round_trip_time_avg": 0.338,
                        "round_trip_time_max": 0.338,
                        "round_trip_time_mdev": "",
                        "round_trip_time_min": 0.338,
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-28T11:25:30.193937+00:00",
                      "last_updated": "2023-11-28T11:25:30.193937+00:00",
                      "context": {
                        "id": "01HGATTN6HV8WA5M3PWNY0SWZD",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.christian_pc"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:25:30.196147+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T11:25:30.196174+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:51:45.252192+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGATTN6MEX7CB83BEPSWG9BS",
            "parent_id": "01HGATTN6HV8WA5M3PWNY0SWZD",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "9850fb33340ab335de9d275010176402",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:25:30.196062+00:00",
            "finish": "2023-11-28T11:25:30.196491+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1/conditions/1/entity_id/0",
          "run_id": "4870caee1f708ba8f8a9556fa4bb5147",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T21:52:00.257930+00:00",
            "finish": "2023-11-28T21:52:00.258422+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "sunset",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T21:52:00.257974+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-28T15:21:57.302323+00:00",
                    "last_updated": "2023-11-28T15:21:57.302323+00:00",
                    "context": {
                      "id": "01HGB8BKSPFQ7M888Q4C9YAR31",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "sun",
                    "event": "sunset",
                    "offset": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "sunset"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T21:52:00.258002+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T21:52:00.258024+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:51:45.252192+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T21:52:00.258236+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-28T21:52:00.258261+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T21:52:00.258287+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1/conditions/1": [
              {
                "path": "condition/0/conditions/1/conditions/1",
                "timestamp": "2023-11-28T21:52:00.258340+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/1/entity_id/0",
                "timestamp": "2023-11-28T21:52:00.258366+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBYNT81E50PY0BX1A7RV3SX",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1/conditions/1/entity_id/0",
          "run_id": "4870caee1f708ba8f8a9556fa4bb5147",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T21:52:00.257930+00:00",
            "finish": "2023-11-28T21:52:00.258422+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "sunset"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/2/entity_id/0",
          "run_id": "5e3b5cea401702449f32c422272090b9",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T22:05:32.032807+00:00",
            "finish": "2023-11-28T22:05:32.033450+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T22:05:32.032862+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-28T15:21:57.302323+00:00",
                    "last_updated": "2023-11-28T15:21:57.302323+00:00",
                    "context": {
                      "id": "01HGB8BKSPFQ7M888Q4C9YAR31",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "from_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "off",
                      "attributes": {
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-28T21:40:36.987116+00:00",
                      "last_updated": "2023-11-28T21:40:36.987116+00:00",
                      "context": {
                        "id": "01HGBY0YZVZDTVSCT315FDSDFQ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "on",
                      "attributes": {
                        "round_trip_time_avg": 0.951,
                        "round_trip_time_max": 1.345,
                        "round_trip_time_mdev": "",
                        "round_trip_time_min": 0.79,
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-28T22:05:32.031611+00:00",
                      "last_updated": "2023-11-28T22:05:32.031611+00:00",
                      "context": {
                        "id": "01HGBZEJZZFH2Q2PPZV6F31R7G",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.christian_pc"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T22:05:32.032900+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T22:05:32.032927+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:51:45.252192+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T22:05:32.033251+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-28T22:05:32.033280+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T22:05:32.033312+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-28T22:05:32.033375+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/entity_id/0": [
              {
                "path": "condition/0/conditions/2/entity_id/0",
                "timestamp": "2023-11-28T22:05:32.033401+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBZEK00GH8VJNN17ZMQ9S6Q",
            "parent_id": "01HGBZEJZZFH2Q2PPZV6F31R7G",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/2/entity_id/0",
          "run_id": "5e3b5cea401702449f32c422272090b9",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T22:05:32.032807+00:00",
            "finish": "2023-11-28T22:05:32.033450+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc"
        }
      }
    ],
    "automation.1673494217272": [
      {
        "extended_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "b8f5d4fa893d751642b330bd3f23a8bf",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T13:00:00.428742+00:00",
            "finish": "2023-11-26T16:01:08.774097+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T13:00:00.428787+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.advanced_medication_reminder",
                    "state": "on",
                    "attributes": {
                      "id": "1673494217272",
                      "last_triggered": "2023-11-25T13:00:00.318027+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Advanced medication reminder"
                    },
                    "last_changed": "2023-11-26T11:01:53.597040+00:00",
                    "last_updated": "2023-11-26T11:01:53.597040+00:00",
                    "context": {
                      "id": "01HG5MNZSXJKG1JDR5PN18C143",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T10:00:00.428482-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T13:00:00.429198+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG5VE8HC9QCX0GND1G3YWS9K",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-26T13:00:00.430128+00:00"
              }
            ],
            "action/1/repeat": [
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T13:00:00.430461+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": true,
                    "index": 1
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T13:30:08.898380+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 2
                  },
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T14:00:09.708559+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 3
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T14:30:10.471011+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 4
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T15:00:13.464860+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 5
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T15:30:14.237356+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 6
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T16:00:17.758678+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 7
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T16:01:08.773748+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 8
                  },
                  "wait": {
                    "remaining": 1749.314974762001,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-26T16:01:08.769218+00:00",
                        "context": {
                          "id": "01HG65SY51V29PP3PHCMA5K5CJ",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0": [
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T13:00:00.430499+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T13:30:08.898420+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T14:00:09.708576+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T14:30:10.471046+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T15:00:13.464895+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T15:30:14.237396+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T16:00:17.758717+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T16:01:08.773782+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0/entity_id/0": [
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T13:00:00.430528+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T13:30:08.898450+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T14:00:09.708589+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T14:30:10.471075+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T15:00:13.464922+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T15:30:14.237425+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T16:00:17.758756+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T16:01:08.773809+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ],
            "action/1/repeat/sequence/0": [
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T13:00:00.430872+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T13:30:08.898776+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T14:00:09.708754+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T14:30:10.471400+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T15:00:13.465303+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T15:30:14.237770+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T16:00:17.759108+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/1": [
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T13:00:00.431660+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T13:30:08.899204+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T14:00:09.708953+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T14:30:10.471796+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T15:00:13.465754+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T15:30:14.238184+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T16:00:17.759516+00:00",
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T13:00:00.431806+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T13:30:08.899271+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T14:00:09.708980+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T14:30:10.471853+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T15:00:13.465822+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T15:30:14.238241+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T16:00:17.759573+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T13:00:00.431838+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T13:30:08.899299+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T14:00:09.708993+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T14:30:10.471899+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T15:00:13.465850+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T15:30:14.238268+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T16:00:17.759601+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/2": [
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T13:00:00.432385+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T13:30:08.899777+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T14:00:09.709257+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T14:30:10.472378+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T15:00:13.466342+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T15:30:14.238749+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T16:00:17.760098+00:00"
              }
            ],
            "action/1/repeat/sequence/3": [
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T13:00:08.551720+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T13:30:09.315975+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T14:00:10.053381+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T14:30:10.908011+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T15:00:13.854401+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T15:30:14.811926+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T16:00:18.083702+00:00",
                "result": {
                  "wait": {
                    "remaining": 1749.314974762001,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-26T16:01:08.769218+00:00",
                        "context": {
                          "id": "01HG65SY51V29PP3PHCMA5K5CJ",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                }
              }
            ],
            "action/1/repeat/sequence/4": [
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T13:30:08.553761+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T14:00:09.319548+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T14:30:10.054355+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T15:00:10.909605+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T15:30:13.856219+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T16:00:14.814522+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T16:01:08.770565+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 1749.314974762001,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-26T16:01:08.769218+00:00",
                        "context": {
                          "id": "01HG65SY51V29PP3PHCMA5K5CJ",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T13:30:08.554161+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T14:00:09.319597+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T14:30:10.054438+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T15:00:10.909694+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T15:30:13.856305+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T16:00:14.814600+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T16:01:08.770662+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T13:30:08.554198+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T14:00:09.319613+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T14:30:10.054467+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T15:00:10.909724+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T15:30:13.856336+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T16:00:14.814630+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T16:01:08.770692+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T13:30:08.554406+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T14:00:09.319697+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T14:30:10.054620+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T15:00:10.909890+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T15:30:13.856502+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T16:00:14.814772+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T13:30:08.554440+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T14:00:09.319710+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T14:30:10.054648+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T15:00:10.909919+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T15:30:13.856531+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T16:00:14.814800+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2": [
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T13:30:08.554624+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T14:00:09.319765+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T14:30:10.054763+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T15:00:10.910041+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T15:30:13.856654+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T16:00:14.814916+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T13:30:08.554659+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T14:00:09.319777+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T14:30:10.054790+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T15:00:10.910068+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T15:30:13.856681+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T16:00:14.814943+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/default/0": [
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T13:30:08.555115+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T14:00:09.319998+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T14:30:10.055196+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T15:00:10.910487+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T15:30:13.857123+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T16:00:14.815348+00:00"
              }
            ],
            "action/1/repeat/sequence/4/default/1": [
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T13:30:08.896041+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T14:00:09.708071+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T14:30:10.470174+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T15:00:13.463902+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T15:30:14.236051+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T16:00:17.757511+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/0",
                "timestamp": "2023-11-26T16:01:08.771522+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/1",
                "timestamp": "2023-11-26T16:01:08.772974+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Medication taken",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "time",
                "at": "10:00:00"
              }
            ],
            "mode": "restart",
            "action": [
              {
                "service": "input_boolean.turn_off",
                "target": {
                  "entity_id": "input_boolean.medication"
                }
              },
              {
                "alias": "Notify until the medication has been take",
                "repeat": {
                  "while": [
                    {
                      "condition": "state",
                      "entity_id": "input_boolean.medication",
                      "state": "off"
                    }
                  ],
                  "sequence": [
                    {
                      "service": "logbook.log",
                      "data": {
                        "name": "Medication Reminder",
                        "message": "Reminder sent",
                        "entity_id": "input_boolean.medication"
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ true }}",
                          "sequence": []
                        }
                      ]
                    },
                    {
                      "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                      "domain": "mobile_app",
                      "type": "notify",
                      "title": "Medication Reminder",
                      "message": "It's time to take your medication",
                      "data": {
                        "actions": [
                          {
                            "title": "Taken",
                            "action": "taken"
                          },
                          {
                            "title": "Ask later",
                            "action": "later"
                          },
                          {
                            "title": "Skip",
                            "action": "skip"
                          }
                        ],
                        "tag": "input_boolean.medication"
                      }
                    },
                    {
                      "wait_for_trigger": {
                        "platform": "event",
                        "event_type": "mobile_app_notification_action",
                        "event_data": {
                          "tag": "input_boolean.medication"
                        }
                      },
                      "timeout": {
                        "minutes": 30
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'taken' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Medication taken",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'later' }}",
                          "sequence": [
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Postpone reminder",
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "delay": {
                                "minutes": 30
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'skip' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Reminder skipped",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        }
                      ],
                      "default": [
                        {
                          "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                          "domain": "mobile_app",
                          "type": "notify",
                          "message": "clear_notification",
                          "data": {
                            "tag": "input_boolean.medication"
                          }
                        },
                        {
                          "service": "logbook.log",
                          "data": {
                            "name": "Medication Reminder",
                            "message": "No answer time out",
                            "entity_id": "input_boolean.medication"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": "",
            "use_blueprint": {
              "path": "Aohzan/medication_reminder_android.yaml",
              "input": {
                "reminder_time": "10:00:00",
                "notify_device": "c64d919497fe1f5e4c511f1d631e5f77",
                "notification_title": "Medication Reminder",
                "input_boolean": "input_boolean.medication"
              }
            }
          },
          "context": {
            "id": "01HG5VE8HC9QCX0GND1G3YWS9K",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "b8f5d4fa893d751642b330bd3f23a8bf",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T13:00:00.428742+00:00",
            "finish": "2023-11-26T16:01:08.774097+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "2e847014359a406ae709b68e5682eb15",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T13:00:00.443486+00:00",
            "finish": "2023-11-27T16:32:42.547545+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T13:00:00.443518+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.advanced_medication_reminder",
                    "state": "on",
                    "attributes": {
                      "id": "1673494217272",
                      "last_triggered": "2023-11-26T13:00:00.428916+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Advanced medication reminder"
                    },
                    "last_changed": "2023-11-27T11:37:20.868614+00:00",
                    "last_updated": "2023-11-27T11:37:20.868614+00:00",
                    "context": {
                      "id": "01HG893M7429T6KXGE0EXSKJWK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T10:00:00.443263-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T13:00:00.443890+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG8DTZHVPGB7FSH4B2Y4NTQW",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T13:00:00.444827+00:00"
              }
            ],
            "action/1/repeat": [
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T13:00:00.445150+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": true,
                    "index": 1
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T13:30:04.096468+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 2
                  },
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T14:00:04.981386+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 3
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T14:30:05.880820+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 4
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T15:00:06.633005+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 5
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T15:30:07.379703+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 6
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T16:00:08.219573+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 7
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T16:30:09.951661+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 8
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T16:32:42.547202+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 9
                  },
                  "wait": {
                    "remaining": 1647.8184357309983,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-27T16:32:42.543699+00:00",
                        "context": {
                          "id": "01HG8T0EHF8K7EZEMKV0G2H9XH",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0": [
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T13:00:00.445189+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T13:30:04.096502+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T14:00:04.981402+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T14:30:05.880860+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T15:00:06.633039+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T15:30:07.379743+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T16:00:08.219614+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T16:30:09.951701+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T16:32:42.547233+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0/entity_id/0": [
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T13:00:00.445217+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T13:30:04.096528+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T14:00:04.981414+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T14:30:05.880873+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T15:00:06.633066+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T15:30:07.379772+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T16:00:08.219642+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T16:30:09.951730+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T16:32:42.547259+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ],
            "action/1/repeat/sequence/0": [
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T13:00:00.445534+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T13:30:04.096849+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T14:00:04.981571+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T14:30:05.881193+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T15:00:06.633407+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T15:30:07.380103+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T16:00:08.219977+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T16:30:09.952044+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/1": [
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T13:00:00.446613+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T13:30:04.097246+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T14:00:04.981751+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T14:30:05.881582+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T15:00:06.633835+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T15:30:07.380539+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T16:00:08.220414+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T16:30:09.952482+00:00",
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T13:00:00.446780+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T13:30:04.097313+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T14:00:04.981777+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T14:30:05.881637+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T15:00:06.633890+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T15:30:07.380594+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T16:00:08.220465+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T16:30:09.952538+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T13:00:00.446817+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T13:30:04.097342+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T14:00:04.981789+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T14:30:05.881664+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T15:00:06.633917+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T15:30:07.380620+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:00:08.220496+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:30:09.952565+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/2": [
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T13:00:00.447394+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T13:30:04.097817+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T14:00:04.982010+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T14:30:05.882127+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T15:00:06.634452+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T15:30:07.381102+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T16:00:08.220985+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T16:30:09.953039+00:00"
              }
            ],
            "action/1/repeat/sequence/3": [
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T13:00:03.802783+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T13:30:04.423875+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T14:00:05.465735+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T14:30:06.207735+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T15:00:07.014714+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T15:30:07.748831+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T16:00:09.591462+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T16:30:10.361612+00:00",
                "result": {
                  "wait": {
                    "remaining": 1647.8184357309983,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-27T16:32:42.543699+00:00",
                        "context": {
                          "id": "01HG8T0EHF8K7EZEMKV0G2H9XH",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                }
              }
            ],
            "action/1/repeat/sequence/4": [
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T13:30:03.803828+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T14:00:04.425382+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T14:30:05.466941+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T15:00:06.208865+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T15:30:07.016320+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T16:00:07.750404+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T16:30:09.593598+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T16:32:42.545094+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 1647.8184357309983,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-27T16:32:42.543699+00:00",
                        "context": {
                          "id": "01HG8T0EHF8K7EZEMKV0G2H9XH",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T13:30:03.804224+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T14:00:04.425439+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T14:30:05.467022+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T15:00:06.208922+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T15:30:07.016399+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T16:00:07.750500+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T16:30:09.593676+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T16:32:42.545169+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T13:30:03.804262+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T14:00:04.425453+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T14:30:05.467051+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T15:00:06.208936+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T15:30:07.016428+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:00:07.750530+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:30:09.593704+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:32:42.545198+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T13:30:03.804447+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T14:00:04.425547+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T14:30:05.467204+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T15:00:06.209027+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T15:30:07.016584+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T16:00:07.750697+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T16:30:09.593856+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T13:30:03.804479+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T14:00:04.425560+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T14:30:05.467232+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T15:00:06.209040+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T15:30:07.016613+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T16:00:07.750726+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T16:30:09.593884+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2": [
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T13:30:03.804628+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T14:00:04.425614+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T14:30:05.467345+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T15:00:06.209093+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T15:30:07.016732+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T16:00:07.750845+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T16:30:09.593995+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T13:30:03.804664+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T14:00:04.425626+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T14:30:05.467370+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T15:00:06.209105+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T15:30:07.016758+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T16:00:07.750872+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T16:30:09.594022+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/default/0": [
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T13:30:03.805120+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T14:00:04.425853+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T14:30:05.467774+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T15:00:06.209318+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T15:30:07.017159+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T16:00:07.751304+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T16:30:09.594428+00:00"
              }
            ],
            "action/1/repeat/sequence/4/default/1": [
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T13:30:04.095626+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T14:00:04.980983+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T14:30:05.879981+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T15:00:06.632024+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T15:30:07.378699+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T16:00:08.218194+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T16:30:09.950406+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/0",
                "timestamp": "2023-11-27T16:32:42.545680+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/1",
                "timestamp": "2023-11-27T16:32:42.546473+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Medication taken",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "time",
                "at": "10:00:00"
              }
            ],
            "mode": "restart",
            "action": [
              {
                "service": "input_boolean.turn_off",
                "target": {
                  "entity_id": "input_boolean.medication"
                }
              },
              {
                "alias": "Notify until the medication has been take",
                "repeat": {
                  "while": [
                    {
                      "condition": "state",
                      "entity_id": "input_boolean.medication",
                      "state": "off"
                    }
                  ],
                  "sequence": [
                    {
                      "service": "logbook.log",
                      "data": {
                        "name": "Medication Reminder",
                        "message": "Reminder sent",
                        "entity_id": "input_boolean.medication"
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ true }}",
                          "sequence": []
                        }
                      ]
                    },
                    {
                      "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                      "domain": "mobile_app",
                      "type": "notify",
                      "title": "Medication Reminder",
                      "message": "It's time to take your medication",
                      "data": {
                        "actions": [
                          {
                            "title": "Taken",
                            "action": "taken"
                          },
                          {
                            "title": "Ask later",
                            "action": "later"
                          },
                          {
                            "title": "Skip",
                            "action": "skip"
                          }
                        ],
                        "tag": "input_boolean.medication"
                      }
                    },
                    {
                      "wait_for_trigger": {
                        "platform": "event",
                        "event_type": "mobile_app_notification_action",
                        "event_data": {
                          "tag": "input_boolean.medication"
                        }
                      },
                      "timeout": {
                        "minutes": 30
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'taken' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Medication taken",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'later' }}",
                          "sequence": [
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Postpone reminder",
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "delay": {
                                "minutes": 30
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'skip' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Reminder skipped",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        }
                      ],
                      "default": [
                        {
                          "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                          "domain": "mobile_app",
                          "type": "notify",
                          "message": "clear_notification",
                          "data": {
                            "tag": "input_boolean.medication"
                          }
                        },
                        {
                          "service": "logbook.log",
                          "data": {
                            "name": "Medication Reminder",
                            "message": "No answer time out",
                            "entity_id": "input_boolean.medication"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": "",
            "use_blueprint": {
              "path": "Aohzan/medication_reminder_android.yaml",
              "input": {
                "reminder_time": "10:00:00",
                "notify_device": "c64d919497fe1f5e4c511f1d631e5f77",
                "notification_title": "Medication Reminder",
                "input_boolean": "input_boolean.medication"
              }
            }
          },
          "context": {
            "id": "01HG8DTZHVPGB7FSH4B2Y4NTQW",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "2e847014359a406ae709b68e5682eb15",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T13:00:00.443486+00:00",
            "finish": "2023-11-27T16:32:42.547545+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "576baf71ee9c0abcfad1715de136b63a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T13:00:00.076631+00:00",
            "finish": "2023-11-28T15:04:26.166607+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T13:00:00.076680+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.advanced_medication_reminder",
                    "state": "on",
                    "attributes": {
                      "id": "1673494217272",
                      "last_triggered": "2023-11-27T13:00:00.443656+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Advanced medication reminder"
                    },
                    "last_changed": "2023-11-28T11:01:51.125623+00:00",
                    "last_updated": "2023-11-28T11:01:51.125623+00:00",
                    "context": {
                      "id": "01HGASFBCN8RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T10:00:00.076329-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T13:00:00.077131+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGB07P6CH2352V1ZS2XEYGE8",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T13:00:00.078088+00:00"
              }
            ],
            "action/1/repeat": [
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T13:00:00.078456+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": true,
                    "index": 1
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T13:30:00.890288+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 2
                  },
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T14:00:05.187013+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 3
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T14:30:07.286696+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 4
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T15:00:09.145287+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 5
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T15:04:26.162931+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 6
                  },
                  "wait": {
                    "remaining": 1544.6887354770006,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-28T15:04:26.155819+00:00",
                        "context": {
                          "id": "01HGB7BH9BYRK9V7HMSEWPWKND",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0": [
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T13:00:00.078494+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T13:30:00.890329+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T14:00:05.187030+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T14:30:07.286737+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T15:00:09.145324+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T15:04:26.162965+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0/entity_id/0": [
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T13:00:00.078527+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T13:30:00.890360+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T14:00:05.187044+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T14:30:07.286767+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T15:00:09.145354+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T15:04:26.162992+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ],
            "action/1/repeat/sequence/0": [
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T13:00:00.078878+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T13:30:00.890701+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T14:00:05.187211+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T14:30:07.287092+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T15:00:09.145679+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/1": [
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T13:00:00.079331+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T13:30:00.891115+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T14:00:05.187397+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T14:30:07.287499+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T15:00:09.146816+00:00",
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T13:00:00.079472+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T13:30:00.891202+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T14:00:05.187424+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T14:30:07.287555+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T15:00:09.146887+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T13:00:00.079507+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T13:30:00.891230+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T14:00:05.187437+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T14:30:07.287583+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T15:00:09.146917+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/2": [
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T13:00:00.080094+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T13:30:00.891725+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T14:00:05.187666+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T14:30:07.288055+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T15:00:09.147400+00:00"
              }
            ],
            "action/1/repeat/sequence/3": [
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T13:00:00.523630+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T13:30:01.246615+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T14:00:06.972834+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T14:30:07.699856+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T15:00:10.843977+00:00",
                "result": {
                  "wait": {
                    "remaining": 1544.6887354770006,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-28T15:04:26.155819+00:00",
                        "context": {
                          "id": "01HGB7BH9BYRK9V7HMSEWPWKND",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                }
              }
            ],
            "action/1/repeat/sequence/4": [
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T13:30:00.524976+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T14:00:01.247994+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T14:30:06.973996+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T15:00:07.701036+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T15:04:26.156408+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 1544.6887354770006,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-28T15:04:26.155819+00:00",
                        "context": {
                          "id": "01HGB7BH9BYRK9V7HMSEWPWKND",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T13:30:00.525391+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T14:00:01.248087+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T14:30:06.974087+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T15:00:07.701164+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T15:04:26.156479+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T13:30:00.525447+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T14:00:01.248117+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T14:30:06.974118+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T15:00:07.701197+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T15:04:26.156509+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-28T13:30:00.525651+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-28T14:00:01.248280+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-28T14:30:06.974284+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-28T15:00:07.701361+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-28T13:30:00.525684+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-28T14:00:01.248308+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-28T14:30:06.974313+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-28T15:00:07.701391+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2": [
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-28T13:30:00.525841+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-28T14:00:01.248427+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-28T14:30:06.974429+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-28T15:00:07.701511+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-28T13:30:00.525881+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-28T14:00:01.248455+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-28T14:30:06.974458+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-28T15:00:07.701541+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/default/0": [
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-28T13:30:00.526364+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-28T14:00:01.248888+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-28T14:30:06.974905+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-28T15:00:07.701970+00:00"
              }
            ],
            "action/1/repeat/sequence/4/default/1": [
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-28T13:30:00.887637+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-28T14:00:05.186588+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-28T14:30:07.285437+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-28T15:00:09.144385+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/0",
                "timestamp": "2023-11-28T15:04:26.157399+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/1",
                "timestamp": "2023-11-28T15:04:26.162165+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Medication taken",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "time",
                "at": "10:00:00"
              }
            ],
            "mode": "restart",
            "action": [
              {
                "service": "input_boolean.turn_off",
                "target": {
                  "entity_id": "input_boolean.medication"
                }
              },
              {
                "alias": "Notify until the medication has been take",
                "repeat": {
                  "while": [
                    {
                      "condition": "state",
                      "entity_id": "input_boolean.medication",
                      "state": "off"
                    }
                  ],
                  "sequence": [
                    {
                      "service": "logbook.log",
                      "data": {
                        "name": "Medication Reminder",
                        "message": "Reminder sent",
                        "entity_id": "input_boolean.medication"
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ true }}",
                          "sequence": []
                        }
                      ]
                    },
                    {
                      "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                      "domain": "mobile_app",
                      "type": "notify",
                      "title": "Medication Reminder",
                      "message": "It's time to take your medication",
                      "data": {
                        "actions": [
                          {
                            "title": "Taken",
                            "action": "taken"
                          },
                          {
                            "title": "Ask later",
                            "action": "later"
                          },
                          {
                            "title": "Skip",
                            "action": "skip"
                          }
                        ],
                        "tag": "input_boolean.medication"
                      }
                    },
                    {
                      "wait_for_trigger": {
                        "platform": "event",
                        "event_type": "mobile_app_notification_action",
                        "event_data": {
                          "tag": "input_boolean.medication"
                        }
                      },
                      "timeout": {
                        "minutes": 30
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'taken' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Medication taken",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'later' }}",
                          "sequence": [
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Postpone reminder",
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "delay": {
                                "minutes": 30
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'skip' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Reminder skipped",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        }
                      ],
                      "default": [
                        {
                          "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                          "domain": "mobile_app",
                          "type": "notify",
                          "message": "clear_notification",
                          "data": {
                            "tag": "input_boolean.medication"
                          }
                        },
                        {
                          "service": "logbook.log",
                          "data": {
                            "name": "Medication Reminder",
                            "message": "No answer time out",
                            "entity_id": "input_boolean.medication"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": "",
            "use_blueprint": {
              "path": "Aohzan/medication_reminder_android.yaml",
              "input": {
                "reminder_time": "10:00:00",
                "notify_device": "c64d919497fe1f5e4c511f1d631e5f77",
                "notification_title": "Medication Reminder",
                "input_boolean": "input_boolean.medication"
              }
            }
          },
          "context": {
            "id": "01HGB07P6CH2352V1ZS2XEYGE8",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "576baf71ee9c0abcfad1715de136b63a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T13:00:00.076631+00:00",
            "finish": "2023-11-28T15:04:26.166607+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time"
        }
      }
    ],
    "automation.1673492717992": [
      {
        "extended_dict": {
          "last_step": "action/0/then/0",
          "run_id": "3d6e8a3585b16af0d84b7b7a90984f06",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T19:00:00.129321+00:00",
            "finish": "2023-11-28T19:00:00.131840+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T19:00:00.129356+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-28T17:00:00.129743+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-28T15:21:57.302436+00:00",
                    "last_updated": "2023-11-28T17:00:00.132004+00:00",
                    "context": {
                      "id": "01HGBDZ4R1VQ25QFAB9FXEAMW1",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T16:00:00.129199-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T19:00:00.129375+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "16:00:00.129384"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-28T19:00:00.129410+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-28T19:00:00.129428+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T19:00:00.129641+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBMTW01NWNG6RYA856E52MT",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "then"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-28T19:00:00.129678+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-28T19:00:00.129696+00:00",
                "result": {
                  "result": true,
                  "entities": [
                    "weather.home",
                    "sensor.office_temperature_sensor_humidity"
                  ]
                }
              }
            ],
            "action/0/then/0": [
              {
                "path": "action/0/then/0",
                "timestamp": "2023-11-28T19:00:00.129934+00:00",
                "child_id": {
                  "domain": "automation",
                  "item_id": "1673493242815",
                  "run_id": "7ebf537f299f78afb131f9c39cf7f21d"
                },
                "result": {
                  "params": {
                    "domain": "input_select",
                    "service": "select_option",
                    "service_data": {
                      "option": "Outside",
                      "entity_id": [
                        "input_select.best_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_select.best_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBMTW01NWNG6RYA856E52MT",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/then/0",
          "run_id": "3d6e8a3585b16af0d84b7b7a90984f06",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T19:00:00.129321+00:00",
            "finish": "2023-11-28T19:00:00.131840+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/else/0",
          "run_id": "8da84d27e915cc21dd42eb7a2e723b4f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T21:00:00.130497+00:00",
            "finish": "2023-11-28T21:00:00.134854+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T21:00:00.130542+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-28T19:00:00.129523+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-28T15:21:57.302436+00:00",
                    "last_updated": "2023-11-28T19:00:00.131766+00:00",
                    "context": {
                      "id": "01HGBMTW01NWNG6RYA856E52MT",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T18:00:00.130301-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T21:00:00.130570+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00.130582"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-28T21:00:00.130621+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-28T21:00:00.130646+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T21:00:00.130951+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBVPK82V4VHH9RQ6PTH9V12",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-28T21:00:00.131004+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-28T21:00:00.131028+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "weather.home",
                    "sensor.office_temperature_sensor_humidity"
                  ]
                }
              }
            ],
            "action/0/else/0": [
              {
                "path": "action/0/else/0",
                "timestamp": "2023-11-28T21:00:00.131366+00:00",
                "child_id": {
                  "domain": "automation",
                  "item_id": "1673493242815",
                  "run_id": "d2e80b88f9da6da0c388ee72089626e1"
                },
                "result": {
                  "params": {
                    "domain": "input_select",
                    "service": "select_option",
                    "service_data": {
                      "option": "Inside",
                      "entity_id": [
                        "input_select.best_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_select.best_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBVPK82V4VHH9RQ6PTH9V12",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/else/0",
          "run_id": "8da84d27e915cc21dd42eb7a2e723b4f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T21:00:00.130497+00:00",
            "finish": "2023-11-28T21:00:00.134854+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "a4239cb8dba57662cb839b7cab9cba43",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T23:00:00.289345+00:00",
            "finish": "2023-11-28T23:00:00.289495+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T23:00:00.289405+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-28T21:00:00.130755+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-28T22:08:09.362467+00:00",
                    "last_updated": "2023-11-28T22:08:09.362467+00:00",
                    "context": {
                      "id": "01HGBZKCMJF959RQ7TNECYZ705",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T20:00:00.289105-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T23:00:00.289440+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "20:00:00.289458"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC2JAN1N0JY363H6W5F8PGQ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "a4239cb8dba57662cb839b7cab9cba43",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T23:00:00.289345+00:00",
            "finish": "2023-11-28T23:00:00.289495+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "c1d7aaa8354b75751f8b375d2b4938a3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T01:00:00.288811+00:00",
            "finish": "2023-11-29T01:00:00.288963+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T01:00:00.288874+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-28T21:00:00.130755+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-28T22:08:09.362467+00:00",
                    "last_updated": "2023-11-28T22:08:09.362467+00:00",
                    "context": {
                      "id": "01HGBZKCMJF959RQ7TNECYZ705",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T22:00:00.288572-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T01:00:00.288911+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00.288927"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC9E1X0890FVGKNDA625ZJ7",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "c1d7aaa8354b75751f8b375d2b4938a3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T01:00:00.288811+00:00",
            "finish": "2023-11-29T01:00:00.288963+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "1f66f3741a98895da68b72485370fe03",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:00:00.288496+00:00",
            "finish": "2023-11-29T03:00:00.288583+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:00:00.288534+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-28T21:00:00.130755+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-28T22:08:09.362467+00:00",
                    "last_updated": "2023-11-28T22:08:09.362467+00:00",
                    "context": {
                      "id": "01HGBZKCMJF959RQ7TNECYZ705",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-29T00:00:00.288339-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T03:00:00.288554+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00.288563"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCG9S50SGZEM2A2PFVN8RJZ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "1f66f3741a98895da68b72485370fe03",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T03:00:00.288496+00:00",
            "finish": "2023-11-29T03:00:00.288583+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      }
    ],
    "automation.1674225267956": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "5db25c73f711e65ea1bfb5993d15802d",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T16:09:48.704250+00:00",
            "finish": "2023-11-28T16:09:48.704683+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T16:09:48.704310+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-28T15:21:57.303035+00:00",
                    "last_updated": "2023-11-28T15:21:57.303035+00:00",
                    "context": {
                      "id": "01HGB8BKSQ7EQQY2H5BN27Y4SH",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "remote.living_room_tv",
                    "from_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "off",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T15:21:57.324463+00:00",
                      "last_updated": "2023-11-28T16:09:46.392296+00:00",
                      "context": {
                        "id": "01HGBB35MRDFMNNK48VNX1H3HH",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "on",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T16:09:48.703918+00:00",
                      "last_updated": "2023-11-28T16:09:48.703918+00:00",
                      "context": {
                        "id": "01HGBB37WZPHKD354VW0F06G8Q",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of remote.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T16:09:48.704349+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T16:09:48.704374+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:52:00.252192+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBB37X06QPZM42VQ5S5BBS8",
            "parent_id": "01HGBB37WZPHKD354VW0F06G8Q",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "5db25c73f711e65ea1bfb5993d15802d",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T16:09:48.704250+00:00",
            "finish": "2023-11-28T16:09:48.704683+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "62c71f54301f171c919e6d14c18ebfef",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T18:44:56.370247+00:00",
            "finish": "2023-11-28T18:44:56.370680+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T18:44:56.370302+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-28T15:21:57.303035+00:00",
                    "last_updated": "2023-11-28T15:21:57.303035+00:00",
                    "context": {
                      "id": "01HGB8BKSQ7EQQY2H5BN27Y4SH",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "remote.living_room_tv",
                    "from_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "off",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T17:01:06.919374+00:00",
                      "last_updated": "2023-11-28T18:44:55.431781+00:00",
                      "context": {
                        "id": "01HGBKZ8G7RD55VEGPG1RYFJ2V",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "on",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T18:44:56.369951+00:00",
                      "last_updated": "2023-11-28T18:44:56.369951+00:00",
                      "context": {
                        "id": "01HGBKZ9DHYQE8YSFM2E5K831S",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of remote.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T18:44:56.370339+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T18:44:56.370364+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:52:00.252192+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBKZ9DJCQ50CEVGEN17GSE8",
            "parent_id": "01HGBKZ9DHYQE8YSFM2E5K831S",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "62c71f54301f171c919e6d14c18ebfef",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T18:44:56.370247+00:00",
            "finish": "2023-11-28T18:44:56.370680+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "f310fb6e4383ddb54f15f8aed443e362",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T19:45:31.509931+00:00",
            "finish": "2023-11-28T19:45:31.510350+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T19:45:31.509986+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-28T15:21:57.303035+00:00",
                    "last_updated": "2023-11-28T15:21:57.303035+00:00",
                    "context": {
                      "id": "01HGB8BKSQ7EQQY2H5BN27Y4SH",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "remote.living_room_tv",
                    "from_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "off",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T18:57:14.554996+00:00",
                      "last_updated": "2023-11-28T19:45:30.467312+00:00",
                      "context": {
                        "id": "01HGBQE6B3833BX6W3QRZR6KYA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "on",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T19:45:31.509615+00:00",
                      "last_updated": "2023-11-28T19:45:31.509615+00:00",
                      "context": {
                        "id": "01HGBQE7BNKA0B0JBVN1Y9AWJT",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of remote.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T19:45:31.510022+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T19:45:31.510048+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:52:00.252192+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBQE7BNVMQXCYT8NVY7KWQB",
            "parent_id": "01HGBQE7BNKA0B0JBVN1Y9AWJT",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "f310fb6e4383ddb54f15f8aed443e362",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T19:45:31.509931+00:00",
            "finish": "2023-11-28T19:45:31.510350+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1/entity_id/0",
          "run_id": "9b3e2b6c962d6e07f3406d1b9af7c192",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T21:52:00.257440+00:00",
            "finish": "2023-11-28T21:52:00.257876+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "sunset",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T21:52:00.257492+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-28T15:21:57.303035+00:00",
                    "last_updated": "2023-11-28T15:21:57.303035+00:00",
                    "context": {
                      "id": "01HGB8BKSQ7EQQY2H5BN27Y4SH",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "sun",
                    "event": "sunset",
                    "offset": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "sunset"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T21:52:00.257526+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T21:52:00.257551+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:52:00.252192+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T21:52:00.257785+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2023-11-28T21:52:00.257820+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBYNT811ZEQ3B6ZRFT1RQJ3",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1/entity_id/0",
          "run_id": "9b3e2b6c962d6e07f3406d1b9af7c192",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T21:52:00.257440+00:00",
            "finish": "2023-11-28T21:52:00.257876+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "sunset"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1/entity_id/0",
          "run_id": "60c6a5ec9df4625ff37dd2ac823c86fa",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T23:21:48.896079+00:00",
            "finish": "2023-11-28T23:21:48.896583+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T23:21:48.896137+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-28T22:08:09.362991+00:00",
                    "last_updated": "2023-11-28T22:08:09.362991+00:00",
                    "context": {
                      "id": "01HGBZKCMJ7EQQY2H5BN27Y4SH",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "remote.living_room_tv",
                    "from_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "off",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T22:48:16.455717+00:00",
                      "last_updated": "2023-11-28T23:21:47.719717+00:00",
                      "context": {
                        "id": "01HGC3T7E7CATNGJXPTGGBPQJ1",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "on",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T23:21:48.895751+00:00",
                      "last_updated": "2023-11-28T23:21:48.895751+00:00",
                      "context": {
                        "id": "01HGC3T8JZT3QAFDBCEBWXTFA5",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of remote.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T23:21:48.896173+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T23:21:48.896198+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:52:00.252192+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T23:21:48.896489+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2023-11-28T23:21:48.896524+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC3T8K02NK48SHT2GYTPF7T",
            "parent_id": "01HGC3T8JZT3QAFDBCEBWXTFA5",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1/entity_id/0",
          "run_id": "60c6a5ec9df4625ff37dd2ac823c86fa",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T23:21:48.896079+00:00",
            "finish": "2023-11-28T23:21:48.896583+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv"
        }
      }
    ],
    "automation.1674367315493": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "1c941b341d851c21ffeb8961f79e1389",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T22:07:07.254491+00:00",
            "finish": "2023-11-28T22:07:07.254717+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T22:07:07.254556+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-28T15:21:57.303241+00:00",
                    "last_updated": "2023-11-28T15:21:57.303241+00:00",
                    "context": {
                      "id": "01HGB8BKSQ1WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 3771.915,
                        "media_position_updated_at": "2023-11-28T22:07:03.366503+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-28T22:07:03.360215+00:00",
                      "last_updated": "2023-11-28T22:07:03.366778+00:00",
                      "context": {
                        "id": "01HGBZHC66A10WXD3F7ZZEGW3M",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 4616.831,
                        "media_position_updated_at": "2023-11-28T22:07:07.253363+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-28T22:07:07.253726+00:00",
                      "last_updated": "2023-11-28T22:07:07.253726+00:00",
                      "context": {
                        "id": "01HGBZHFZNATB3RJSM5M23GHM3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T22:07:07.254595+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T22:07:07.254621+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T22:07:07.254652+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBZHFZP70SVK4WMTBBF0058",
            "parent_id": "01HGBZHFZNATB3RJSM5M23GHM3",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "1c941b341d851c21ffeb8961f79e1389",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T22:07:07.254491+00:00",
            "finish": "2023-11-28T22:07:07.254717+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "c4ab49f3b72bc8fa75db0d4b27600e43",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:04:12.306948+00:00",
            "finish": "2023-11-29T00:04:12.307064+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:04:12.306985+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-28T22:08:09.363185+00:00",
                    "last_updated": "2023-11-28T22:08:09.363185+00:00",
                    "context": {
                      "id": "01HGBZKCMK1WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_type": "video",
                        "media_position_updated_at": "2023-11-29T00:04:11.227678+00:00",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152449
                      },
                      "last_changed": "2023-11-29T00:04:10.855523+00:00",
                      "last_updated": "2023-11-29T00:04:11.227929+00:00",
                      "context": {
                        "id": "01HGC67VAVCKFCJXGYEJ7H30AB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 0,
                        "media_position": 0,
                        "media_position_updated_at": "2023-11-29T00:04:12.305649+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-29T00:04:12.305909+00:00",
                      "last_updated": "2023-11-29T00:04:12.305909+00:00",
                      "context": {
                        "id": "01HGC67WCHWYXVKWC0C0AB57VR",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T00:04:12.307004+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T00:04:12.307017+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T00:04:12.307033+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC67WCJYYG7JY4APPE2FVT1",
            "parent_id": "01HGC67WCHWYXVKWC0C0AB57VR",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "c4ab49f3b72bc8fa75db0d4b27600e43",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:04:12.306948+00:00",
            "finish": "2023-11-29T00:04:12.307064+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "a97eb511431e4a35485e6c7ff5f7c5bc",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:04:13.784038+00:00",
            "finish": "2023-11-29T00:04:13.784149+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:04:13.784071+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-28T22:08:09.363185+00:00",
                    "last_updated": "2023-11-28T22:08:09.363185+00:00",
                    "context": {
                      "id": "01HGBZKCMK1WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 0,
                        "media_position": 0,
                        "media_position_updated_at": "2023-11-29T00:04:12.602250+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-29T00:04:12.589771+00:00",
                      "last_updated": "2023-11-29T00:04:12.602442+00:00",
                      "context": {
                        "id": "01HGC67WNTF558M7ATN45JJ271",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 6356.67,
                        "media_position_updated_at": "2023-11-29T00:04:13.783227+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-29T00:04:13.783473+00:00",
                      "last_updated": "2023-11-29T00:04:13.783473+00:00",
                      "context": {
                        "id": "01HGC67XTQM5W46GY1RH1CA0FA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T00:04:13.784090+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T00:04:13.784102+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T00:04:13.784118+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC67XTRRX3JAWQ52MSW9GM6",
            "parent_id": "01HGC67XTQM5W46GY1RH1CA0FA",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "a97eb511431e4a35485e6c7ff5f7c5bc",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:04:13.784038+00:00",
            "finish": "2023-11-29T00:04:13.784149+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "1cb5bf06a4112d4934a2fe69b820ffbc",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:04:56.717089+00:00",
            "finish": "2023-11-29T00:04:56.717319+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:04:56.717155+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-28T22:08:09.363185+00:00",
                    "last_updated": "2023-11-28T22:08:09.363185+00:00",
                    "context": {
                      "id": "01HGBZKCMK1WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_type": "video",
                        "media_position_updated_at": "2023-11-29T00:04:53.347582+00:00",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152449
                      },
                      "last_changed": "2023-11-29T00:04:47.270772+00:00",
                      "last_updated": "2023-11-29T00:04:53.347880+00:00",
                      "context": {
                        "id": "01HGC694F32BF934E00KBZ5VD3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 0,
                        "media_position": 0,
                        "media_position_updated_at": "2023-11-29T00:04:56.716185+00:00",
                        "media_title": "",
                        "media_artist": "",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152451
                      },
                      "last_changed": "2023-11-29T00:04:56.716723+00:00",
                      "last_updated": "2023-11-29T00:04:56.716723+00:00",
                      "context": {
                        "id": "01HGC697RCA0V2EMEMH77PSGGX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T00:04:56.717194+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T00:04:56.717221+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T00:04:56.717253+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC697RD29XPSFQY301J2PDV",
            "parent_id": "01HGC697RCA0V2EMEMH77PSGGX",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "1cb5bf06a4112d4934a2fe69b820ffbc",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:04:56.717089+00:00",
            "finish": "2023-11-29T00:04:56.717319+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "0c1122a9b133ae289d305db5e121fdc4",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:05:04.669646+00:00",
            "finish": "2023-11-29T00:05:04.669884+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:05:04.669705+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-28T22:08:09.363185+00:00",
                    "last_updated": "2023-11-28T22:08:09.363185+00:00",
                    "context": {
                      "id": "01HGBZKCMK1WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 840.76,
                        "media_position": 0.01,
                        "media_position_updated_at": "2023-11-29T00:04:57.463937+00:00",
                        "media_title": "",
                        "media_artist": "",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152451
                      },
                      "last_changed": "2023-11-29T00:04:57.455225+00:00",
                      "last_updated": "2023-11-29T00:04:57.464205+00:00",
                      "context": {
                        "id": "01HGC698FRDKWVDRTD3D928EXA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 0,
                        "media_position": 0,
                        "media_position_updated_at": "2023-11-29T00:05:04.668930+00:00",
                        "media_title": "",
                        "media_artist": "",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-29T00:05:04.669315+00:00",
                      "last_updated": "2023-11-29T00:05:04.669315+00:00",
                      "context": {
                        "id": "01HGC69FGXWR6TAA0ZY3MY5AQX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T00:05:04.669741+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T00:05:04.669766+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T00:05:04.669796+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC69FGXVNW9Z74T468YEJHH",
            "parent_id": "01HGC69FGXWR6TAA0ZY3MY5AQX",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "0c1122a9b133ae289d305db5e121fdc4",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:05:04.669646+00:00",
            "finish": "2023-11-29T00:05:04.669884+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      }
    ],
    "automation.1674367256897": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "69c2ed14b2d54f6bba103accf8b9cbe3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T22:07:06.361958+00:00",
            "finish": "2023-11-28T22:07:06.362199+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T22:07:06.362024+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-28T15:21:57.303141+00:00",
                    "last_updated": "2023-11-28T15:21:57.303141+00:00",
                    "context": {
                      "id": "01HGB8BKSQEZQMGKTKDVG12NFE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 3769.59,
                        "media_position_updated_at": "2023-11-28T22:07:00.714002+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-28T22:06:59.697706+00:00",
                      "last_updated": "2023-11-28T22:07:00.714276+00:00",
                      "context": {
                        "id": "01HGBZH9KA13RQ1AP4X4T4M4PM",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 3771.915,
                        "media_position_updated_at": "2023-11-28T22:07:03.359884+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-28T22:07:03.360215+00:00",
                      "last_updated": "2023-11-28T22:07:03.360215+00:00",
                      "context": {
                        "id": "01HGBZHC60SV90A0GR08N9EHSV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T22:07:06.362075+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T22:07:06.362103+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T22:07:06.362133+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBZHF3SNJVAR3EBJB543V1H",
            "parent_id": "01HGBZHC60SV90A0GR08N9EHSV",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "69c2ed14b2d54f6bba103accf8b9cbe3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T22:07:06.361958+00:00",
            "finish": "2023-11-28T22:07:06.362199+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "b9da110a9271270d64778deea14ddca5",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T22:39:52.631717+00:00",
            "finish": "2023-11-28T22:39:52.631946+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T22:39:52.631784+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-28T22:08:09.363089+00:00",
                    "last_updated": "2023-11-28T22:08:09.363089+00:00",
                    "context": {
                      "id": "01HGBZKCMKEZQMGKTKDVG12NFE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 6176.79,
                        "media_position_updated_at": "2023-11-28T22:36:49.800252+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-28T22:08:12.381226+00:00",
                      "last_updated": "2023-11-28T22:36:49.800446+00:00",
                      "context": {
                        "id": "01HGC17WR84G15SF75C33JHTPF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 6356.437,
                        "media_position_updated_at": "2023-11-28T22:39:49.629057+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-28T22:39:49.629421+00:00",
                      "last_updated": "2023-11-28T22:39:49.629421+00:00",
                      "context": {
                        "id": "01HGC1DCBXYHR9XHB662BDACTA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T22:39:52.631823+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T22:39:52.631849+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T22:39:52.631880+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC1DF9QVJANNR72AFQ6VJDD",
            "parent_id": "01HGC1DCBXYHR9XHB662BDACTA",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "b9da110a9271270d64778deea14ddca5",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T22:39:52.631717+00:00",
            "finish": "2023-11-28T22:39:52.631946+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "39bf57519548251847405f0492b51f06",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:04:17.822041+00:00",
            "finish": "2023-11-29T00:04:17.822278+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:04:17.822101+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-28T22:08:09.363089+00:00",
                    "last_updated": "2023-11-28T22:08:09.363089+00:00",
                    "context": {
                      "id": "01HGBZKCMKEZQMGKTKDVG12NFE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 6356.921,
                        "media_position_updated_at": "2023-11-29T00:04:14.024030+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-29T00:04:13.783473+00:00",
                      "last_updated": "2023-11-29T00:04:14.024251+00:00",
                      "context": {
                        "id": "01HGC67Y28AAEGC8M85W3T6K8R",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 12702.021,
                        "media_position": 6356.921,
                        "media_position_updated_at": "2023-11-29T00:04:14.820492+00:00",
                        "media_title": "\u3010\u30db\u30e9\u30fc\u3011\u5f1f\u8005,\u5144\u8005,\u304a\u3064\u3044\u3061,\u4e09\u6d66\u5927\u77e5\u306e\u300cLethal Company | \u30ea\u30fc\u30b5\u30eb\u30ab\u30f3\u30d1\u30cb\u30fc\u300d\u30102BRO.\u3011",
                        "media_artist": "\u5144\u8005\u5f1f\u8005",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-29T00:04:14.820721+00:00",
                      "last_updated": "2023-11-29T00:04:14.820721+00:00",
                      "context": {
                        "id": "01HGC67YV4AB06TFW1DXTEATMK",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T00:04:17.822139+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T00:04:17.822164+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T00:04:17.822212+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC681RYXSGTXSZ18MK5W36Z",
            "parent_id": "01HGC67YV4AB06TFW1DXTEATMK",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "39bf57519548251847405f0492b51f06",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:04:17.822041+00:00",
            "finish": "2023-11-29T00:04:17.822278+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "ff4755efd1d7bcd4aa3f26989c692eb8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:05:00.457294+00:00",
            "finish": "2023-11-29T00:05:00.457516+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:05:00.457356+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-28T22:08:09.363089+00:00",
                    "last_updated": "2023-11-28T22:08:09.363089+00:00",
                    "context": {
                      "id": "01HGBZKCMKEZQMGKTKDVG12NFE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 840.76,
                        "media_position": 0.01,
                        "media_position_updated_at": "2023-11-29T00:04:57.234873+00:00",
                        "media_title": "",
                        "media_artist": "",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152451
                      },
                      "last_changed": "2023-11-29T00:04:56.716723+00:00",
                      "last_updated": "2023-11-29T00:04:57.235063+00:00",
                      "context": {
                        "id": "01HGC6988KPXBZ5G0K6411M3S0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 840.76,
                        "media_position": 0.01,
                        "media_position_updated_at": "2023-11-29T00:04:57.454959+00:00",
                        "media_title": "",
                        "media_artist": "",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152451
                      },
                      "last_changed": "2023-11-29T00:04:57.455225+00:00",
                      "last_updated": "2023-11-29T00:04:57.455225+00:00",
                      "context": {
                        "id": "01HGC698FFA249MJY18K9CNJQF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T00:05:00.457394+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T00:05:00.457421+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T00:05:00.457451+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC69BD933E36WWSTH3Z7JST",
            "parent_id": "01HGC698FFA249MJY18K9CNJQF",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "ff4755efd1d7bcd4aa3f26989c692eb8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:05:00.457294+00:00",
            "finish": "2023-11-29T00:05:00.457516+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "be5fe2d5ef286c206f0c2acac26f858b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:14:50.367837+00:00",
            "finish": "2023-11-29T00:14:50.368060+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:14:50.367899+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-28T22:08:09.363089+00:00",
                    "last_updated": "2023-11-28T22:08:09.363089+00:00",
                    "context": {
                      "id": "01HGBZKCMKEZQMGKTKDVG12NFE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 817.661,
                        "media_position": 481.621,
                        "media_position_updated_at": "2023-11-29T00:13:06.764139+00:00",
                        "media_title": "FERROU: Fim da Black Friday no Brasil? Sinais de uma economia ESTAGNADA",
                        "media_artist": "Investidor Sardinha l Raul Sena",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-29T00:05:04.669315+00:00",
                      "last_updated": "2023-11-29T00:13:06.764358+00:00",
                      "context": {
                        "id": "01HGC6R6ACK0C81ZQX90W5EF8R",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 817.661,
                        "media_position": 581.855,
                        "media_position_updated_at": "2023-11-29T00:14:47.366064+00:00",
                        "media_title": "FERROU: Fim da Black Friday no Brasil? Sinais de uma economia ESTAGNADA",
                        "media_artist": "Investidor Sardinha l Raul Sena",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-29T00:14:47.366455+00:00",
                      "last_updated": "2023-11-29T00:14:47.366455+00:00",
                      "context": {
                        "id": "01HGC6V8J6KG4EM8TD370W96PJ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-29T00:14:50.367938+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-29T00:14:50.367964+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-29T00:14:50.367994+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC6VBFZ8AF5C1XJW6A70TJ3",
            "parent_id": "01HGC6V8J6KG4EM8TD370W96PJ",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "be5fe2d5ef286c206f0c2acac26f858b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-29T00:14:50.367837+00:00",
            "finish": "2023-11-29T00:14:50.368060+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      }
    ],
    "automation.1676734805757": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "e1f429cc2e1fa5f0756accaa5b5fd2d1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:11:31.662440+00:00",
            "finish": "2023-11-26T15:11:31.662551+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:11:31.662467+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:08:55.578141+00:00",
                      "last_updated": "2023-11-26T15:08:55.578141+00:00",
                      "context": {
                        "id": "01HG62TACTP2V2AMSQE8KKK6M0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "46.3",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:10:31.660609+00:00",
                      "last_updated": "2023-11-26T15:10:31.660609+00:00",
                      "context": {
                        "id": "01HG62X87C6YANF73XKBSW7RNX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:11:31.662493+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:11:31.662514+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG62Z2TEG1ZY6QT247EWZ4NN",
            "parent_id": "01HG62X87C6YANF73XKBSW7RNX",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "e1f429cc2e1fa5f0756accaa5b5fd2d1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:11:31.662440+00:00",
            "finish": "2023-11-26T15:11:31.662551+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "26d1fb7149ebbb5e965edace8ca1a1f8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:17:59.054508+00:00",
            "finish": "2023-11-26T15:17:59.054691+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:17:59.054550+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:15:56.984359+00:00",
                      "last_updated": "2023-11-26T15:15:56.984359+00:00",
                      "context": {
                        "id": "01HG6375XRQ3WB595QKCVHQDKS",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "8.3",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:16:59.053223+00:00",
                      "last_updated": "2023-11-26T15:16:59.053223+00:00",
                      "context": {
                        "id": "01HG6392HDZ3KKHRT31Z9CJ3JA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:17:59.054590+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:17:59.054629+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG63AX4ER875MG7E45R0GBKH",
            "parent_id": "01HG6392HDZ3KKHRT31Z9CJ3JA",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "26d1fb7149ebbb5e965edace8ca1a1f8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:17:59.054508+00:00",
            "finish": "2023-11-26T15:17:59.054691+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "ea8d0ba4dbf40f0d1cdee6d1467cf120",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:27:16.616921+00:00",
            "finish": "2023-11-26T15:27:16.617141+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:27:16.616963+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:25:05.538062+00:00",
                      "last_updated": "2023-11-26T15:25:05.538062+00:00",
                      "context": {
                        "id": "01HG63QXM2M43C7APTV0A5ZEEK",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "44.3",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:26:16.614268+00:00",
                      "last_updated": "2023-11-26T15:26:16.614268+00:00",
                      "context": {
                        "id": "01HG63T316SF47096AWDEW28HK",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:27:16.617002+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:27:16.617063+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG63VXM85CSST0RAGWW05G7R",
            "parent_id": "01HG63T316SF47096AWDEW28HK",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "ea8d0ba4dbf40f0d1cdee6d1467cf120",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:27:16.616921+00:00",
            "finish": "2023-11-26T15:27:16.617141+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "cb721cd0747c74f2b8a72f474ea900d6",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:35:31.101788+00:00",
            "finish": "2023-11-26T15:35:31.101967+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:35:31.101837+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:33:22.036863+00:00",
                      "last_updated": "2023-11-26T15:33:22.036863+00:00",
                      "context": {
                        "id": "01HG6472FMBBF1M44PTKM2TT8C",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "13.7",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:34:31.100280+00:00",
                      "last_updated": "2023-11-26T15:34:31.100280+00:00",
                      "context": {
                        "id": "01HG6495XW0R9F93YX7M3BN5D1",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:35:31.101877+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:35:31.101912+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG64B0GX4JJZVWQ6NXCPQPGF",
            "parent_id": "01HG6495XW0R9F93YX7M3BN5D1",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "cb721cd0747c74f2b8a72f474ea900d6",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:35:31.101788+00:00",
            "finish": "2023-11-26T15:35:31.101967+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "5a7d868cf4762b732a599e566d0d31bc",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:42:20.477216+00:00",
            "finish": "2023-11-26T15:42:20.477406+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:42:20.477275+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:37:17.245822+00:00",
                      "last_updated": "2023-11-26T15:37:17.245822+00:00",
                      "context": {
                        "id": "01HG64E85X5A7DNMZBWCZ9JHJ0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "45.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:41:20.475378+00:00",
                      "last_updated": "2023-11-26T15:41:20.475378+00:00",
                      "context": {
                        "id": "01HG64NNPV6KFTZDGEXQKQF4WB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:42:20.477312+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:42:20.477347+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG64QG9XMM5PQ3Z3PPSSX4SA",
            "parent_id": "01HG64NNPV6KFTZDGEXQKQF4WB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "5a7d868cf4762b732a599e566d0d31bc",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:42:20.477216+00:00",
            "finish": "2023-11-26T15:42:20.477406+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      }
    ],
    "automation.1673493242815": [
      {
        "extended_dict": {
          "last_step": "action/0/else/0",
          "run_id": "a476fbb3cbf4a80c871e43ae7d4c32dc",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T15:00:00.221342+00:00",
            "finish": "2023-11-26T15:00:06.826021+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:00:00.221383+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_humidity_alert",
                    "state": "on",
                    "attributes": {
                      "id": "1673493242815",
                      "last_triggered": "2023-11-23T17:00:00.403043+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Humidity Alert"
                    },
                    "last_changed": "2023-11-26T11:01:53.596749+00:00",
                    "last_updated": "2023-11-26T11:01:53.596749+00:00",
                    "context": {
                      "id": "01HG5MNZSWZJRVTTCKH0F07K18",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_select.best_humidity",
                    "from_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Inside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-26T11:01:49.247208+00:00",
                      "last_updated": "2023-11-26T11:01:49.247208+00:00",
                      "context": {
                        "id": "01HG5MNVHZS7145QXRPASE6TKG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Outside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-26T15:00:00.221095+00:00",
                      "last_updated": "2023-11-26T15:00:00.221095+00:00",
                      "context": {
                        "id": "01HG629ZJTRGHMYCC0A4DNGNA4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_select.best_humidity"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:00:00.221412+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "12:00:00.221435"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-26T15:00:00.221476+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0": [
              {
                "path": "condition/1/conditions/0",
                "timestamp": "2023-11-26T15:00:00.221502+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0/entity_id/0": [
              {
                "path": "condition/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-26T15:00:00.221530+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T15:00:00.221845+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG629ZJX4MJA6GAF4E21Q2RE",
                    "parent_id": "01HG629ZJTRGHMYCC0A4DNGNA4",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-26T15:00:00.222037+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-26T15:00:00.222074+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:00:00.222101+00:00",
                "result": {
                  "result": false,
                  "state": "Outside",
                  "wanted_state": "Inside"
                }
              }
            ],
            "action/0/else/0": [
              {
                "path": "action/0/else/0",
                "timestamp": "2023-11-26T15:00:00.222490+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673493242815",
            "alias": "WEATHER - Humidity Alert",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_select.best_humidity"
                ]
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "group.christian_home",
                    "state": "home"
                  },
                  {
                    "condition": "state",
                    "entity_id": "group.cecilia_home",
                    "state": "home"
                  }
                ]
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_select.best_humidity",
                    "state": "Inside"
                  }
                ],
                "then": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG629ZJX4MJA6GAF4E21Q2RE",
            "parent_id": "01HG629ZJTRGHMYCC0A4DNGNA4",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/else/0",
          "run_id": "a476fbb3cbf4a80c871e43ae7d4c32dc",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T15:00:00.221342+00:00",
            "finish": "2023-11-26T15:00:06.826021+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/then/0",
          "run_id": "75f3c59fa7118509272b629cffba95bf",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:00:00.219705+00:00",
            "finish": "2023-11-26T17:00:10.408491+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T17:00:00.219724+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_humidity_alert",
                    "state": "on",
                    "attributes": {
                      "id": "1673493242815",
                      "last_triggered": "2023-11-26T15:00:00.221638+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Humidity Alert"
                    },
                    "last_changed": "2023-11-26T11:01:53.596749+00:00",
                    "last_updated": "2023-11-26T15:00:06.825773+00:00",
                    "context": {
                      "id": "01HG62A6192JZ3YSZKYJ5MTFQ0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_select.best_humidity",
                    "from_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Outside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-26T15:00:00.221095+00:00",
                      "last_updated": "2023-11-26T15:00:00.221095+00:00",
                      "context": {
                        "id": "01HG629ZJTRGHMYCC0A4DNGNA4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Inside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-26T17:00:00.219596+00:00",
                      "last_updated": "2023-11-26T17:00:00.219596+00:00",
                      "context": {
                        "id": "01HG695PTT6ES5B6E1CNCEQJ4H",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_select.best_humidity"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T17:00:00.219737+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "14:00:00.219745"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-26T17:00:00.219763+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0": [
              {
                "path": "condition/1/conditions/0",
                "timestamp": "2023-11-26T17:00:00.219776+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0/entity_id/0": [
              {
                "path": "condition/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-26T17:00:00.219789+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T17:00:00.219936+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG695PTV5Z6FAJWP3S4YZPKZ",
                    "parent_id": "01HG695PTT6ES5B6E1CNCEQJ4H",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "then"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-26T17:00:00.219968+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-26T17:00:00.219982+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-26T17:00:00.219996+00:00",
                "result": {
                  "result": true,
                  "state": "Inside",
                  "wanted_state": "Inside"
                }
              }
            ],
            "action/0/then/0": [
              {
                "path": "action/0/then/0",
                "timestamp": "2023-11-26T17:00:00.220170+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673493242815",
            "alias": "WEATHER - Humidity Alert",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_select.best_humidity"
                ]
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "group.christian_home",
                    "state": "home"
                  },
                  {
                    "condition": "state",
                    "entity_id": "group.cecilia_home",
                    "state": "home"
                  }
                ]
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_select.best_humidity",
                    "state": "Inside"
                  }
                ],
                "then": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG695PTV5Z6FAJWP3S4YZPKZ",
            "parent_id": "01HG695PTT6ES5B6E1CNCEQJ4H",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/then/0",
          "run_id": "75f3c59fa7118509272b629cffba95bf",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:00:00.219705+00:00",
            "finish": "2023-11-26T17:00:10.408491+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/else/0",
          "run_id": "7ebf537f299f78afb131f9c39cf7f21d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T19:00:00.130382+00:00",
            "finish": "2023-11-28T19:00:05.365782+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T19:00:00.130399+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_humidity_alert",
                    "state": "on",
                    "attributes": {
                      "id": "1673493242815",
                      "last_triggered": "2023-11-26T17:00:00.219841+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Humidity Alert"
                    },
                    "last_changed": "2023-11-28T15:21:57.302539+00:00",
                    "last_updated": "2023-11-28T15:21:57.302539+00:00",
                    "context": {
                      "id": "01HGB8BKSPP6VCMHFQ3A1EHDSF",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_select.best_humidity",
                    "from_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Inside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-28T15:21:55.957009+00:00",
                      "last_updated": "2023-11-28T15:21:55.957009+00:00",
                      "context": {
                        "id": "01HGB8BJFNESTMMEBRAA8EAYAD",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Outside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-28T19:00:00.130267+00:00",
                      "last_updated": "2023-11-28T19:00:00.130267+00:00",
                      "context": {
                        "id": "01HGBMTW01NWNG6RYA856E52MT",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_select.best_humidity"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T19:00:00.130414+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "16:00:00.130421"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-28T19:00:00.130438+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0": [
              {
                "path": "condition/1/conditions/0",
                "timestamp": "2023-11-28T19:00:00.130451+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0/entity_id/0": [
              {
                "path": "condition/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T19:00:00.130464+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T19:00:00.130912+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBMTW020B5FS3QMYCZ73A6X",
                    "parent_id": "01HGBMTW01NWNG6RYA856E52MT",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-28T19:00:00.131007+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-28T19:00:00.131024+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-28T19:00:00.131036+00:00",
                "result": {
                  "result": false,
                  "state": "Outside",
                  "wanted_state": "Inside"
                }
              }
            ],
            "action/0/else/0": [
              {
                "path": "action/0/else/0",
                "timestamp": "2023-11-28T19:00:00.131215+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673493242815",
            "alias": "WEATHER - Humidity Alert",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_select.best_humidity"
                ]
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "group.christian_home",
                    "state": "home"
                  },
                  {
                    "condition": "state",
                    "entity_id": "group.cecilia_home",
                    "state": "home"
                  }
                ]
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_select.best_humidity",
                    "state": "Inside"
                  }
                ],
                "then": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBMTW020B5FS3QMYCZ73A6X",
            "parent_id": "01HGBMTW01NWNG6RYA856E52MT",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/else/0",
          "run_id": "7ebf537f299f78afb131f9c39cf7f21d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T19:00:00.130382+00:00",
            "finish": "2023-11-28T19:00:05.365782+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/then/0",
          "run_id": "d2e80b88f9da6da0c388ee72089626e1",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T21:00:00.132367+00:00",
            "finish": "2023-11-28T21:00:09.603157+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T21:00:00.132389+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_humidity_alert",
                    "state": "on",
                    "attributes": {
                      "id": "1673493242815",
                      "last_triggered": "2023-11-28T19:00:00.130513+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Humidity Alert"
                    },
                    "last_changed": "2023-11-28T15:21:57.302539+00:00",
                    "last_updated": "2023-11-28T19:00:05.365568+00:00",
                    "context": {
                      "id": "01HGBMV13NNNW2NGE5NR6H6H2G",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_select.best_humidity",
                    "from_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Outside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-28T19:00:00.130267+00:00",
                      "last_updated": "2023-11-28T19:00:00.130267+00:00",
                      "context": {
                        "id": "01HGBMTW01NWNG6RYA856E52MT",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Inside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-28T21:00:00.132216+00:00",
                      "last_updated": "2023-11-28T21:00:00.132216+00:00",
                      "context": {
                        "id": "01HGBVPK82V4VHH9RQ6PTH9V12",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_select.best_humidity"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T21:00:00.132409+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00.132421"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-28T21:00:00.132447+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0": [
              {
                "path": "condition/1/conditions/0",
                "timestamp": "2023-11-28T21:00:00.132466+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0/entity_id/0": [
              {
                "path": "condition/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T21:00:00.132485+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T21:00:00.132697+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBVPK84PWXNME2KKZ2CFQC5",
                    "parent_id": "01HGBVPK82V4VHH9RQ6PTH9V12",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "then"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-28T21:00:00.132738+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-28T21:00:00.132761+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-28T21:00:00.132783+00:00",
                "result": {
                  "result": true,
                  "state": "Inside",
                  "wanted_state": "Inside"
                }
              }
            ],
            "action/0/then/0": [
              {
                "path": "action/0/then/0",
                "timestamp": "2023-11-28T21:00:00.133850+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673493242815",
            "alias": "WEATHER - Humidity Alert",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_select.best_humidity"
                ]
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "group.christian_home",
                    "state": "home"
                  },
                  {
                    "condition": "state",
                    "entity_id": "group.cecilia_home",
                    "state": "home"
                  }
                ]
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_select.best_humidity",
                    "state": "Inside"
                  }
                ],
                "then": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBVPK84PWXNME2KKZ2CFQC5",
            "parent_id": "01HGBVPK82V4VHH9RQ6PTH9V12",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/then/0",
          "run_id": "d2e80b88f9da6da0c388ee72089626e1",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T21:00:00.132367+00:00",
            "finish": "2023-11-28T21:00:09.603157+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity"
        }
      }
    ],
    "automation.1676744130645": [
      {
        "extended_dict": {
          "last_step": "action/1",
          "run_id": "98287c14e5333568e5bfd22032108d3d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T15:59:43.000799+00:00",
            "finish": "2023-11-26T15:59:44.678190+00:00"
          },
          "domain": "automation",
          "item_id": "1676744130645",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:59:43.000850+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_turn_off",
                    "state": "on",
                    "attributes": {
                      "id": "1676744130645",
                      "last_triggered": "2023-11-21T17:07:53.525900+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Turn off"
                    },
                    "last_changed": "2023-11-26T11:01:53.599325+00:00",
                    "last_updated": "2023-11-26T11:01:53.599325+00:00",
                    "context": {
                      "id": "01HG5MNZSZY9WBSP4BDVEF8C3T",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": 1.0,
                    "above": null,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "262.6",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:45:45.750012+00:00",
                      "last_updated": "2023-11-26T15:45:45.750012+00:00",
                      "context": {
                        "id": "01HG64XRRPH7QQS2YRHMGTNBYF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:49:42.997969+00:00",
                      "last_updated": "2023-11-26T15:49:42.997969+00:00",
                      "context": {
                        "id": "01HG6550ENZKFPYZ47TVSES4KC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 600.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:59:43.000891+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:59:43.000927+00:00",
                "result": {
                  "result": true,
                  "state": "On",
                  "wanted_state": "On"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T15:59:43.001363+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG65QACRWTFBG5ERR6SK71KJ",
                    "parent_id": "01HG6550ENZKFPYZ47TVSES4KC",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_select",
                    "service": "select_option",
                    "service_data": {
                      "option": "Off",
                      "entity_id": [
                        "input_select.washing_machine_status"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_select.washing_machine_status"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-26T15:59:43.003005+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "message": "Wash completed.",
                      "title": "Washing machine"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1676744130645",
            "alias": "WASHER - Turn off",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 10,
                  "seconds": 0
                },
                "below": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "On"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "Off"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              },
              {
                "service": "notify.notify",
                "data": {
                  "message": "Wash completed.",
                  "title": "Washing machine"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG65QACRWTFBG5ERR6SK71KJ",
            "parent_id": "01HG6550ENZKFPYZ47TVSES4KC",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1",
          "run_id": "98287c14e5333568e5bfd22032108d3d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T15:59:43.000799+00:00",
            "finish": "2023-11-26T15:59:44.678190+00:00"
          },
          "domain": "automation",
          "item_id": "1676744130645",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      }
    ],
    "automation.1680556356761": [
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "5f99aed447e5049364afa2847aeabc5d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:39:37.844769+00:00",
            "finish": "2023-11-28T22:39:37.861914+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T22:39:37.844859+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-28T22:38:48.536917+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-28T22:08:09.364243+00:00",
                    "last_updated": "2023-11-28T22:38:48.556234+00:00",
                    "context": {
                      "id": "01HGC1BGPRF9FD97WFY9240ZR9",
                      "parent_id": "01HGC1BGPRB07JMQ97MDEG9FY9",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T22:39:37.844516+00:00",
                      "context": {
                        "id": "01HGC1D0VMBQ7E0XC9QK8S5TB0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T22:39:37.845243+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC1D0VMQ1RZKM4HFCF60T4G",
                    "parent_id": "01HGC1D0VMBQ7E0XC9QK8S5TB0",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T22:39:37.845652+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T22:39:37.845723+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T22:39:37.845756+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T22:39:37.845863+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T22:39:37.845961+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T22:39:37.846309+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGC1D0VMQ1RZKM4HFCF60T4G",
            "parent_id": "01HGC1D0VMBQ7E0XC9QK8S5TB0",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "5f99aed447e5049364afa2847aeabc5d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:39:37.844769+00:00",
            "finish": "2023-11-28T22:39:37.861914+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "5424029bed0a3a6fb91939ad3a836544",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T23:05:22.458113+00:00",
            "finish": "2023-11-28T23:05:22.473176+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T23:05:22.458149+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-28T22:39:37.844962+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-28T22:08:09.364243+00:00",
                    "last_updated": "2023-11-28T22:39:37.861739+00:00",
                    "context": {
                      "id": "01HGC1D0VMQ1RZKM4HFCF60T4G",
                      "parent_id": "01HGC1D0VMBQ7E0XC9QK8S5TB0",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T23:05:22.457977+00:00",
                      "context": {
                        "id": "01HGC2W58SXG9AS71AVK2WVYGP",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T23:05:22.458322+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC2W58T6EZ3Q0E6B5P21D48",
                    "parent_id": "01HGC2W58SXG9AS71AVK2WVYGP",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T23:05:22.458534+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T23:05:22.458568+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T23:05:22.458583+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T23:05:22.458636+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T23:05:22.458706+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T23:05:22.458879+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGC2W58T6EZ3Q0E6B5P21D48",
            "parent_id": "01HGC2W58SXG9AS71AVK2WVYGP",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "5424029bed0a3a6fb91939ad3a836544",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T23:05:22.458113+00:00",
            "finish": "2023-11-28T23:05:22.473176+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "d82af166b74fbe367f9c6f5a7887c14a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T23:23:04.404964+00:00",
            "finish": "2023-11-28T23:23:04.420243+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T23:23:04.405000+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-28T23:05:22.458203+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-28T22:08:09.364243+00:00",
                    "last_updated": "2023-11-28T23:05:22.473099+00:00",
                    "context": {
                      "id": "01HGC2W58T6EZ3Q0E6B5P21D48",
                      "parent_id": "01HGC2W58SXG9AS71AVK2WVYGP",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T23:23:04.404835+00:00",
                      "context": {
                        "id": "01HGC3WJAMPPY5QRG0KTXEH1TS",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T23:23:04.405176+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC3WJAMCY5V3FTACSFJVBXX",
                    "parent_id": "01HGC3WJAMPPY5QRG0KTXEH1TS",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T23:23:04.405409+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T23:23:04.405443+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T23:23:04.405460+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T23:23:04.405539+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T23:23:04.405587+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T23:23:04.405751+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGC3WJAMCY5V3FTACSFJVBXX",
            "parent_id": "01HGC3WJAMPPY5QRG0KTXEH1TS",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "d82af166b74fbe367f9c6f5a7887c14a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T23:23:04.404964+00:00",
            "finish": "2023-11-28T23:23:04.420243+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "5abbc86fc0e16cd2097853cfb23fed18",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:05:40.870628+00:00",
            "finish": "2023-11-29T00:05:40.885090+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:05:40.870663+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-28T23:23:04.405054+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-28T22:08:09.364243+00:00",
                    "last_updated": "2023-11-28T23:23:04.420067+00:00",
                    "context": {
                      "id": "01HGC3WJAMCY5V3FTACSFJVBXX",
                      "parent_id": "01HGC3WJAMPPY5QRG0KTXEH1TS",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-29T00:05:40.870508+00:00",
                      "context": {
                        "id": "01HGC6AJW69G1H0EQWRR13MFTS",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T00:05:40.870823+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC6AJW6T07CHD5JYBMNC4DZ",
                    "parent_id": "01HGC6AJW69G1H0EQWRR13MFTS",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-29T00:05:40.871031+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-29T00:05:40.871065+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-29T00:05:40.871079+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-29T00:05:40.871130+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-29T00:05:40.871175+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-29T00:05:40.871337+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGC6AJW6T07CHD5JYBMNC4DZ",
            "parent_id": "01HGC6AJW69G1H0EQWRR13MFTS",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "5abbc86fc0e16cd2097853cfb23fed18",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:05:40.870628+00:00",
            "finish": "2023-11-29T00:05:40.885090+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "c5992f7b9b3a20e29973e7b33dd3387a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:07:09.146155+00:00",
            "finish": "2023-11-29T00:07:09.160925+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:07:09.146206+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-29T00:05:40.870715+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-28T22:08:09.364243+00:00",
                    "last_updated": "2023-11-29T00:05:40.885002+00:00",
                    "context": {
                      "id": "01HGC6AJW6T07CHD5JYBMNC4DZ",
                      "parent_id": "01HGC6AJW69G1H0EQWRR13MFTS",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-29T00:07:09.146027+00:00",
                      "context": {
                        "id": "01HGC6D92TWG6BXFTNKN1HZRJN",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T00:07:09.146368+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC6D92TARCV892K660GTDFT",
                    "parent_id": "01HGC6D92TWG6BXFTNKN1HZRJN",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-29T00:07:09.146594+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-29T00:07:09.146628+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-29T00:07:09.146643+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-29T00:07:09.146693+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-29T00:07:09.146737+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-29T00:07:09.146897+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGC6D92TARCV892K660GTDFT",
            "parent_id": "01HGC6D92TWG6BXFTNKN1HZRJN",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "c5992f7b9b3a20e29973e7b33dd3387a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:07:09.146155+00:00",
            "finish": "2023-11-29T00:07:09.160925+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      }
    ],
    "automation.1674368220338": [
      {
        "extended_dict": {
          "last_step": "action/0/then/1",
          "run_id": "d2c18694f8d099f2a0ab8f090b7daa53",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:34:51.070789+00:00",
            "finish": "2023-11-26T17:34:51.158198+00:00"
          },
          "domain": "automation",
          "item_id": "1674368220338",
          "trigger": "state of input_boolean.theater_mode",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T17:34:51.070839+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_toggle_theater_mode",
                    "state": "on",
                    "attributes": {
                      "id": "1674368220338",
                      "last_triggered": "2023-11-22T23:05:31.792489+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Toggle theater mode"
                    },
                    "last_changed": "2023-11-26T11:01:53.598148+00:00",
                    "last_updated": "2023-11-26T11:01:53.598148+00:00",
                    "context": {
                      "id": "01HG5MNZSY29T6KXGE0EXSKJWK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "from_state": {
                      "entity_id": "input_boolean.theater_mode",
                      "state": "off",
                      "attributes": {
                        "editable": true,
                        "icon": "mdi:theater",
                        "friendly_name": "Theater mode"
                      },
                      "last_changed": "2023-11-26T11:01:48.991744+00:00",
                      "last_updated": "2023-11-26T11:01:48.991744+00:00",
                      "context": {
                        "id": "01HG5MNV9ZEWMFDVG5TKYEFD51",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "input_boolean.theater_mode",
                      "state": "on",
                      "attributes": {
                        "editable": true,
                        "icon": "mdi:theater",
                        "friendly_name": "Theater mode"
                      },
                      "last_changed": "2023-11-26T17:34:51.070028+00:00",
                      "last_updated": "2023-11-26T17:34:51.070028+00:00",
                      "context": {
                        "id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
                        "parent_id": null,
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392"
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_boolean.theater_mode"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T17:34:51.072663+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG6B5GNY16H0MR45DZK4AV8K",
                    "parent_id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "then"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-26T17:34:51.072887+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-26T17:34:51.072923+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-26T17:34:51.072951+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "action/0/then/0": [
              {
                "path": "action/0/then/0",
                "timestamp": "2023-11-26T17:34:51.079218+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.adaptive_lighting_living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/then/1": [
              {
                "path": "action/0/then/1",
                "timestamp": "2023-11-26T17:34:51.105846+00:00",
                "child_id": {
                  "domain": "automation",
                  "item_id": "1674367315493",
                  "run_id": "2e337c33c615b5c4ab117c075a8ad666"
                },
                "result": {
                  "params": {
                    "domain": "automation",
                    "service": "trigger",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "automation.media_theater_mode_playing"
                      ]
                    }
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "1674368220338",
            "alias": "MEDIA - Toggle theater mode",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.theater_mode"
                ]
              }
            ],
            "condition": [],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  }
                ],
                "then": [
                  {
                    "service": "input_boolean.turn_off",
                    "data": {},
                    "target": {
                      "entity_id": "switch.adaptive_lighting_living_room"
                    }
                  },
                  {
                    "service": "automation.trigger",
                    "data": {},
                    "target": {
                      "entity_id": "automation.media_theater_mode_playing"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_boolean.turn_on",
                    "data": {},
                    "target": {
                      "entity_id": "switch.adaptive_lighting_living_room"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6B5GNY16H0MR45DZK4AV8K",
            "parent_id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/then/1",
          "run_id": "d2c18694f8d099f2a0ab8f090b7daa53",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:34:51.070789+00:00",
            "finish": "2023-11-26T17:34:51.158198+00:00"
          },
          "domain": "automation",
          "item_id": "1674368220338",
          "trigger": "state of input_boolean.theater_mode"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/else/0",
          "run_id": "19707def48bcd675960948d8d3fc994f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T23:00:54.505975+00:00",
            "finish": "2023-11-26T23:00:54.511451+00:00"
          },
          "domain": "automation",
          "item_id": "1674368220338",
          "trigger": "state of input_boolean.theater_mode",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T23:00:54.506019+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_toggle_theater_mode",
                    "state": "on",
                    "attributes": {
                      "id": "1674368220338",
                      "last_triggered": "2023-11-26T17:34:51.070932+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Toggle theater mode"
                    },
                    "last_changed": "2023-11-26T11:01:53.598148+00:00",
                    "last_updated": "2023-11-26T17:34:51.157779+00:00",
                    "context": {
                      "id": "01HG6B5GNY16H0MR45DZK4AV8K",
                      "parent_id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "from_state": {
                      "entity_id": "input_boolean.theater_mode",
                      "state": "on",
                      "attributes": {
                        "editable": true,
                        "icon": "mdi:theater",
                        "friendly_name": "Theater mode"
                      },
                      "last_changed": "2023-11-26T17:34:51.070028+00:00",
                      "last_updated": "2023-11-26T17:34:51.070028+00:00",
                      "context": {
                        "id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
                        "parent_id": null,
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392"
                      }
                    },
                    "to_state": {
                      "entity_id": "input_boolean.theater_mode",
                      "state": "off",
                      "attributes": {
                        "editable": true,
                        "icon": "mdi:theater",
                        "friendly_name": "Theater mode"
                      },
                      "last_changed": "2023-11-26T23:00:54.504822+00:00",
                      "last_updated": "2023-11-26T23:00:54.504822+00:00",
                      "context": {
                        "id": "01HG6XTHK7PP4PP4YWS846BY3E",
                        "parent_id": null,
                        "user_id": "2eb48afb57034b2eb5b96583279df927"
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_boolean.theater_mode"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T23:00:54.508446+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG6XTHK9KSQGPW7G2NJ7CN8H",
                    "parent_id": "01HG6XTHK7PP4PP4YWS846BY3E",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-26T23:00:54.508522+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-26T23:00:54.508555+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-26T23:00:54.508588+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "action/0/else/0": [
              {
                "path": "action/0/else/0",
                "timestamp": "2023-11-26T23:00:54.508888+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.adaptive_lighting_living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674368220338",
            "alias": "MEDIA - Toggle theater mode",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.theater_mode"
                ]
              }
            ],
            "condition": [],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  }
                ],
                "then": [
                  {
                    "service": "input_boolean.turn_off",
                    "data": {},
                    "target": {
                      "entity_id": "switch.adaptive_lighting_living_room"
                    }
                  },
                  {
                    "service": "automation.trigger",
                    "data": {},
                    "target": {
                      "entity_id": "automation.media_theater_mode_playing"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_boolean.turn_on",
                    "data": {},
                    "target": {
                      "entity_id": "switch.adaptive_lighting_living_room"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6XTHK9KSQGPW7G2NJ7CN8H",
            "parent_id": "01HG6XTHK7PP4PP4YWS846BY3E",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/else/0",
          "run_id": "19707def48bcd675960948d8d3fc994f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T23:00:54.505975+00:00",
            "finish": "2023-11-26T23:00:54.511451+00:00"
          },
          "domain": "automation",
          "item_id": "1674368220338",
          "trigger": "state of input_boolean.theater_mode"
        }
      }
    ],
    "automation.1674182650722": [
      {
        "extended_dict": {
          "last_step": "action/2",
          "run_id": "51e3d8f375b7d66b169b881601a1a97c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:54:30.899611+00:00",
            "finish": "2023-11-26T17:54:31.008848+00:00"
          },
          "domain": "automation",
          "item_id": "1674182650722",
          "trigger": "state of group.residents",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T17:54:30.899663+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_off_all_lights_when_away",
                    "state": "on",
                    "attributes": {
                      "id": "1674182650722",
                      "last_triggered": "2023-11-25T23:07:55.234671+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn off all lights when away"
                    },
                    "last_changed": "2023-11-26T11:01:53.597409+00:00",
                    "last_updated": "2023-11-26T11:01:53.597409+00:00",
                    "context": {
                      "id": "01HG5MNZSXEZQMGKTKDVG12NFE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "group.residents",
                    "from_state": {
                      "entity_id": "group.residents",
                      "state": "home",
                      "attributes": {
                        "entity_id": [
                          "person.cecilia_ueda",
                          "sensor.cecilia_redminote8_home",
                          "person.christian_silva",
                          "sensor.christian_christian_sp_home"
                        ],
                        "order": 0,
                        "friendly_name": "Residents"
                      },
                      "last_changed": "2023-11-26T11:02:15.690059+00:00",
                      "last_updated": "2023-11-26T11:02:15.690059+00:00",
                      "context": {
                        "id": "01HG5MPNCASPPHJ9NNATNKQBZ7",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "group.residents",
                      "state": "not_home",
                      "attributes": {
                        "entity_id": [
                          "person.cecilia_ueda",
                          "sensor.cecilia_redminote8_home",
                          "person.christian_silva",
                          "sensor.christian_christian_sp_home"
                        ],
                        "order": 0,
                        "friendly_name": "Residents"
                      },
                      "last_changed": "2023-11-26T17:49:30.898254+00:00",
                      "last_updated": "2023-11-26T17:49:30.898254+00:00",
                      "context": {
                        "id": "01HG6C0BWHXMV621BR8DJEMVJG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 300.0
                    },
                    "attribute": null,
                    "description": "state of group.residents"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T17:54:30.900024+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG6C9GVK29GC6HQT83CTR5VC",
                    "parent_id": "01HG6C0BWHXMV621BR8DJEMVJG",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom",
                        "living_room",
                        "office",
                        "kitchen"
                      ],
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-26T17:54:30.992259+00:00",
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2023-11-26T17:54:31.007221+00:00",
                "result": {
                  "params": {
                    "domain": "remote",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674182650722",
            "alias": "LIGHT - Turn off all lights when away",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "group.residents"
                ],
                "to": "not_home",
                "for": {
                  "hours": 0,
                  "minutes": 5,
                  "seconds": 0
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": [
                    "bedroom",
                    "living_room",
                    "office",
                    "kitchen"
                  ],
                  "entity_id": "light.kitchen_light_group"
                }
              },
              {
                "service": "switch.turn_off",
                "data": {},
                "target": {
                  "area_id": "bedroom"
                }
              },
              {
                "service": "remote.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6C9GVK29GC6HQT83CTR5VC",
            "parent_id": "01HG6C0BWHXMV621BR8DJEMVJG",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2",
          "run_id": "51e3d8f375b7d66b169b881601a1a97c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:54:30.899611+00:00",
            "finish": "2023-11-26T17:54:31.008848+00:00"
          },
          "domain": "automation",
          "item_id": "1674182650722",
          "trigger": "state of group.residents"
        }
      }
    ],
    "automation.1672522611577": [
      {
        "extended_dict": {
          "last_step": "action/0/choose/1/sequence/0",
          "run_id": "58d00b48fdcf3cb3d693429cd86f9491",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T20:00:00.297334+00:00",
            "finish": "2023-11-28T20:00:00.303479+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T20:00:00.297399+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-28T01:00:00.320437+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-28T15:21:57.302099+00:00",
                    "last_updated": "2023-11-28T15:21:57.302099+00:00",
                    "context": {
                      "id": "01HGB8BKSP84PZH7YC5M56RE45",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T17:00:00.297206-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T20:00:00.297596+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBR8QS9CAY3KBSDV95TR8EV",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 1
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-28T20:00:00.297863+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-28T20:00:00.297880+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00.297888"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2023-11-28T20:00:00.297919+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2023-11-28T20:00:00.297932+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00.297939"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "action/0/choose/1/sequence/0": [
              {
                "path": "action/0/choose/1/sequence/0",
                "timestamp": "2023-11-28T20:00:00.298073+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "shoulder",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBR8QS9CAY3KBSDV95TR8EV",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/1/sequence/0",
          "run_id": "58d00b48fdcf3cb3d693429cd86f9491",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T20:00:00.297334+00:00",
            "finish": "2023-11-28T20:00:00.303479+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/choose/2/sequence/0",
          "run_id": "c3b840b7532320fbe984d74376214a18",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T21:00:00.486431+00:00",
            "finish": "2023-11-28T21:00:00.499241+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-28T21:00:00.486488+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-28T20:00:00.297463+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-28T15:21:57.302099+00:00",
                    "last_updated": "2023-11-28T20:00:00.303411+00:00",
                    "context": {
                      "id": "01HGBR8QS9CAY3KBSDV95TR8EV",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T18:00:00.486209-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T21:00:00.486820+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBVPKK64TQ2S2V5FC4K7F0N",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-28T21:00:00.486892+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-28T21:00:00.486923+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00.486937"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2023-11-28T21:00:00.486999+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2023-11-28T21:00:00.487027+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00.487040"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/2": [
              {
                "path": "action/0/choose/2",
                "timestamp": "2023-11-28T21:00:00.487089+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/2/conditions/0": [
              {
                "path": "action/0/choose/2/conditions/0",
                "timestamp": "2023-11-28T21:00:00.487125+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00.487139"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "action/0/choose/2/sequence/0": [
              {
                "path": "action/0/choose/2/sequence/0",
                "timestamp": "2023-11-28T21:00:00.487420+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "peak",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBVPKK64TQ2S2V5FC4K7F0N",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/2/sequence/0",
          "run_id": "c3b840b7532320fbe984d74376214a18",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T21:00:00.486431+00:00",
            "finish": "2023-11-28T21:00:00.499241+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/choose/2/sequence/0",
          "run_id": "27a40e3da496c054b74ada310213e2f9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:00:00.347973+00:00",
            "finish": "2023-11-28T22:00:00.349424+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/3": [
              {
                "path": "trigger/3",
                "timestamp": "2023-11-28T22:00:00.348004+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-28T21:00:00.486591+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-28T15:21:57.302099+00:00",
                    "last_updated": "2023-11-28T21:00:00.499073+00:00",
                    "context": {
                      "id": "01HGBVPKK64TQ2S2V5FC4K7F0N",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "3",
                    "idx": "3",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T19:00:00.347872-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T22:00:00.348175+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBZ4F2VTSGTCXBZ3CPRE90W",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-28T22:00:00.348212+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-28T22:00:00.348232+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00.348240"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2023-11-28T22:00:00.348268+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2023-11-28T22:00:00.348282+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00.348288"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/2": [
              {
                "path": "action/0/choose/2",
                "timestamp": "2023-11-28T22:00:00.348310+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/2/conditions/0": [
              {
                "path": "action/0/choose/2/conditions/0",
                "timestamp": "2023-11-28T22:00:00.348326+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00.348332"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "action/0/choose/2/sequence/0": [
              {
                "path": "action/0/choose/2/sequence/0",
                "timestamp": "2023-11-28T22:00:00.348462+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "peak",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBZ4F2VTSGTCXBZ3CPRE90W",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/2/sequence/0",
          "run_id": "27a40e3da496c054b74ada310213e2f9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:00:00.347973+00:00",
            "finish": "2023-11-28T22:00:00.349424+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/choose/3/sequence/0",
          "run_id": "a202dbaf4e35709317daa27b52d3642e",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:00:00.118739+00:00",
            "finish": "2023-11-29T00:00:00.127836+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/4": [
              {
                "path": "trigger/4",
                "timestamp": "2023-11-29T00:00:00.118816+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-28T22:00:00.348054+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-28T22:08:09.362131+00:00",
                    "last_updated": "2023-11-28T22:08:09.362131+00:00",
                    "context": {
                      "id": "01HGBZKCMJ84PZH7YC5M56RE45",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "4",
                    "idx": "4",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T21:00:00.118425-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T00:00:00.119216+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC6063PCXJM28GTRW10QMDT",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 3
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-29T00:00:00.119741+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-29T00:00:00.119776+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00.119794"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2023-11-29T00:00:00.119858+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2023-11-29T00:00:00.119889+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00.119905"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/2": [
              {
                "path": "action/0/choose/2",
                "timestamp": "2023-11-29T00:00:00.119956+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/2/conditions/0": [
              {
                "path": "action/0/choose/2/conditions/0",
                "timestamp": "2023-11-29T00:00:00.119983+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00.120004"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/3": [
              {
                "path": "action/0/choose/3",
                "timestamp": "2023-11-29T00:00:00.120053+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/3/conditions/0": [
              {
                "path": "action/0/choose/3/conditions/0",
                "timestamp": "2023-11-29T00:00:00.120080+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00.120120"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "action/0/choose/3/sequence/0": [
              {
                "path": "action/0/choose/3/sequence/0",
                "timestamp": "2023-11-29T00:00:00.120394+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "shoulder",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC6063PCXJM28GTRW10QMDT",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/3/sequence/0",
          "run_id": "a202dbaf4e35709317daa27b52d3642e",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:00:00.118739+00:00",
            "finish": "2023-11-29T00:00:00.127836+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/choose/0/sequence/0",
          "run_id": "1ec9b6ab2eb96b29a352c1f4bc69340f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T01:00:00.453678+00:00",
            "finish": "2023-11-29T01:00:00.467067+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T01:00:00.453750+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-29T00:00:00.118936+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-28T22:08:09.362131+00:00",
                    "last_updated": "2023-11-29T00:00:00.127676+00:00",
                    "context": {
                      "id": "01HGC6063PCXJM28GTRW10QMDT",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T22:00:00.453405-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T01:00:00.454136+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC9E225T3GGZJBDNMDBTYZX",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-29T01:00:00.454216+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-29T01:00:00.454250+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00.454266"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "action/0/choose/0/sequence/0": [
              {
                "path": "action/0/choose/0/sequence/0",
                "timestamp": "2023-11-29T01:00:00.454563+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "offpeak",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC9E225T3GGZJBDNMDBTYZX",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/0/sequence/0",
          "run_id": "1ec9b6ab2eb96b29a352c1f4bc69340f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T01:00:00.453678+00:00",
            "finish": "2023-11-29T01:00:00.467067+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      }
    ],
    "automation.1684184359544": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "1d4da71dcf6d0b310d61b49f55a660c2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T20:28:02.330083+00:00",
            "finish": "2023-11-26T20:28:02.345491+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T20:28:02.330129+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_blanket_after_3_hours",
                    "state": "on",
                    "attributes": {
                      "id": "1684184359544",
                      "last_triggered": "2023-11-26T02:56:33.527531+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off blanket after 3 hours"
                    },
                    "last_changed": "2023-11-26T11:01:53.600284+00:00",
                    "last_updated": "2023-11-26T11:01:53.600284+00:00",
                    "context": {
                      "id": "01HG5MNZT0SJSNQYEAZ7JYSC2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "switch.local_electric_blanket_socket",
                    "from_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "off",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-26T11:01:53.856024+00:00",
                      "last_updated": "2023-11-26T11:01:53.856024+00:00",
                      "context": {
                        "id": "01HG5MP020P1ET9PM4N1PFHA00",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "on",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-26T20:28:02.328863+00:00",
                      "last_updated": "2023-11-26T20:28:02.328863+00:00",
                      "context": {
                        "id": "01HG6N2MCRS2J2S21ZG2SNZF1R",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of switch.local_electric_blanket_socket"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T20:28:02.330479+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG6N2MCT6S1ARGCY4Z8K8NAA",
                    "parent_id": "01HG6N2MCRS2J2S21ZG2SNZF1R",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "number",
                    "service": "set_value",
                    "service_data": {
                      "value": "180",
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684184359544",
            "alias": "SWITCH - Turn off blanket after 3 hours",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "switch.local_electric_blanket_socket"
                ],
                "from": "off",
                "to": "on"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "number.set_value",
                "data": {
                  "value": "180"
                },
                "target": {
                  "entity_id": "number.local_electric_blanket_socket_timer"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6N2MCT6S1ARGCY4Z8K8NAA",
            "parent_id": "01HG6N2MCRS2J2S21ZG2SNZF1R",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "1d4da71dcf6d0b310d61b49f55a660c2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T20:28:02.330083+00:00",
            "finish": "2023-11-26T20:28:02.345491+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "a5e6cc605d0447fba13c720f934160d5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T03:06:24.047214+00:00",
            "finish": "2023-11-27T03:06:24.062437+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T03:06:24.047256+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_blanket_after_3_hours",
                    "state": "on",
                    "attributes": {
                      "id": "1684184359544",
                      "last_triggered": "2023-11-26T20:28:02.330241+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off blanket after 3 hours"
                    },
                    "last_changed": "2023-11-26T11:01:53.600284+00:00",
                    "last_updated": "2023-11-26T20:28:02.345310+00:00",
                    "context": {
                      "id": "01HG6N2MCT6S1ARGCY4Z8K8NAA",
                      "parent_id": "01HG6N2MCRS2J2S21ZG2SNZF1R",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "switch.local_electric_blanket_socket",
                    "from_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "off",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-26T21:17:37.260170+00:00",
                      "last_updated": "2023-11-26T21:17:37.260170+00:00",
                      "context": {
                        "id": "01HG6QXDKCBTNR1JHV7MK3PTFE",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "on",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-27T03:06:24.045922+00:00",
                      "last_updated": "2023-11-27T03:06:24.045922+00:00",
                      "context": {
                        "id": "01HG7BW1XDGMGJRD4B2WV7KVK9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of switch.local_electric_blanket_socket"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T03:06:24.048273+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG7BW1XFW8CHWHMPGZP3QDHB",
                    "parent_id": "01HG7BW1XDGMGJRD4B2WV7KVK9",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "number",
                    "service": "set_value",
                    "service_data": {
                      "value": "180",
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684184359544",
            "alias": "SWITCH - Turn off blanket after 3 hours",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "switch.local_electric_blanket_socket"
                ],
                "from": "off",
                "to": "on"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "number.set_value",
                "data": {
                  "value": "180"
                },
                "target": {
                  "entity_id": "number.local_electric_blanket_socket_timer"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG7BW1XFW8CHWHMPGZP3QDHB",
            "parent_id": "01HG7BW1XDGMGJRD4B2WV7KVK9",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "a5e6cc605d0447fba13c720f934160d5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T03:06:24.047214+00:00",
            "finish": "2023-11-27T03:06:24.062437+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "54e398c053386ccd16315d175db9e51b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:30:42.751923+00:00",
            "finish": "2023-11-28T01:30:42.767714+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T01:30:42.751962+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_blanket_after_3_hours",
                    "state": "on",
                    "attributes": {
                      "id": "1684184359544",
                      "last_triggered": "2023-11-27T03:06:24.047345+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off blanket after 3 hours"
                    },
                    "last_changed": "2023-11-27T11:37:20.871847+00:00",
                    "last_updated": "2023-11-27T11:37:20.871847+00:00",
                    "context": {
                      "id": "01HG893M77680W9GBFAJH9ASES",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "switch.local_electric_blanket_socket",
                    "from_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "off",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-27T11:37:21.146704+00:00",
                      "last_updated": "2023-11-27T11:37:21.146704+00:00",
                      "context": {
                        "id": "01HG893MFTA35WZJJVWCH991ZF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "on",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-28T01:30:42.750715+00:00",
                      "last_updated": "2023-11-28T01:30:42.750715+00:00",
                      "context": {
                        "id": "01HG9RSJ5YACE64383EN786RBW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of switch.local_electric_blanket_socket"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T01:30:42.752307+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9RSJ5Z70GPJS0NEV0E5QKN",
                    "parent_id": "01HG9RSJ5YACE64383EN786RBW",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "number",
                    "service": "set_value",
                    "service_data": {
                      "value": "180",
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684184359544",
            "alias": "SWITCH - Turn off blanket after 3 hours",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "switch.local_electric_blanket_socket"
                ],
                "from": "off",
                "to": "on"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "number.set_value",
                "data": {
                  "value": "180"
                },
                "target": {
                  "entity_id": "number.local_electric_blanket_socket_timer"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9RSJ5Z70GPJS0NEV0E5QKN",
            "parent_id": "01HG9RSJ5YACE64383EN786RBW",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "54e398c053386ccd16315d175db9e51b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:30:42.751923+00:00",
            "finish": "2023-11-28T01:30:42.767714+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "2553db899c3085cdfc6077bd5d7aa942",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T03:22:43.851633+00:00",
            "finish": "2023-11-29T03:22:43.865684+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T03:22:43.851655+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_blanket_after_3_hours",
                    "state": "on",
                    "attributes": {
                      "id": "1684184359544",
                      "last_triggered": "2023-11-28T01:30:42.752048+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off blanket after 3 hours"
                    },
                    "last_changed": "2023-11-28T22:08:09.364628+00:00",
                    "last_updated": "2023-11-28T22:08:09.364628+00:00",
                    "context": {
                      "id": "01HGBZKCMMJ5AJFHP9KFKDQAZ6",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "switch.local_electric_blanket_socket",
                    "from_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "off",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-28T22:08:09.443919+00:00",
                      "last_updated": "2023-11-28T22:08:09.443919+00:00",
                      "context": {
                        "id": "01HGBZKCQ3HR4XWBGSMY7HWRDS",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "on",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-29T03:22:43.851045+00:00",
                      "last_updated": "2023-11-29T03:22:43.851045+00:00",
                      "context": {
                        "id": "01HGCHKCRBNBYWF3NM5KEVX5K2",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of switch.local_electric_blanket_socket"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T03:22:43.851808+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGCHKCRB5QJN6F7P633A1G55",
                    "parent_id": "01HGCHKCRBNBYWF3NM5KEVX5K2",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "number",
                    "service": "set_value",
                    "service_data": {
                      "value": "180",
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684184359544",
            "alias": "SWITCH - Turn off blanket after 3 hours",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "switch.local_electric_blanket_socket"
                ],
                "from": "off",
                "to": "on"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "number.set_value",
                "data": {
                  "value": "180"
                },
                "target": {
                  "entity_id": "number.local_electric_blanket_socket_timer"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCHKCRB5QJN6F7P633A1G55",
            "parent_id": "01HGCHKCRBNBYWF3NM5KEVX5K2",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "2553db899c3085cdfc6077bd5d7aa942",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T03:22:43.851633+00:00",
            "finish": "2023-11-29T03:22:43.865684+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket"
        }
      }
    ],
    "automation.1684209757433": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "842d6bb6990a8a9234639df2ec8f7cac",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T20:30:00.202073+00:00",
            "finish": "2023-11-26T20:30:00.202260+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T20:30:00.202122+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_off_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209757433",
                      "last_triggered": "2023-11-24T20:30:00.317787+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn off automation"
                    },
                    "last_changed": "2023-11-26T11:01:53.601210+00:00",
                    "last_updated": "2023-11-26T11:01:53.601210+00:00",
                    "context": {
                      "id": "01HG5MNZT176TP9HC55MA0HJHE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T17:30:00.201833-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T20:30:00.202160+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-26T20:30:00.202188+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:29:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:30:00.202202"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "mon"
                  ],
                  "now_weekday": "sun",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209757433",
            "alias": "HEATER - Turn off automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "17:30:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "17:29:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri",
                      "mon"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_off",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6N67GA1282AJKQPP5FQ4XE",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "842d6bb6990a8a9234639df2ec8f7cac",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T20:30:00.202073+00:00",
            "finish": "2023-11-26T20:30:00.202260+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "cb1af47b78202f5632ba004a7baacdf7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T20:30:00.154811+00:00",
            "finish": "2023-11-27T20:30:00.156400+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T20:30:00.154853+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_off_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209757433",
                      "last_triggered": "2023-11-24T20:30:00.317787+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn off automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.872740+00:00",
                    "last_updated": "2023-11-27T11:37:20.872740+00:00",
                    "context": {
                      "id": "01HG893M78MA0GGHC97E9K2193",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T17:30:00.154509-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T20:30:00.154894+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T20:30:00.154923+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:29:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:30:00.154939"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "mon"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T20:30:00.155355+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG97JYET2YYR6YNT8ZP1ZTJ5",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.heater_automation"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209757433",
            "alias": "HEATER - Turn off automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "17:30:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "17:29:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri",
                      "mon"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_off",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG97JYET2YYR6YNT8ZP1ZTJ5",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "cb1af47b78202f5632ba004a7baacdf7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T20:30:00.154811+00:00",
            "finish": "2023-11-27T20:30:00.156400+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "1bf91de7306f0757ea530a74dc34e824",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T20:30:00.392771+00:00",
            "finish": "2023-11-28T20:30:00.394388+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T20:30:00.392813+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_off_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209757433",
                      "last_triggered": "2023-11-27T20:30:00.155094+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn off automation"
                    },
                    "last_changed": "2023-11-28T15:21:57.305387+00:00",
                    "last_updated": "2023-11-28T15:21:57.305387+00:00",
                    "context": {
                      "id": "01HGB8BKSSXSZMQ34SG8RZV93V",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T17:30:00.392518-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T20:30:00.392850+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T20:30:00.392877+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:29:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:30:00.392900"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "mon"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T20:30:00.393342+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBSZNP840KYA3MFJ5R7CM03",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.heater_automation"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209757433",
            "alias": "HEATER - Turn off automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "17:30:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "17:29:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri",
                      "mon"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_off",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBSZNP840KYA3MFJ5R7CM03",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "1bf91de7306f0757ea530a74dc34e824",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T20:30:00.392771+00:00",
            "finish": "2023-11-28T20:30:00.394388+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time"
        }
      }
    ],
    "automation.1680553973480": [
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "9af9e79bcb128d60288274c485760fd2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T02:57:34.534627+00:00",
            "finish": "2023-11-27T02:57:34.606567+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T02:57:34.534649+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-26T23:06:22.426313+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-26T11:01:53.599478+00:00",
                    "last_updated": "2023-11-26T23:06:22.506552+00:00",
                    "context": {
                      "id": "01HG6Y4HTTGJTQ4Y0P6WRH7Q5Z",
                      "parent_id": "01HG6Y4HTSXC6JMT73VTE017JZ",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T02:57:34.534503+00:00",
                      "context": {
                        "id": "01HG7BBWT66QMCPQXKFVDVXHB7",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T02:57:34.534820+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG7BBWT6YX7PFB4VYE0JMT5A",
                    "parent_id": "01HG7BBWT66QMCPQXKFVDVXHB7",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T02:57:34.535025+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T02:57:34.535060+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T02:57:34.535075+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T02:57:34.535127+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T02:57:34.535173+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T02:57:34.535335+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG7BBWT6YX7PFB4VYE0JMT5A",
            "parent_id": "01HG7BBWT66QMCPQXKFVDVXHB7",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "9af9e79bcb128d60288274c485760fd2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T02:57:34.534627+00:00",
            "finish": "2023-11-27T02:57:34.606567+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "077d63fee399de9b9f3289a339555eba",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:39:21.658594+00:00",
            "finish": "2023-11-27T21:39:21.736353+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T21:39:21.658630+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-27T02:57:34.534701+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871034+00:00",
                    "last_updated": "2023-11-27T11:37:20.871034+00:00",
                    "context": {
                      "id": "01HG893M774S1P61C4Z89DCM2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T21:39:21.658325+00:00",
                      "context": {
                        "id": "01HG9BHYDTHR6SHEP85DJ9J3WC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T21:39:21.658951+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9BHYDTRP7Q4DNKPGBHYGE7",
                    "parent_id": "01HG9BHYDTHR6SHEP85DJ9J3WC",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T21:39:21.659479+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T21:39:21.660432+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T21:39:21.660470+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T21:39:21.660613+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T21:39:21.660745+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T21:39:21.661121+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9BHYDTRP7Q4DNKPGBHYGE7",
            "parent_id": "01HG9BHYDTHR6SHEP85DJ9J3WC",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "077d63fee399de9b9f3289a339555eba",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:39:21.658594+00:00",
            "finish": "2023-11-27T21:39:21.736353+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "74a271ad89971f60fb6ea45fe0f14e21",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:38:15.317327+00:00",
            "finish": "2023-11-27T22:38:17.005108+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T22:38:15.317364+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-27T21:39:21.658734+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871034+00:00",
                    "last_updated": "2023-11-27T21:39:21.735804+00:00",
                    "context": {
                      "id": "01HG9BHYDTRP7Q4DNKPGBHYGE7",
                      "parent_id": "01HG9BHYDTHR6SHEP85DJ9J3WC",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T22:38:15.317084+00:00",
                      "context": {
                        "id": "01HG9EXS8N8RFQYVWN8F28TSV0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:38:15.317667+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9EXS8N29C2ER0F94PZPSHC",
                    "parent_id": "01HG9EXS8N8RFQYVWN8F28TSV0",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T22:38:15.318059+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T22:38:15.318127+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T22:38:15.318159+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T22:38:15.318267+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T22:38:15.318362+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T22:38:15.318701+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9EXS8N29C2ER0F94PZPSHC",
            "parent_id": "01HG9EXS8N8RFQYVWN8F28TSV0",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "74a271ad89971f60fb6ea45fe0f14e21",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:38:15.317327+00:00",
            "finish": "2023-11-27T22:38:17.005108+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "b3043cbb7d420be28f8f5b889db7591a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:56:17.241400+00:00",
            "finish": "2023-11-27T22:56:17.321029+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T22:56:17.241461+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-27T22:38:15.317457+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871034+00:00",
                    "last_updated": "2023-11-27T22:38:17.003557+00:00",
                    "context": {
                      "id": "01HG9EXS8N29C2ER0F94PZPSHC",
                      "parent_id": "01HG9EXS8N8RFQYVWN8F28TSV0",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T22:56:17.241149+00:00",
                      "context": {
                        "id": "01HG9FYSTS424PDJC6ENZ6F1WB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:56:17.241797+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9FYSTSV4SGVDR0NHSGZQKY",
                    "parent_id": "01HG9FYSTS424PDJC6ENZ6F1WB",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T22:56:17.242201+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T22:56:17.242271+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T22:56:17.242305+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T22:56:17.242412+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T22:56:17.242506+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T22:56:17.242843+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9FYSTSV4SGVDR0NHSGZQKY",
            "parent_id": "01HG9FYSTS424PDJC6ENZ6F1WB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "b3043cbb7d420be28f8f5b889db7591a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:56:17.241400+00:00",
            "finish": "2023-11-27T22:56:17.321029+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "3cb5593b1e0bd4d0642b34f83bd62a39",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T03:30:12.961270+00:00",
            "finish": "2023-11-28T03:30:13.041875+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T03:30:12.961330+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-27T22:56:17.241560+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871034+00:00",
                    "last_updated": "2023-11-27T22:56:17.320863+00:00",
                    "context": {
                      "id": "01HG9FYSTSV4SGVDR0NHSGZQKY",
                      "parent_id": "01HG9FYSTS424PDJC6ENZ6F1WB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T03:30:12.960983+00:00",
                      "context": {
                        "id": "01HG9ZMCB0ZHR2JE8TQJC8D5RW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T03:30:12.963030+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9ZMCB195JXEMSVCKSRPJHW",
                    "parent_id": "01HG9ZMCB0ZHR2JE8TQJC8D5RW",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T03:30:12.963434+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T03:30:12.963505+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T03:30:12.963535+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T03:30:12.963639+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T03:30:12.963729+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T03:30:12.964084+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9ZMCB195JXEMSVCKSRPJHW",
            "parent_id": "01HG9ZMCB0ZHR2JE8TQJC8D5RW",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "3cb5593b1e0bd4d0642b34f83bd62a39",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T03:30:12.961270+00:00",
            "finish": "2023-11-28T03:30:13.041875+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      }
    ],
    "automation.1674924848329": [
      {
        "extended_dict": {
          "last_step": "action/1/choose/1/sequence/0",
          "run_id": "1b1ec8b2b7d37dea34f66739e8a769d0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:04:58.494174+00:00",
            "finish": "2023-11-28T22:04:58.500071+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T22:04:58.494227+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-28T01:12:37.728892+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-28T15:21:57.303536+00:00",
                    "last_updated": "2023-11-28T15:21:57.303536+00:00",
                    "context": {
                      "id": "01HGB8BKSQ29T6KXGE0EXSKJWK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "on",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T22:04:58.493569+00:00",
                      "context": {
                        "id": "01HGBZDJ7XZ2QX1VN3VDYND955",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T22:04:58.494629+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBZDJ7Y06AVE98YV089V2SD",
                    "parent_id": "01HGBZDJ7XZ2QX1VN3VDYND955",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T22:04:58.494898+00:00",
                "changed_variables": {
                  "command": "on",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 1
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T22:04:58.495064+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T22:04:58.495080+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/choose/1": [
              {
                "path": "action/1/choose/1",
                "timestamp": "2023-11-28T22:04:58.495156+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/1/conditions/0": [
              {
                "path": "action/1/choose/1/conditions/0",
                "timestamp": "2023-11-28T22:04:58.495172+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/1/conditions/1": [
              {
                "path": "action/1/choose/1/conditions/1",
                "timestamp": "2023-11-28T22:04:58.495247+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/1/conditions/2": [
              {
                "path": "action/1/choose/1/conditions/2",
                "timestamp": "2023-11-28T22:04:58.495331+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/1/sequence/0": [
              {
                "path": "action/1/choose/1/sequence/0",
                "timestamp": "2023-11-28T22:04:58.495583+00:00",
                "child_id": {
                  "domain": "script",
                  "item_id": "turn_on_off_christian_pc",
                  "run_id": "89b608c2ebd11a850ffd0b7a93d9575a"
                },
                "result": {
                  "params": {
                    "domain": "script",
                    "service": "turn_on_off_christian_pc",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGBZDJ7Y06AVE98YV089V2SD",
            "parent_id": "01HGBZDJ7XZ2QX1VN3VDYND955",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/1/sequence/0",
          "run_id": "1b1ec8b2b7d37dea34f66739e8a769d0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:04:58.494174+00:00",
            "finish": "2023-11-28T22:04:58.500071+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "50b4151dc33cf41bc2a8c9691079a9a7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:06:52.997555+00:00",
            "finish": "2023-11-28T22:06:53.017120+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T22:06:52.997645+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-28T22:04:58.494299+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-28T15:21:57.303536+00:00",
                    "last_updated": "2023-11-28T22:04:58.499568+00:00",
                    "context": {
                      "id": "01HGBZDJ7Y06AVE98YV089V2SD",
                      "parent_id": "01HGBZDJ7XZ2QX1VN3VDYND955",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T22:06:52.997302+00:00",
                      "context": {
                        "id": "01HGBZH22557TQ2176P3QQNC69",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T22:06:52.997968+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBZH225HW5JGKYGW6W90NGM",
                    "parent_id": "01HGBZH22557TQ2176P3QQNC69",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T22:06:52.998375+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T22:06:52.998442+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T22:06:52.998474+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T22:06:52.998579+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T22:06:52.998674+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T22:06:52.999038+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGBZH225HW5JGKYGW6W90NGM",
            "parent_id": "01HGBZH22557TQ2176P3QQNC69",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "50b4151dc33cf41bc2a8c9691079a9a7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:06:52.997555+00:00",
            "finish": "2023-11-28T22:06:53.017120+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "82d9108d67128d8338cbe880291544a2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:38:28.739240+00:00",
            "finish": "2023-11-28T22:38:28.759844+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T22:38:28.739309+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-28T22:06:52.997744+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-28T22:08:09.363569+00:00",
                    "last_updated": "2023-11-28T22:08:09.363569+00:00",
                    "context": {
                      "id": "01HGBZKCMK29T6KXGE0EXSKJWK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T22:38:28.738972+00:00",
                      "context": {
                        "id": "01HGC1AXC2PT30BX8Z55VCP2F9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T22:38:28.739671+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC1AXC3TH45WA6ND4WBF13M",
                    "parent_id": "01HGC1AXC2PT30BX8Z55VCP2F9",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T22:38:28.740718+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T22:38:28.741048+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T22:38:28.741101+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T22:38:28.741246+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T22:38:28.741374+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T22:38:28.741767+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGC1AXC3TH45WA6ND4WBF13M",
            "parent_id": "01HGC1AXC2PT30BX8Z55VCP2F9",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "82d9108d67128d8338cbe880291544a2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:38:28.739240+00:00",
            "finish": "2023-11-28T22:38:28.759844+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "a9e0d0e3c281ba191aafef9b28b83c86",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:55:20.831336+00:00",
            "finish": "2023-11-29T00:55:20.847045+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:55:20.831392+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-28T22:38:28.739437+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-28T22:08:09.363569+00:00",
                    "last_updated": "2023-11-28T22:38:28.759646+00:00",
                    "context": {
                      "id": "01HGC1AXC3TH45WA6ND4WBF13M",
                      "parent_id": "01HGC1AXC2PT30BX8Z55VCP2F9",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-29T00:55:20.831135+00:00",
                      "context": {
                        "id": "01HGC95GZZTBV4X90W4H8AE3XT",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T00:55:20.831654+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC95GZZWGZVWXR2WB3161Q5",
                    "parent_id": "01HGC95GZZTBV4X90W4H8AE3XT",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-29T00:55:20.831929+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-29T00:55:20.831964+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-29T00:55:20.831980+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-29T00:55:20.832053+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-29T00:55:20.832101+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-29T00:55:20.832304+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGC95GZZWGZVWXR2WB3161Q5",
            "parent_id": "01HGC95GZZTBV4X90W4H8AE3XT",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "a9e0d0e3c281ba191aafef9b28b83c86",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:55:20.831336+00:00",
            "finish": "2023-11-29T00:55:20.847045+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "b78d8c96d2d15ff9fd201beaffa2c639",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:55:27.670102+00:00",
            "finish": "2023-11-29T00:55:27.685074+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T00:55:27.670154+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-29T00:55:20.831477+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-28T22:08:09.363569+00:00",
                    "last_updated": "2023-11-29T00:55:20.846936+00:00",
                    "context": {
                      "id": "01HGC95GZZWGZVWXR2WB3161Q5",
                      "parent_id": "01HGC95GZZTBV4X90W4H8AE3XT",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-29T00:55:27.669977+00:00",
                      "context": {
                        "id": "01HGC95QNNM904KQV9K09VC5YV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T00:55:27.670319+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC95QNP3VGZFCAVC07GNMR7",
                    "parent_id": "01HGC95QNNM904KQV9K09VC5YV",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-29T00:55:27.670533+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-29T00:55:27.670567+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-29T00:55:27.670582+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-29T00:55:27.670635+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-29T00:55:27.670679+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-29T00:55:27.670838+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGC95QNP3VGZFCAVC07GNMR7",
            "parent_id": "01HGC95QNNM904KQV9K09VC5YV",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "b78d8c96d2d15ff9fd201beaffa2c639",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T00:55:27.670102+00:00",
            "finish": "2023-11-29T00:55:27.685074+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      }
    ],
    "automation.1675913952899": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "1093c445fb773ac9f3d579443f1921c3",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T04:00:00.186137+00:00",
            "finish": "2023-11-27T04:00:00.187555+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T04:00:00.186189+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_sleep_time",
                    "state": "on",
                    "attributes": {
                      "id": "1675913952899",
                      "last_triggered": "2023-11-26T04:00:00.053335+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on sleep time"
                    },
                    "last_changed": "2023-11-26T11:01:53.598835+00:00",
                    "last_updated": "2023-11-26T11:01:53.598835+00:00",
                    "context": {
                      "id": "01HG5MNZSY8RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T01:00:00.185880-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T04:00:00.186577+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG7EY6NTZDG4170H4JJTQG7E",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.sleep_time"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1675913952899",
            "alias": "LIGHT - Turn on sleep time",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.sleep_time"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG7EY6NTZDG4170H4JJTQG7E",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "1093c445fb773ac9f3d579443f1921c3",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T04:00:00.186137+00:00",
            "finish": "2023-11-27T04:00:00.187555+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "f8149173f8bc22e9a61d848304397736",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T04:00:00.093795+00:00",
            "finish": "2023-11-28T04:00:00.094685+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T04:00:00.093820+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_sleep_time",
                    "state": "on",
                    "attributes": {
                      "id": "1675913952899",
                      "last_triggered": "2023-11-27T04:00:00.186316+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on sleep time"
                    },
                    "last_changed": "2023-11-27T11:37:20.870390+00:00",
                    "last_updated": "2023-11-27T11:37:20.870390+00:00",
                    "context": {
                      "id": "01HG893M76YD0G50GBYZWXG6YM",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T01:00:00.093612-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T04:00:00.094028+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGA1AXJXHQR2TPANJRK5C1ZG",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.sleep_time"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1675913952899",
            "alias": "LIGHT - Turn on sleep time",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.sleep_time"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGA1AXJXHQR2TPANJRK5C1ZG",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "f8149173f8bc22e9a61d848304397736",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T04:00:00.093795+00:00",
            "finish": "2023-11-28T04:00:00.094685+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "48528c97d2f0a307dde165a84943be51",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T04:00:00.129383+00:00",
            "finish": "2023-11-29T04:00:00.130752+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T04:00:00.129419+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_sleep_time",
                    "state": "on",
                    "attributes": {
                      "id": "1675913952899",
                      "last_triggered": "2023-11-28T04:00:00.093884+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on sleep time"
                    },
                    "last_changed": "2023-11-28T22:08:09.363760+00:00",
                    "last_updated": "2023-11-28T22:08:09.363760+00:00",
                    "context": {
                      "id": "01HGBZKCMK4H2GT1T1PERTZB8P",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-29T01:00:00.129145-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T04:00:00.129788+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGCKQMM1X99HDEZW5Y7H3V60",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.sleep_time"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1675913952899",
            "alias": "LIGHT - Turn on sleep time",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.sleep_time"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCKQMM1X99HDEZW5Y7H3V60",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "48528c97d2f0a307dde165a84943be51",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T04:00:00.129383+00:00",
            "finish": "2023-11-29T04:00:00.130752+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time"
        }
      }
    ],
    "automation.1697494475587": [
      {
        "extended_dict": {
          "last_step": "action/1",
          "run_id": "f023dad8903fe6d97abb9614fd8dddb0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T04:00:00.220927+00:00",
            "finish": "2023-11-27T04:00:00.715636+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T04:00:00.220964+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.turn_off_server",
                    "state": "on",
                    "attributes": {
                      "id": "1697494475587",
                      "last_triggered": "2023-11-26T04:00:00.309666+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SERVER - Turn off"
                    },
                    "last_changed": "2023-11-26T11:01:53.601843+00:00",
                    "last_updated": "2023-11-26T11:01:53.601843+00:00",
                    "context": {
                      "id": "01HG5MNZT1FCS836DRMGVW5Q7X",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T01:00:00.220710-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T04:00:00.221278+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG7EY6PWMYXJD4WM9833YTVK",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom",
                        "kitchen",
                        "living_room",
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T04:00:00.317224+00:00",
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "server_shutdown",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1697494475587",
            "alias": "Turn off server",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": [
                    "bedroom",
                    "kitchen",
                    "living_room",
                    "office"
                  ]
                },
                "enabled": true
              },
              {
                "service": "shell_command.server_shutdown",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG7EY6PWMYXJD4WM9833YTVK",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1",
          "run_id": "f023dad8903fe6d97abb9614fd8dddb0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T04:00:00.220927+00:00",
            "finish": "2023-11-27T04:00:00.715636+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1",
          "run_id": "0145bd8e0736c0ace7ff7cde33ded9b7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T04:00:00.353886+00:00",
            "finish": "2023-11-28T04:00:00.828060+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T04:00:00.353908+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.turn_off_server",
                    "state": "on",
                    "attributes": {
                      "id": "1697494475587",
                      "last_triggered": "2023-11-27T04:00:00.221076+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SERVER - Turn off"
                    },
                    "last_changed": "2023-11-27T11:37:20.873440+00:00",
                    "last_updated": "2023-11-27T11:37:20.873440+00:00",
                    "context": {
                      "id": "01HG893M7993TNH9G2KCNEGRGD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T01:00:00.353748-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T04:00:00.354096+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGA1AXV13S26EAMSBF6P8GWM",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom",
                        "kitchen",
                        "living_room",
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T04:00:00.455719+00:00",
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "server_shutdown",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1697494475587",
            "alias": "Turn off server",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": [
                    "bedroom",
                    "kitchen",
                    "living_room",
                    "office"
                  ]
                },
                "enabled": true
              },
              {
                "service": "shell_command.server_shutdown",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGA1AXV13S26EAMSBF6P8GWM",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1",
          "run_id": "0145bd8e0736c0ace7ff7cde33ded9b7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T04:00:00.353886+00:00",
            "finish": "2023-11-28T04:00:00.828060+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1",
          "run_id": "8e63fb77717b2f2ccdc12320d599415e",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T04:00:00.364616+00:00",
            "finish": "2023-11-29T04:00:00.814312+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-29T04:00:00.364653+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.turn_off_server",
                    "state": "on",
                    "attributes": {
                      "id": "1697494475587",
                      "last_triggered": "2023-11-28T04:00:00.353970+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SERVER - Turn off"
                    },
                    "last_changed": "2023-11-28T22:08:09.365524+00:00",
                    "last_updated": "2023-11-28T22:08:09.365524+00:00",
                    "context": {
                      "id": "01HGBZKCMN66FWJM3DSC5K7ZG0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-29T01:00:00.364375-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-29T04:00:00.364996+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGCKQMVCR83PR0PCR9D2ZAQK",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom",
                        "kitchen",
                        "living_room",
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-29T04:00:00.477834+00:00",
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "server_shutdown",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1697494475587",
            "alias": "Turn off server",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": [
                    "bedroom",
                    "kitchen",
                    "living_room",
                    "office"
                  ]
                },
                "enabled": true
              },
              {
                "service": "shell_command.server_shutdown",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGCKQMVCR83PR0PCR9D2ZAQK",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1",
          "run_id": "8e63fb77717b2f2ccdc12320d599415e",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-29T04:00:00.364616+00:00",
            "finish": "2023-11-29T04:00:00.814312+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time"
        }
      }
    ],
    "automation.1684185616423": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "90aa9884b95150e0683a027dadfc2cb5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T16:40:34.469723+00:00",
            "finish": "2023-11-27T16:40:35.516619+00:00"
          },
          "domain": "automation",
          "item_id": "1684185616423",
          "trigger": "state of vacuum.local_cleaner_robot",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T16:40:34.469767+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.vacuum_work_is_done",
                    "state": "on",
                    "attributes": {
                      "id": "1684185616423",
                      "last_triggered": "2023-11-24T16:25:20.829595+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "VACUUM - Work is done"
                    },
                    "last_changed": "2023-11-27T11:37:20.872071+00:00",
                    "last_updated": "2023-11-27T11:37:20.872071+00:00",
                    "context": {
                      "id": "01HG893M7866FWJM3DSC5K7ZG0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "vacuum.local_cleaner_robot",
                    "from_state": {
                      "entity_id": "vacuum.local_cleaner_robot",
                      "state": "cleaning",
                      "attributes": {
                        "fan_speed_list": [
                          "Low",
                          "Medium",
                          "High"
                        ],
                        "fan_speed": "High",
                        "power": true,
                        "error": 0,
                        "activate": true,
                        "direction_control": "foward",
                        "command": "single_room",
                        "status": "cleaning",
                        "friendly_name": "Local Cleaner Robot",
                        "supported_features": 14263
                      },
                      "last_changed": "2023-11-27T16:33:59.883129+00:00",
                      "last_updated": "2023-11-27T16:34:00.107605+00:00",
                      "context": {
                        "id": "01HG8T2T9BVRZWVETZHFX4408E",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "vacuum.local_cleaner_robot",
                      "state": "cleaning",
                      "attributes": {
                        "fan_speed_list": [
                          "Low",
                          "Medium",
                          "High"
                        ],
                        "fan_speed": "High",
                        "power": true,
                        "error": 0,
                        "activate": true,
                        "direction_control": "foward",
                        "command": "single_room",
                        "status": "workcompleted",
                        "friendly_name": "Local Cleaner Robot",
                        "supported_features": 14263
                      },
                      "last_changed": "2023-11-27T16:33:59.883129+00:00",
                      "last_updated": "2023-11-27T16:40:34.468918+00:00",
                      "context": {
                        "id": "01HG8TEVD4MNT4ZF410X3ATYJ4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "status",
                    "description": "state of vacuum.local_cleaner_robot"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T16:40:34.470094+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG8TEVD5PT0G3Y3HZ6SY85HA",
                    "parent_id": "01HG8TEVD4MNT4ZF410X3ATYJ4",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "title": "Vacuum cleaner",
                      "message": "Job completed"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684185616423",
            "alias": "VACUUM - Work is done",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "vacuum.local_cleaner_robot"
                ],
                "attribute": "status",
                "to": "workcompleted"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "notify.notify",
                "data": {
                  "title": "Vacuum cleaner",
                  "message": "Job completed"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG8TEVD5PT0G3Y3HZ6SY85HA",
            "parent_id": "01HG8TEVD4MNT4ZF410X3ATYJ4",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "90aa9884b95150e0683a027dadfc2cb5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T16:40:34.469723+00:00",
            "finish": "2023-11-27T16:40:35.516619+00:00"
          },
          "domain": "automation",
          "item_id": "1684185616423",
          "trigger": "state of vacuum.local_cleaner_robot"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "57b41a759fa7b2ffb2bd725fb5b32786",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T17:35:56.008655+00:00",
            "finish": "2023-11-28T17:35:57.138103+00:00"
          },
          "domain": "automation",
          "item_id": "1684185616423",
          "trigger": "state of vacuum.local_cleaner_robot",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T17:35:56.008696+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.vacuum_work_is_done",
                    "state": "on",
                    "attributes": {
                      "id": "1684185616423",
                      "last_triggered": "2023-11-27T16:40:34.469863+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "VACUUM - Work is done"
                    },
                    "last_changed": "2023-11-28T15:21:57.304935+00:00",
                    "last_updated": "2023-11-28T15:21:57.304935+00:00",
                    "context": {
                      "id": "01HGB8BKSRPKGJF0A8PQ5M4MBR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "vacuum.local_cleaner_robot",
                    "from_state": {
                      "entity_id": "vacuum.local_cleaner_robot",
                      "state": "cleaning",
                      "attributes": {
                        "fan_speed_list": [
                          "Low",
                          "Medium",
                          "High"
                        ],
                        "fan_speed": "High",
                        "power": true,
                        "error": 0,
                        "activate": true,
                        "direction_control": "foward",
                        "command": "single_room",
                        "status": "cleaning",
                        "friendly_name": "Local Cleaner Robot",
                        "supported_features": 14263
                      },
                      "last_changed": "2023-11-28T17:28:42.181531+00:00",
                      "last_updated": "2023-11-28T17:28:42.295385+00:00",
                      "context": {
                        "id": "01HGBFKPHQAAEGC8M85W3T6K8R",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "vacuum.local_cleaner_robot",
                      "state": "cleaning",
                      "attributes": {
                        "fan_speed_list": [
                          "Low",
                          "Medium",
                          "High"
                        ],
                        "fan_speed": "High",
                        "power": true,
                        "error": 0,
                        "activate": true,
                        "direction_control": "foward",
                        "command": "single_room",
                        "status": "workcompleted",
                        "friendly_name": "Local Cleaner Robot",
                        "supported_features": 14263
                      },
                      "last_changed": "2023-11-28T17:28:42.181531+00:00",
                      "last_updated": "2023-11-28T17:35:56.007799+00:00",
                      "context": {
                        "id": "01HGBG0Y37SGTC9361B67HRDPS",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "status",
                    "description": "state of vacuum.local_cleaner_robot"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T17:35:56.009057+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBG0Y38SF8AX02Q2J1ZAXV6",
                    "parent_id": "01HGBG0Y37SGTC9361B67HRDPS",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "title": "Vacuum cleaner",
                      "message": "Job completed"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684185616423",
            "alias": "VACUUM - Work is done",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "vacuum.local_cleaner_robot"
                ],
                "attribute": "status",
                "to": "workcompleted"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "notify.notify",
                "data": {
                  "title": "Vacuum cleaner",
                  "message": "Job completed"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBG0Y38SF8AX02Q2J1ZAXV6",
            "parent_id": "01HGBG0Y37SGTC9361B67HRDPS",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "57b41a759fa7b2ffb2bd725fb5b32786",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T17:35:56.008655+00:00",
            "finish": "2023-11-28T17:35:57.138103+00:00"
          },
          "domain": "automation",
          "item_id": "1684185616423",
          "trigger": "state of vacuum.local_cleaner_robot"
        }
      }
    ],
    "automation.1674779503847": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "feefce2c4da9bb8b27cb63b07e225477",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:12:31.021694+00:00",
            "finish": "2023-11-27T21:12:31.036929+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T21:12:31.021721+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_off_office",
                    "state": "on",
                    "attributes": {
                      "id": "1674779503847",
                      "last_triggered": "2023-11-25T22:46:17.326539+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn off Office"
                    },
                    "last_changed": "2023-11-27T11:37:20.869933+00:00",
                    "last_updated": "2023-11-27T11:37:20.869933+00:00",
                    "context": {
                      "id": "01HG893M75Y9WBSP4BDVEF8C3T",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "group.computers",
                    "from_state": {
                      "entity_id": "group.computers",
                      "state": "on",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-27T11:37:47.013821+00:00",
                      "last_updated": "2023-11-27T11:37:47.013821+00:00",
                      "context": {
                        "id": "01HG894DR5EARV3Z625KMDZ8BR",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "group.computers",
                      "state": "off",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-27T21:12:01.019490+00:00",
                      "last_updated": "2023-11-27T21:12:01.019490+00:00",
                      "context": {
                        "id": "01HG99ZW7VFYBDCCKA2H9WGECB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 30.0
                    },
                    "attribute": null,
                    "description": "state of group.computers"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T21:12:31.021937+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9A0SHDVC5MWPT0GH63MX1X",
                    "parent_id": "01HG99ZW7VFYBDCCKA2H9WGECB",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "transition": 5,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674779503847",
            "alias": "LIGHT - Turn off Office",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "group.computers"
                ],
                "from": "on",
                "to": "off",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9A0SHDVC5MWPT0GH63MX1X",
            "parent_id": "01HG99ZW7VFYBDCCKA2H9WGECB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "feefce2c4da9bb8b27cb63b07e225477",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:12:31.021694+00:00",
            "finish": "2023-11-27T21:12:31.036929+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "5c3459b2392ff627c7283e5a11fb3d44",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:59:31.232938+00:00",
            "finish": "2023-11-27T22:59:31.247646+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T22:59:31.232977+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_off_office",
                    "state": "on",
                    "attributes": {
                      "id": "1674779503847",
                      "last_triggered": "2023-11-27T21:12:31.021782+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn off Office"
                    },
                    "last_changed": "2023-11-27T11:37:20.869933+00:00",
                    "last_updated": "2023-11-27T21:12:31.036845+00:00",
                    "context": {
                      "id": "01HG9A0SHDVC5MWPT0GH63MX1X",
                      "parent_id": "01HG99ZW7VFYBDCCKA2H9WGECB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "group.computers",
                    "from_state": {
                      "entity_id": "group.computers",
                      "state": "on",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-27T22:09:56.099480+00:00",
                      "last_updated": "2023-11-27T22:09:56.099480+00:00",
                      "context": {
                        "id": "01HG9D9XW3GHPFQR4RTJGRGQ1N",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "group.computers",
                      "state": "off",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-27T22:59:01.231386+00:00",
                      "last_updated": "2023-11-27T22:59:01.231386+00:00",
                      "context": {
                        "id": "01HG9G3SZECZBNRQ737T6YJP3Q",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 30.0
                    },
                    "attribute": null,
                    "description": "state of group.computers"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:59:31.233308+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9G4Q90A9R1N5V97FFAFVD1",
                    "parent_id": "01HG9G3SZECZBNRQ737T6YJP3Q",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "transition": 5,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674779503847",
            "alias": "LIGHT - Turn off Office",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "group.computers"
                ],
                "from": "on",
                "to": "off",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9G4Q90A9R1N5V97FFAFVD1",
            "parent_id": "01HG9G3SZECZBNRQ737T6YJP3Q",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "5c3459b2392ff627c7283e5a11fb3d44",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:59:31.232938+00:00",
            "finish": "2023-11-27T22:59:31.247646+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "f4f0683fc52098b439f2b7f7853cb0f0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T21:41:06.989868+00:00",
            "finish": "2023-11-28T21:41:07.006922+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T21:41:06.989911+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_off_office",
                    "state": "on",
                    "attributes": {
                      "id": "1674779503847",
                      "last_triggered": "2023-11-27T22:59:31.233083+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn off Office"
                    },
                    "last_changed": "2023-11-28T15:21:57.303441+00:00",
                    "last_updated": "2023-11-28T15:21:57.303441+00:00",
                    "context": {
                      "id": "01HGB8BKSQ8CRR0XB4RH0MYC32",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "group.computers",
                    "from_state": {
                      "entity_id": "group.computers",
                      "state": "on",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-28T15:22:23.598822+00:00",
                      "last_updated": "2023-11-28T15:22:23.598822+00:00",
                      "context": {
                        "id": "01HGB8CDFEJFFJ6V88WFP59Z4C",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "group.computers",
                      "state": "off",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-28T21:40:36.988770+00:00",
                      "last_updated": "2023-11-28T21:40:36.988770+00:00",
                      "context": {
                        "id": "01HGBY0YZVZDTVSCT315FDSDFQ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 30.0
                    },
                    "attribute": null,
                    "description": "state of group.computers"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T21:41:06.991289+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBY1W9DG73K7DA6GHPGXT3N",
                    "parent_id": "01HGBY0YZVZDTVSCT315FDSDFQ",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "transition": 5,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674779503847",
            "alias": "LIGHT - Turn off Office",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "group.computers"
                ],
                "from": "on",
                "to": "off",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBY1W9DG73K7DA6GHPGXT3N",
            "parent_id": "01HGBY0YZVZDTVSCT315FDSDFQ",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "f4f0683fc52098b439f2b7f7853cb0f0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T21:41:06.989868+00:00",
            "finish": "2023-11-28T21:41:07.006922+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "5670187a9b5e53eb47e98d8af29903d9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:39:18.120223+00:00",
            "finish": "2023-11-28T22:39:18.135905+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T22:39:18.120264+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_off_office",
                    "state": "on",
                    "attributes": {
                      "id": "1674779503847",
                      "last_triggered": "2023-11-28T21:41:06.990026+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn off Office"
                    },
                    "last_changed": "2023-11-28T22:08:09.363471+00:00",
                    "last_updated": "2023-11-28T22:08:09.363471+00:00",
                    "context": {
                      "id": "01HGBZKCMK8CRR0XB4RH0MYC32",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "group.computers",
                    "from_state": {
                      "entity_id": "group.computers",
                      "state": "on",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-28T22:08:37.400846+00:00",
                      "last_updated": "2023-11-28T22:08:37.400846+00:00",
                      "context": {
                        "id": "01HGBZM80RC6Q7CHEAKDG8BJJW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "group.computers",
                      "state": "off",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-28T22:38:48.119028+00:00",
                      "last_updated": "2023-11-28T22:38:48.119028+00:00",
                      "context": {
                        "id": "01HGC1BG9PVD393K37MXDVNBRZ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 30.0
                    },
                    "attribute": null,
                    "description": "state of group.computers"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T22:39:18.120664+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGC1CDK8NJJ45NXJWGRXMWF0",
                    "parent_id": "01HGC1BG9PVD393K37MXDVNBRZ",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "transition": 5,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674779503847",
            "alias": "LIGHT - Turn off Office",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "group.computers"
                ],
                "from": "on",
                "to": "off",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGC1CDK8NJJ45NXJWGRXMWF0",
            "parent_id": "01HGC1BG9PVD393K37MXDVNBRZ",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "5670187a9b5e53eb47e98d8af29903d9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:39:18.120223+00:00",
            "finish": "2023-11-28T22:39:18.135905+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers"
        }
      }
    ],
    "automation.1684087993536": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "4af7e8ceaf88c31e83972098e6ff35ef",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T17:02:37.603439+00:00",
            "finish": "2023-11-28T17:02:43.480131+00:00"
          },
          "domain": "automation",
          "item_id": "1684087993536",
          "trigger": "state of vacuum.local_cleaner_robot",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T17:02:37.603486+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.vacuum_notify_error",
                    "state": "on",
                    "attributes": {
                      "id": "1684087993536",
                      "last_triggered": "2023-11-23T17:44:22.167041+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "VACUUM - Notify error"
                    },
                    "last_changed": "2023-11-28T15:21:57.304743+00:00",
                    "last_updated": "2023-11-28T15:21:57.304743+00:00",
                    "context": {
                      "id": "01HGB8BKSRYD0G50GBYZWXG6YM",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "vacuum.local_cleaner_robot",
                    "from_state": {
                      "entity_id": "vacuum.local_cleaner_robot",
                      "state": "cleaning",
                      "attributes": {
                        "fan_speed_list": [
                          "Low",
                          "Medium",
                          "High"
                        ],
                        "fan_speed": "High",
                        "power": true,
                        "error": 0,
                        "activate": true,
                        "direction_control": "foward",
                        "command": "return_to_base",
                        "status": "docking",
                        "friendly_name": "Local Cleaner Robot",
                        "supported_features": 14263
                      },
                      "last_changed": "2023-11-28T16:42:06.639218+00:00",
                      "last_updated": "2023-11-28T16:42:06.979179+00:00",
                      "context": {
                        "id": "01HGBCYCR3PR94AQHRD605TENA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "vacuum.local_cleaner_robot",
                      "state": "error",
                      "attributes": {
                        "fan_speed_list": [
                          "Low",
                          "Medium",
                          "High"
                        ],
                        "fan_speed": "High",
                        "power": true,
                        "error": "left_wheel",
                        "activate": true,
                        "direction_control": "foward",
                        "command": "return_to_base",
                        "status": "docking",
                        "friendly_name": "Local Cleaner Robot",
                        "supported_features": 14263
                      },
                      "last_changed": "2023-11-28T17:01:37.601890+00:00",
                      "last_updated": "2023-11-28T17:01:37.601890+00:00",
                      "context": {
                        "id": "01HGBE23Y1392TBB9RNGDY3N0G",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "attribute": null,
                    "description": "state of vacuum.local_cleaner_robot"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T17:02:37.603874+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGBE3YH3NCM5PPBDPG8JGPKA",
                    "parent_id": "01HGBE23Y1392TBB9RNGDY3N0G",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "title": "Home assistant",
                      "message": "Vacuum cleaner stuck"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684087993536",
            "alias": "VACUUM - Notify error",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "vacuum.local_cleaner_robot"
                ],
                "to": "error",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "notify.notify",
                "data": {
                  "title": "Home assistant",
                  "message": "Vacuum cleaner stuck"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBE3YH3NCM5PPBDPG8JGPKA",
            "parent_id": "01HGBE23Y1392TBB9RNGDY3N0G",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "4af7e8ceaf88c31e83972098e6ff35ef",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T17:02:37.603439+00:00",
            "finish": "2023-11-28T17:02:43.480131+00:00"
          },
          "domain": "automation",
          "item_id": "1684087993536",
          "trigger": "state of vacuum.local_cleaner_robot"
        }
      }
    ],
    "script.turn_on_off_christian_pc": [
      {
        "extended_dict": {
          "last_step": "sequence/0/else/0",
          "run_id": "89b608c2ebd11a850ffd0b7a93d9575a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:04:58.495712+00:00",
            "finish": "2023-11-28T22:04:58.499427+00:00"
          },
          "domain": "script",
          "item_id": "turn_on_off_christian_pc",
          "trace": {
            "sequence/0": [
              {
                "path": "sequence/0",
                "timestamp": "2023-11-28T22:04:58.496766+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "script.turn_on_off_christian_pc",
                    "state": "off",
                    "attributes": {
                      "last_triggered": "2023-11-25T20:46:59.085816+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Turn on/off Christian-PC"
                    },
                    "last_changed": "2023-11-28T15:21:56.269811+00:00",
                    "last_updated": "2023-11-28T15:21:56.269811+00:00",
                    "context": {
                      "id": "01HGB8BJSDS4AW261JTV5WE21A",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "context": {
                    "id": "01HGBZDJ7Y06AVE98YV089V2SD",
                    "parent_id": "01HGBZDJ7XZ2QX1VN3VDYND955",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "sequence/0/if": [
              {
                "path": "sequence/0/if",
                "timestamp": "2023-11-28T22:04:58.496863+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "sequence/0/if/condition/0": [
              {
                "path": "sequence/0/if/condition/0",
                "timestamp": "2023-11-28T22:04:58.496879+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "sequence/0/if/condition/0/entity_id/0": [
              {
                "path": "sequence/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-28T22:04:58.496892+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "sequence/0/else/0": [
              {
                "path": "sequence/0/else/0",
                "timestamp": "2023-11-28T22:04:58.497194+00:00",
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.christian_pc_wol"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "alias": "Turn on/off Christian-PC",
            "sequence": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  }
                ],
                "then": [
                  {
                    "service": "shell_command.christian_pc_shutdown",
                    "data": {}
                  }
                ],
                "else": [
                  {
                    "service": "switch.turn_on",
                    "data": {},
                    "target": {
                      "entity_id": "switch.christian_pc_wol"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGBZDJ7Y06AVE98YV089V2SD",
            "parent_id": "01HGBZDJ7XZ2QX1VN3VDYND955",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "sequence/0/else/0",
          "run_id": "89b608c2ebd11a850ffd0b7a93d9575a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T22:04:58.495712+00:00",
            "finish": "2023-11-28T22:04:58.499427+00:00"
          },
          "domain": "script",
          "item_id": "turn_on_off_christian_pc"
        }
      }
    ]
  }
}