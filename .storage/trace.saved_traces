{
  "version": 1,
  "minor_version": 1,
  "key": "trace.saved_traces",
  "data": {
    "automation.1688854997782": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "374b86d4eefcf80eccda687cb730086c",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:00:00.410886+00:00",
            "finish": "2023-11-28T03:00:00.413739+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time",
          "trace": {
            "trigger/11": [
              {
                "path": "trigger/11",
                "timestamp": "2023-11-28T03:00:00.412111+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-21T01:16:14.396605+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-27T11:37:20.872910+00:00",
                    "last_updated": "2023-11-27T11:37:20.872910+00:00",
                    "context": {
                      "id": "01HG893M788HEAGBPMFQG40G2R",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t11",
                    "idx": "11",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T00:00:00.410727-03:00",
                    "description": "time",
                    "entity_id": null
                  },
                  "motion_trigger": [
                    "binary_sensor.ewelink_ms01_iaszone"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T03:00:00.412134+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412154+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412183+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T03:00:00.412202+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T03:00:00.412238+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412254+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T03:00:00.412276+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-28T03:00:00.412309+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0": [
              {
                "path": "condition/0/conditions/2/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412324+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/2/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T03:00:00.412340+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2023-11-28T03:00:00.412369+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0": [
              {
                "path": "condition/0/conditions/3/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412385+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/3/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T03:00:00.412404+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/4": [
              {
                "path": "condition/0/conditions/4",
                "timestamp": "2023-11-28T03:00:00.412433+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/4/conditions/0": [
              {
                "path": "condition/0/conditions/4/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412448+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5": [
              {
                "path": "condition/0/conditions/5",
                "timestamp": "2023-11-28T03:00:00.412543+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412571+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412596+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5/conditions/1": [
              {
                "path": "condition/0/conditions/5/conditions/1",
                "timestamp": "2023-11-28T03:00:00.412699+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/1/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412726+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/6": [
              {
                "path": "condition/0/conditions/6",
                "timestamp": "2023-11-28T03:00:00.412796+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/6/conditions/0": [
              {
                "path": "condition/0/conditions/6/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412813+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7": [
              {
                "path": "condition/0/conditions/7",
                "timestamp": "2023-11-28T03:00:00.412836+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7/conditions/0": [
              {
                "path": "condition/0/conditions/7/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412851+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8": [
              {
                "path": "condition/0/conditions/8",
                "timestamp": "2023-11-28T03:00:00.412873+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0": [
              {
                "path": "condition/0/conditions/8/conditions/0",
                "timestamp": "2023-11-28T03:00:00.412888+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/8/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T03:00:00.412904+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/9": [
              {
                "path": "condition/0/conditions/9",
                "timestamp": "2023-11-28T03:00:00.412977+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0": [
              {
                "path": "condition/0/conditions/9/conditions/0",
                "timestamp": "2023-11-28T03:00:00.413011+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/9/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T03:00:00.413053+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/10": [
              {
                "path": "condition/0/conditions/10",
                "timestamp": "2023-11-28T03:00:00.413122+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0": [
              {
                "path": "condition/0/conditions/10/conditions/0",
                "timestamp": "2023-11-28T03:00:00.413153+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/10/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T03:00:00.413193+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/11": [
              {
                "path": "condition/0/conditions/11",
                "timestamp": "2023-11-28T03:00:00.413247+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/11/conditions/0": [
              {
                "path": "condition/0/conditions/11/conditions/0",
                "timestamp": "2023-11-28T03:00:00.413274+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12": [
              {
                "path": "condition/0/conditions/12",
                "timestamp": "2023-11-28T03:00:00.413380+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0",
                "timestamp": "2023-11-28T03:00:00.413397+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0/conditions/0",
                "timestamp": "2023-11-28T03:00:00.413412+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12/conditions/1": [
              {
                "path": "condition/0/conditions/12/conditions/1",
                "timestamp": "2023-11-28T03:00:00.413474+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/1/conditions/0",
                "timestamp": "2023-11-28T03:00:00.413491+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/13": [
              {
                "path": "condition/0/conditions/13",
                "timestamp": "2023-11-28T03:00:00.413552+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/13/conditions/0": [
              {
                "path": "condition/0/conditions/13/conditions/0",
                "timestamp": "2023-11-28T03:00:00.413568+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "light.bedroom_light"
                  ]
                }
              }
            ],
            "condition/0/conditions/14": [
              {
                "path": "condition/0/conditions/14",
                "timestamp": "2023-11-28T03:00:00.413673+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0": [
              {
                "path": "condition/0/conditions/14/conditions/0",
                "timestamp": "2023-11-28T03:00:00.413690+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/14/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T03:00:00.413707+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.ewelink_ms01_iaszone"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.ewelink_ms01_iaszone"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.ewelink_ms01_iaszone"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.ewelink_ms01_iaszone"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.ewelink_ms01_iaszone"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.ewelink_ms01_iaszone"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.ewelink_ms01_iaszone"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.ewelink_ms01_iaszone"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HG9XX28T8CE0829Z13W0E5DC",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "374b86d4eefcf80eccda687cb730086c",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:00:00.410886+00:00",
            "finish": "2023-11-28T03:00:00.413739+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "e1f76aa7001b83b0bc87ed05c32e0fdd",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T04:00:00.124965+00:00",
            "finish": "2023-11-28T04:00:00.127284+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time",
          "trace": {
            "trigger/10": [
              {
                "path": "trigger/10",
                "timestamp": "2023-11-28T04:00:00.126056+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-21T01:16:14.396605+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-27T11:37:20.872910+00:00",
                    "last_updated": "2023-11-27T11:37:20.872910+00:00",
                    "context": {
                      "id": "01HG893M788HEAGBPMFQG40G2R",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t10",
                    "idx": "10",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T01:00:00.124832-03:00",
                    "description": "time",
                    "entity_id": null
                  },
                  "motion_trigger": [
                    "binary_sensor.ewelink_ms01_iaszone"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T04:00:00.126078+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126097+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126113+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T04:00:00.126130+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T04:00:00.126166+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126183+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T04:00:00.126199+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-28T04:00:00.126230+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0": [
              {
                "path": "condition/0/conditions/2/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126245+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/2/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T04:00:00.126261+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2023-11-28T04:00:00.126291+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0": [
              {
                "path": "condition/0/conditions/3/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126306+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/3/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T04:00:00.126322+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/4": [
              {
                "path": "condition/0/conditions/4",
                "timestamp": "2023-11-28T04:00:00.126351+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/4/conditions/0": [
              {
                "path": "condition/0/conditions/4/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126367+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5": [
              {
                "path": "condition/0/conditions/5",
                "timestamp": "2023-11-28T04:00:00.126438+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126455+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126469+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5/conditions/1": [
              {
                "path": "condition/0/conditions/5/conditions/1",
                "timestamp": "2023-11-28T04:00:00.126529+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/1/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126545+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/6": [
              {
                "path": "condition/0/conditions/6",
                "timestamp": "2023-11-28T04:00:00.126608+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/6/conditions/0": [
              {
                "path": "condition/0/conditions/6/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126625+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7": [
              {
                "path": "condition/0/conditions/7",
                "timestamp": "2023-11-28T04:00:00.126648+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7/conditions/0": [
              {
                "path": "condition/0/conditions/7/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126662+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8": [
              {
                "path": "condition/0/conditions/8",
                "timestamp": "2023-11-28T04:00:00.126685+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0": [
              {
                "path": "condition/0/conditions/8/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126700+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/8/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T04:00:00.126716+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/9": [
              {
                "path": "condition/0/conditions/9",
                "timestamp": "2023-11-28T04:00:00.126745+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0": [
              {
                "path": "condition/0/conditions/9/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126760+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/9/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T04:00:00.126775+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/10": [
              {
                "path": "condition/0/conditions/10",
                "timestamp": "2023-11-28T04:00:00.126804+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0": [
              {
                "path": "condition/0/conditions/10/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126820+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/10/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T04:00:00.126835+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/11": [
              {
                "path": "condition/0/conditions/11",
                "timestamp": "2023-11-28T04:00:00.126864+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/11/conditions/0": [
              {
                "path": "condition/0/conditions/11/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126879+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12": [
              {
                "path": "condition/0/conditions/12",
                "timestamp": "2023-11-28T04:00:00.126939+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126955+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0/conditions/0",
                "timestamp": "2023-11-28T04:00:00.126969+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12/conditions/1": [
              {
                "path": "condition/0/conditions/12/conditions/1",
                "timestamp": "2023-11-28T04:00:00.127027+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/1/conditions/0",
                "timestamp": "2023-11-28T04:00:00.127044+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/13": [
              {
                "path": "condition/0/conditions/13",
                "timestamp": "2023-11-28T04:00:00.127106+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/13/conditions/0": [
              {
                "path": "condition/0/conditions/13/conditions/0",
                "timestamp": "2023-11-28T04:00:00.127122+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "light.bedroom_light"
                  ]
                }
              }
            ],
            "condition/0/conditions/14": [
              {
                "path": "condition/0/conditions/14",
                "timestamp": "2023-11-28T04:00:00.127219+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0": [
              {
                "path": "condition/0/conditions/14/conditions/0",
                "timestamp": "2023-11-28T04:00:00.127236+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/14/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T04:00:00.127253+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.ewelink_ms01_iaszone"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.ewelink_ms01_iaszone"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.ewelink_ms01_iaszone"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.ewelink_ms01_iaszone"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.ewelink_ms01_iaszone"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.ewelink_ms01_iaszone"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.ewelink_ms01_iaszone"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.ewelink_ms01_iaszone"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGA1AXKW4R9A5TSSA5RZKJCZ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "e1f76aa7001b83b0bc87ed05c32e0fdd",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T04:00:00.124965+00:00",
            "finish": "2023-11-28T04:00:00.127284+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "52418012b8c6f8c9c279dcdc65233005",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:02:22.151106+00:00",
            "finish": "2023-11-28T11:02:22.154285+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/13": [
              {
                "path": "trigger/13",
                "timestamp": "2023-11-28T11:02:22.152801+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-21T01:16:14.396605+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-28T11:01:51.128147+00:00",
                    "last_updated": "2023-11-28T11:01:51.128147+00:00",
                    "context": {
                      "id": "01HGASFBCR8G2VTW61TFX1KE5P",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t13",
                    "idx": "13",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  },
                  "motion_trigger": [
                    "binary_sensor.ewelink_ms01_iaszone"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:02:22.152838+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T11:02:22.152862+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-28T11:02:22.152883+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T11:02:22.152904+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T11:02:22.152950+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-28T11:02:22.152969+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T11:02:22.152989+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-28T11:02:22.153026+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0": [
              {
                "path": "condition/0/conditions/2/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153044+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/2/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T11:02:22.153061+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2023-11-28T11:02:22.153111+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0": [
              {
                "path": "condition/0/conditions/3/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153129+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/3/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T11:02:22.153147+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/4": [
              {
                "path": "condition/0/conditions/4",
                "timestamp": "2023-11-28T11:02:22.153184+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/4/conditions/0": [
              {
                "path": "condition/0/conditions/4/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153200+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5": [
              {
                "path": "condition/0/conditions/5",
                "timestamp": "2023-11-28T11:02:22.153291+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153308+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153323+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5/conditions/1": [
              {
                "path": "condition/0/conditions/5/conditions/1",
                "timestamp": "2023-11-28T11:02:22.153408+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/1/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153426+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/6": [
              {
                "path": "condition/0/conditions/6",
                "timestamp": "2023-11-28T11:02:22.153504+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/6/conditions/0": [
              {
                "path": "condition/0/conditions/6/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153523+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7": [
              {
                "path": "condition/0/conditions/7",
                "timestamp": "2023-11-28T11:02:22.153547+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7/conditions/0": [
              {
                "path": "condition/0/conditions/7/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153563+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8": [
              {
                "path": "condition/0/conditions/8",
                "timestamp": "2023-11-28T11:02:22.153586+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0": [
              {
                "path": "condition/0/conditions/8/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153600+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/8/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T11:02:22.153617+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/9": [
              {
                "path": "condition/0/conditions/9",
                "timestamp": "2023-11-28T11:02:22.153650+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0": [
              {
                "path": "condition/0/conditions/9/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153666+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/9/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T11:02:22.153681+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/10": [
              {
                "path": "condition/0/conditions/10",
                "timestamp": "2023-11-28T11:02:22.153710+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0": [
              {
                "path": "condition/0/conditions/10/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153725+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/10/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T11:02:22.153744+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/11": [
              {
                "path": "condition/0/conditions/11",
                "timestamp": "2023-11-28T11:02:22.153777+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/11/conditions/0": [
              {
                "path": "condition/0/conditions/11/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153793+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12": [
              {
                "path": "condition/0/conditions/12",
                "timestamp": "2023-11-28T11:02:22.153875+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153892+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0/conditions/0",
                "timestamp": "2023-11-28T11:02:22.153909+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12/conditions/1": [
              {
                "path": "condition/0/conditions/12/conditions/1",
                "timestamp": "2023-11-28T11:02:22.153985+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/1/conditions/0",
                "timestamp": "2023-11-28T11:02:22.154002+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/13": [
              {
                "path": "condition/0/conditions/13",
                "timestamp": "2023-11-28T11:02:22.154084+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/13/conditions/0": [
              {
                "path": "condition/0/conditions/13/conditions/0",
                "timestamp": "2023-11-28T11:02:22.154101+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "light.bedroom_light"
                  ]
                }
              }
            ],
            "condition/0/conditions/14": [
              {
                "path": "condition/0/conditions/14",
                "timestamp": "2023-11-28T11:02:22.154216+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0": [
              {
                "path": "condition/0/conditions/14/conditions/0",
                "timestamp": "2023-11-28T11:02:22.154233+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/14/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T11:02:22.154250+00:00",
                "result": {
                  "result": false,
                  "state": "unavailable",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.ewelink_ms01_iaszone"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.ewelink_ms01_iaszone"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.ewelink_ms01_iaszone"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.ewelink_ms01_iaszone"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.ewelink_ms01_iaszone"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.ewelink_ms01_iaszone"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.ewelink_ms01_iaszone"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.ewelink_ms01_iaszone"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.ewelink_ms01_iaszone"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.ewelink_ms01_iaszone"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGASG9P7NPR0BM9DYY9T2KJE",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "52418012b8c6f8c9c279dcdc65233005",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:02:22.151106+00:00",
            "finish": "2023-11-28T11:02:22.154285+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "1082c072d7a25640968479bccb4d17aa",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:13:57.090600+00:00",
            "finish": "2023-11-28T15:13:57.096693+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/13": [
              {
                "path": "trigger/13",
                "timestamp": "2023-11-28T15:13:57.093945+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-21T01:16:14.396605+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-28T15:13:32.638062+00:00",
                    "last_updated": "2023-11-28T15:13:32.638062+00:00",
                    "context": {
                      "id": "01HGB7W6YYRSGA3TN666RR4BWJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t13",
                    "idx": "13",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  },
                  "motion_trigger": [
                    "binary_sensor.zigbee_motion_sensor_motion"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T15:13:57.094008+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T15:13:57.094056+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-28T15:13:57.094110+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:13:57.094157+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T15:13:57.094255+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-28T15:13:57.094298+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:13:57.094340+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-28T15:13:57.094419+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0": [
              {
                "path": "condition/0/conditions/2/conditions/0",
                "timestamp": "2023-11-28T15:13:57.094456+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/2/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:13:57.094495+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2023-11-28T15:13:57.094603+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0": [
              {
                "path": "condition/0/conditions/3/conditions/0",
                "timestamp": "2023-11-28T15:13:57.094636+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/3/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:13:57.094668+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/4": [
              {
                "path": "condition/0/conditions/4",
                "timestamp": "2023-11-28T15:13:57.094767+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/4/conditions/0": [
              {
                "path": "condition/0/conditions/4/conditions/0",
                "timestamp": "2023-11-28T15:13:57.094803+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5": [
              {
                "path": "condition/0/conditions/5",
                "timestamp": "2023-11-28T15:13:57.094988+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0",
                "timestamp": "2023-11-28T15:13:57.095026+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0/conditions/0",
                "timestamp": "2023-11-28T15:13:57.095058+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5/conditions/1": [
              {
                "path": "condition/0/conditions/5/conditions/1",
                "timestamp": "2023-11-28T15:13:57.095770+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/1/conditions/0",
                "timestamp": "2023-11-28T15:13:57.095794+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/6": [
              {
                "path": "condition/0/conditions/6",
                "timestamp": "2023-11-28T15:13:57.095889+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/6/conditions/0": [
              {
                "path": "condition/0/conditions/6/conditions/0",
                "timestamp": "2023-11-28T15:13:57.095909+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7": [
              {
                "path": "condition/0/conditions/7",
                "timestamp": "2023-11-28T15:13:57.095939+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7/conditions/0": [
              {
                "path": "condition/0/conditions/7/conditions/0",
                "timestamp": "2023-11-28T15:13:57.095955+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8": [
              {
                "path": "condition/0/conditions/8",
                "timestamp": "2023-11-28T15:13:57.095979+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0": [
              {
                "path": "condition/0/conditions/8/conditions/0",
                "timestamp": "2023-11-28T15:13:57.095994+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/8/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:13:57.096011+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/9": [
              {
                "path": "condition/0/conditions/9",
                "timestamp": "2023-11-28T15:13:57.096045+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0": [
              {
                "path": "condition/0/conditions/9/conditions/0",
                "timestamp": "2023-11-28T15:13:57.096060+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/9/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:13:57.096077+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/10": [
              {
                "path": "condition/0/conditions/10",
                "timestamp": "2023-11-28T15:13:57.096107+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0": [
              {
                "path": "condition/0/conditions/10/conditions/0",
                "timestamp": "2023-11-28T15:13:57.096122+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/10/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:13:57.096138+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/11": [
              {
                "path": "condition/0/conditions/11",
                "timestamp": "2023-11-28T15:13:57.096167+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/11/conditions/0": [
              {
                "path": "condition/0/conditions/11/conditions/0",
                "timestamp": "2023-11-28T15:13:57.096183+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12": [
              {
                "path": "condition/0/conditions/12",
                "timestamp": "2023-11-28T15:13:57.096264+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0",
                "timestamp": "2023-11-28T15:13:57.096281+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0/conditions/0",
                "timestamp": "2023-11-28T15:13:57.096295+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12/conditions/1": [
              {
                "path": "condition/0/conditions/12/conditions/1",
                "timestamp": "2023-11-28T15:13:57.096376+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/1/conditions/0",
                "timestamp": "2023-11-28T15:13:57.096393+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/13": [
              {
                "path": "condition/0/conditions/13",
                "timestamp": "2023-11-28T15:13:57.096471+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/13/conditions/0": [
              {
                "path": "condition/0/conditions/13/conditions/0",
                "timestamp": "2023-11-28T15:13:57.096491+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "light.bedroom_light"
                  ]
                }
              }
            ],
            "condition/0/conditions/14": [
              {
                "path": "condition/0/conditions/14",
                "timestamp": "2023-11-28T15:13:57.096621+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0": [
              {
                "path": "condition/0/conditions/14/conditions/0",
                "timestamp": "2023-11-28T15:13:57.096638+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/14/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:13:57.096657+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.zigbee_motion_sensor_motion"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.zigbee_motion_sensor_motion"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.zigbee_motion_sensor_motion"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.zigbee_motion_sensor_motion"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGB7WYV2ZTQJR54JAY24V72E",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "1082c072d7a25640968479bccb4d17aa",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:13:57.090600+00:00",
            "finish": "2023-11-28T15:13:57.096693+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "d219a9b7750fccfa3673b894ef35cfe8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:18:02.880383+00:00",
            "finish": "2023-11-28T15:18:02.888413+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/13": [
              {
                "path": "trigger/13",
                "timestamp": "2023-11-28T15:18:02.883739+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_bedroom_light",
                    "state": "on",
                    "attributes": {
                      "id": "1688854997782",
                      "last_triggered": "2023-11-21T01:16:14.396605+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on bedroom light"
                    },
                    "last_changed": "2023-11-28T15:17:37.543207+00:00",
                    "last_updated": "2023-11-28T15:17:37.543207+00:00",
                    "context": {
                      "id": "01HGB83P47FCS836DRMGVW5Q7X",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "t13",
                    "idx": "13",
                    "alias": null,
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  },
                  "motion_trigger": [
                    "binary_sensor.zigbee_motion_sensor_motion"
                  ],
                  "light_switch": {
                    "entity_id": "light.bedroom_light"
                  },
                  "end_scenes": [],
                  "time_delay": 1,
                  "include_light_control": [],
                  "light_brightness": 100,
                  "brightness_value": false,
                  "light_colour_temperature": 5000,
                  "temperature_value": [],
                  "light_transition_on": 1,
                  "light_transition_off": 1,
                  "transition_on_value": 0,
                  "transition_off_value": 0,
                  "include_bypass": "bypass_disabled",
                  "motion_bypass": "input_boolean.sleep_time",
                  "bypass_time_delay": 0,
                  "include_bypass_auto_off": "bypass_auto_off_disabled",
                  "bypass_auto_off_delay": 60,
                  "include_sun": "sun_enabled",
                  "sun_elevation": -3.5,
                  "include_ambient": "ambient_disabled",
                  "ambient_light_sensor": [],
                  "ambient_light_options": "ambient_light_option_disabled",
                  "ambient_light_value": 20,
                  "include_time": "time_enabled",
                  "after_time": "08:00:00",
                  "before_time": "01:00:00",
                  "weekday_options": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "sat",
                    "sun"
                  ],
                  "include_device_tracker": "zone_people_enabled",
                  "zone": "zone.home",
                  "people": [
                    "person.cecilia_ueda",
                    "person.christian_silva"
                  ],
                  "include_night_lights": "night_lights_disabled",
                  "night_lights": {},
                  "night_time_delay": 5,
                  "include_night_light_control": [],
                  "night_light_brightness": 20,
                  "night_brightness_value": false,
                  "night_light_colour_temperature": 5000,
                  "night_temperature_value": [],
                  "night_light_transition_on": 1,
                  "night_light_transition_off": 1,
                  "night_transition_on_value": 0,
                  "night_transition_off_value": 0,
                  "night_lights_conditions": [],
                  "night_lights_after_time": "00:00:00",
                  "night_lights_before_time": "00:00:00",
                  "night_lights_sun_elevation": -1.5,
                  "light_entities_off": [
                    "light.bedroom_light"
                  ],
                  "switch_entities_off": [],
                  "light_entities": [
                    "light.bedroom_light"
                  ],
                  "switch_entities": [],
                  "scene_entities": [],
                  "night_light_entities_off": [],
                  "night_switch_entities_off": [],
                  "night_light_entities": [],
                  "night_switch_entities": [],
                  "night_scene_entities": [],
                  "crossover_lights_light": [],
                  "crossover_lights_switch": [],
                  "crossover_night_lights_light": [],
                  "crossover_night_lights_switch": []
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T15:18:02.883802+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T15:18:02.883852+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/0/conditions/0",
                "timestamp": "2023-11-28T15:18:02.883896+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:18:02.883940+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T15:18:02.884040+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-28T15:18:02.884082+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:18:02.884124+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-28T15:18:02.884207+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0": [
              {
                "path": "condition/0/conditions/2/conditions/0",
                "timestamp": "2023-11-28T15:18:02.884244+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/2/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:18:02.884282+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/3": [
              {
                "path": "condition/0/conditions/3",
                "timestamp": "2023-11-28T15:18:02.884354+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0": [
              {
                "path": "condition/0/conditions/3/conditions/0",
                "timestamp": "2023-11-28T15:18:02.884393+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/3/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/3/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:18:02.884429+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/4": [
              {
                "path": "condition/0/conditions/4",
                "timestamp": "2023-11-28T15:18:02.884510+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/4/conditions/0": [
              {
                "path": "condition/0/conditions/4/conditions/0",
                "timestamp": "2023-11-28T15:18:02.884545+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5": [
              {
                "path": "condition/0/conditions/5",
                "timestamp": "2023-11-28T15:18:02.884735+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0",
                "timestamp": "2023-11-28T15:18:02.884773+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/0/conditions/0",
                "timestamp": "2023-11-28T15:18:02.884813+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/5/conditions/1": [
              {
                "path": "condition/0/conditions/5/conditions/1",
                "timestamp": "2023-11-28T15:18:02.886334+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/5/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/5/conditions/1/conditions/0",
                "timestamp": "2023-11-28T15:18:02.886399+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/6": [
              {
                "path": "condition/0/conditions/6",
                "timestamp": "2023-11-28T15:18:02.886620+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/6/conditions/0": [
              {
                "path": "condition/0/conditions/6/conditions/0",
                "timestamp": "2023-11-28T15:18:02.886664+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7": [
              {
                "path": "condition/0/conditions/7",
                "timestamp": "2023-11-28T15:18:02.886720+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/7/conditions/0": [
              {
                "path": "condition/0/conditions/7/conditions/0",
                "timestamp": "2023-11-28T15:18:02.886759+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8": [
              {
                "path": "condition/0/conditions/8",
                "timestamp": "2023-11-28T15:18:02.886814+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0": [
              {
                "path": "condition/0/conditions/8/conditions/0",
                "timestamp": "2023-11-28T15:18:02.886847+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/8/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/8/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:18:02.886887+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/9": [
              {
                "path": "condition/0/conditions/9",
                "timestamp": "2023-11-28T15:18:02.886951+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0": [
              {
                "path": "condition/0/conditions/9/conditions/0",
                "timestamp": "2023-11-28T15:18:02.886993+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/9/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/9/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:18:02.887030+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/10": [
              {
                "path": "condition/0/conditions/10",
                "timestamp": "2023-11-28T15:18:02.887096+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0": [
              {
                "path": "condition/0/conditions/10/conditions/0",
                "timestamp": "2023-11-28T15:18:02.887132+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/10/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/10/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:18:02.887178+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/11": [
              {
                "path": "condition/0/conditions/11",
                "timestamp": "2023-11-28T15:18:02.887267+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/11/conditions/0": [
              {
                "path": "condition/0/conditions/11/conditions/0",
                "timestamp": "2023-11-28T15:18:02.887305+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12": [
              {
                "path": "condition/0/conditions/12",
                "timestamp": "2023-11-28T15:18:02.887497+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0",
                "timestamp": "2023-11-28T15:18:02.887552+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/0/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/0/conditions/0",
                "timestamp": "2023-11-28T15:18:02.887584+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/12/conditions/1": [
              {
                "path": "condition/0/conditions/12/conditions/1",
                "timestamp": "2023-11-28T15:18:02.887755+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/12/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/12/conditions/1/conditions/0",
                "timestamp": "2023-11-28T15:18:02.887793+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "condition/0/conditions/13": [
              {
                "path": "condition/0/conditions/13",
                "timestamp": "2023-11-28T15:18:02.887962+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/13/conditions/0": [
              {
                "path": "condition/0/conditions/13/conditions/0",
                "timestamp": "2023-11-28T15:18:02.887998+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "light.bedroom_light"
                  ]
                }
              }
            ],
            "condition/0/conditions/14": [
              {
                "path": "condition/0/conditions/14",
                "timestamp": "2023-11-28T15:18:02.888263+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0": [
              {
                "path": "condition/0/conditions/14/conditions/0",
                "timestamp": "2023-11-28T15:18:02.888310+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/14/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/14/conditions/0/entity_id/0",
                "timestamp": "2023-11-28T15:18:02.888338+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "variables": {
              "motion_trigger": [
                "binary_sensor.zigbee_motion_sensor_motion"
              ],
              "light_switch": {
                "entity_id": "light.bedroom_light"
              },
              "end_scenes": [],
              "time_delay": 1,
              "include_light_control": [],
              "light_brightness": 100,
              "brightness_value": "{{ iif ('use_brightness' in include_light_control , light_brightness, ) }}",
              "light_colour_temperature": 5000,
              "temperature_value": "{{ iif ('use_colour_temperature' in include_light_control , light_colour_temperature, [] ) }}",
              "light_transition_on": 1,
              "light_transition_off": 1,
              "transition_on_value": "{{ iif ('use_transition' in include_light_control, light_transition_on, 0 ) }}",
              "transition_off_value": "{{ iif ('use_transition' in include_light_control, light_transition_off, 0 ) }}",
              "include_bypass": "bypass_disabled",
              "motion_bypass": "input_boolean.sleep_time",
              "bypass_time_delay": 0,
              "include_bypass_auto_off": "bypass_auto_off_disabled",
              "bypass_auto_off_delay": 60,
              "include_sun": "sun_enabled",
              "sun_elevation": -3.5,
              "include_ambient": "ambient_disabled",
              "ambient_light_sensor": [],
              "ambient_light_options": "ambient_light_option_disabled",
              "ambient_light_value": 20,
              "include_time": "time_enabled",
              "after_time": "08:00:00",
              "before_time": "01:00:00",
              "weekday_options": [
                "mon",
                "tue",
                "wed",
                "thu",
                "fri",
                "sat",
                "sun"
              ],
              "include_device_tracker": "zone_people_enabled",
              "zone": "zone.home",
              "people": [
                "person.cecilia_ueda",
                "person.christian_silva"
              ],
              "include_night_lights": "night_lights_disabled",
              "night_lights": {},
              "night_time_delay": 5,
              "include_night_light_control": [],
              "night_light_brightness": 20,
              "night_brightness_value": "{{ iif ('use_brightness' in include_night_light_control , night_light_brightness, ) }}",
              "night_light_colour_temperature": 5000,
              "night_temperature_value": "{{ iif ('use_colour_temperature' in include_night_light_control , night_light_colour_temperature, [] ) }}",
              "night_light_transition_on": 1,
              "night_light_transition_off": 1,
              "night_transition_on_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_on, 0 ) }}",
              "night_transition_off_value": "{{ iif ('use_transition' in include_night_light_control, night_light_transition_off, 0 ) }}",
              "night_lights_conditions": [],
              "night_lights_after_time": "00:00:00",
              "night_lights_before_time": "00:00:00",
              "night_lights_sun_elevation": -1.5,
              "light_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "switch_entities_off": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}",
              "light_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}",
              "switch_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}",
              "scene_entities": "{{ expand(light_switch.entity_id) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}",
              "night_light_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities_off": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | selectattr('state', 'eq', 'off') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_light_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_switch_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "night_scene_entities": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | selectattr('domain', 'eq', 'scene') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(a) | reject('in', expand(b)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_light": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'light') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}",
              "crossover_night_lights_switch": "{% set a = light_switch.entity_id %} {% set b =  night_lights and night_lights.entity_id %} {% if a and b %}\n  {{ expand(b) | reject('in', expand(a)) | selectattr('domain', 'eq', 'switch') | map(attribute='entity_id') | list }}\n{% else %}\n  []\n{% endif %}"
            },
            "trigger": [
              {
                "platform": "state",
                "id": "t0",
                "entity_id": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "from": "off",
                "to": "on"
              },
              {
                "platform": "numeric_state",
                "id": "t1",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t2",
                "entity_id": [],
                "below": 20
              },
              {
                "platform": "time",
                "id": "t3",
                "at": "08:00:00"
              },
              {
                "platform": "time",
                "id": "t4",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t5",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "below": -1.5
              },
              {
                "platform": "state",
                "id": "t6",
                "entity_id": "input_boolean.sleep_time",
                "from": "off",
                "to": "on"
              },
              {
                "platform": "state",
                "id": "t7",
                "entity_id": "input_boolean.sleep_time",
                "from": "on",
                "to": "off"
              },
              {
                "platform": "numeric_state",
                "id": "t8",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -3.5
              },
              {
                "platform": "numeric_state",
                "id": "t9",
                "entity_id": [],
                "above": 20
              },
              {
                "platform": "time",
                "id": "t10",
                "at": "01:00:00"
              },
              {
                "platform": "time",
                "id": "t11",
                "at": "00:00:00"
              },
              {
                "platform": "numeric_state",
                "id": "t12",
                "entity_id": "sun.sun",
                "attribute": "elevation",
                "above": -1.5
              },
              {
                "platform": "homeassistant",
                "id": "t13",
                "event": "start"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t0"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t1"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t2"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t3"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t4"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t5"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t6"
                      },
                      "{{ (include_bypass == 'bypass_enabled_turn_on') or (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "t7"
                      },
                      "{{ (include_bypass == 'bypass_enabled') or (include_bypass == 'bypass_enabled_stop') or (include_bypass == 'bypass_enabled_turn_on') }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_sun == 'sun_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t8"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_ambient == 'ambient_enabled' }}",
                      "{{ ambient_light_options == 'ambient_light_option_disabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t9"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "state": "on",
                        "match": "any"
                      },
                      "{{ include_time == 'time_enabled' }}",
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ include_night_lights == 'night_lights_enabled' }}",
                      "{{ 'time_enabled' in night_lights_conditions }}",
                      "{% if 'sun_enabled' in night_lights_conditions %} {{state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)}} {%else%} true {%endif%}",
                      "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                      {
                        "condition": "trigger",
                        "id": "t11"
                      }
                    ]
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' not in night_lights_conditions }}",
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      },
                      {
                        "condition": "and",
                        "conditions": [
                          "{{ include_night_lights == 'night_lights_enabled' }}",
                          "{{ 'sun_enabled' in night_lights_conditions }}",
                          "{{ 'time_enabled' in night_lights_conditions }}",
                          {
                            "condition": "time",
                            "after": "00:00:00",
                            "before": "00:00:00"
                          },
                          "{{ expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}",
                          {
                            "condition": "trigger",
                            "id": "t12"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) or ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) or ((include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on')) }}",
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": [
                          "binary_sensor.zigbee_motion_sensor_motion"
                        ],
                        "match": "any",
                        "state": "on"
                      },
                      {
                        "condition": "trigger",
                        "id": "t13"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_bypass == 'bypass_disabled' }}",
                  "{{ motion_bypass == [] }}",
                  "{{ (include_bypass == 'bypass_enabled_turn_on') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass == 'bypass_enabled_stop') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'off') }}",
                  "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') and (trigger.id == 't12') }}",
                  {
                    "condition": "trigger",
                    "id": "t6"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_sun == 'sun_disabled' }}",
                  "{{ include_sun == 'sun_enabled_night_lights' }}",
                  "{{ (include_sun == 'sun_enabled') and (state_attr('sun.sun','elevation') <= sun_elevation | float(90)) }}",
                  {
                    "condition": "trigger",
                    "id": "t8"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_ambient == 'ambient_disabled' }}",
                  "{{ ambient_light_sensor == [] }}",
                  "{{ (include_ambient == 'ambient_enabled') and (states[ambient_light_sensor].state | int < ambient_light_value | int) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and (expand(light_switch.entity_id) | selectattr('state', '==', 'on') | list | count > 0) }}",
                  "{{ (ambient_light_options == 'ambient_light_option_enabled') and ((include_night_lights == 'night_lights_enabled') and (expand(night_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0)) }}",
                  {
                    "condition": "trigger",
                    "id": "t9"
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_time == 'time_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "08:00:00",
                        "before": "01:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      "{{ include_time == 'time_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat",
                          "sun"
                        ]
                      },
                      {
                        "condition": "trigger",
                        "id": "t10"
                      }
                    ]
                  }
                ]
              },
              {
                "condition": "or",
                "conditions": [
                  "{{ include_device_tracker == 'device_tracker_disabled' }}",
                  {
                    "condition": "and",
                    "conditions": [
                      {
                        "condition": "numeric_state",
                        "entity_id": "zone.home",
                        "above": 0
                      },
                      "{{ include_device_tracker == 'zone_enabled' }}"
                    ]
                  },
                  {
                    "condition": "and",
                    "conditions": [
                      "{{ (state_attr(zone, 'persons') + people) | count != dict.fromkeys(state_attr(zone, 'persons') + people) | count }}",
                      "{{ include_device_tracker == 'zone_people_enabled' }}"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "alias": "Check if the night lights are enabled and within the night lights conditions",
                    "conditions": [
                      {
                        "condition": "or",
                        "conditions": [
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('time_enabled' in night_lights_conditions) and not ('sun_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and not ('time_enabled' in night_lights_conditions) }}"
                            ]
                          },
                          {
                            "condition": "and",
                            "conditions": [
                              "{{ include_night_lights == 'night_lights_enabled' }}",
                              "{{ ('sun_enabled' in night_lights_conditions) and (state_attr('sun.sun','elevation') <= night_lights_sun_elevation | float(90)) and ('time_enabled' in night_lights_conditions) }}",
                              {
                                "condition": "time",
                                "after": "00:00:00",
                                "before": "00:00:00"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "choose": [
                          {
                            "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "By-pass is turned off  & check if the motion trigger is off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t7"
                              },
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "match": "all",
                                "state": "off"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t8",
                                  "t9",
                                  "t10"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass time delay",
                                "delay": {
                                  "minutes": 0
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ night_light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ night_switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ night_transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          },
                          {
                            "alias": "Turn off normal lights when trigger by start night lights conditions",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": [
                                  "t4",
                                  "t5"
                                ]
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_light }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ crossover_lights_switch }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              }
                            ]
                          },
                          {
                            "alias": "Safe Guard when HA restarts",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t13"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check automation and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the motion trigger is on",
                                    "condition": "state",
                                    "entity_id": [
                                      "binary_sensor.zigbee_motion_sensor_motion"
                                    ],
                                    "state": "on",
                                    "match": "any"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "We need something here for the IF to continue",
                                    "delay": {
                                      "seconds": 1
                                    }
                                  },
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "else": [
                                  {
                                    "choose": [
                                      {
                                        "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                        "conditions": [
                                          {
                                            "condition": "template",
                                            "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                          }
                                        ],
                                        "sequence": [
                                          {
                                            "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                            "delay": {
                                              "minutes": 60
                                            }
                                          },
                                          {
                                            "alias": "Turn off the by-pass",
                                            "service": "homeassistant.turn_off",
                                            "entity_id": "input_boolean.sleep_time"
                                          },
                                          {
                                            "stop": "Stop the automation"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "alias": "Wait the number of minutes set in the night lights time delay",
                                    "delay": {
                                      "minutes": 5
                                    }
                                  },
                                  {
                                    "alias": "Turn off the lights",
                                    "service": "light.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_light_entities }}"
                                    },
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the switches",
                                    "service": "switch.turn_off",
                                    "target": {
                                      "entity_id": "{{ night_switch_entities }}"
                                    }
                                  },
                                  {
                                    "alias": "Turn off the scenes",
                                    "service": "scene.turn_on",
                                    "entity_id": [],
                                    "data": {
                                      "transition": "{{ night_transition_off_value }}"
                                    }
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and not ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' in include_night_light_control) and ('use_colour_temperature' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "brightness_pct": "{{ night_brightness_value }}",
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the brightness and transition for the night lights switch",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_colour_temperature' in include_night_light_control) and not ('use_brightness' in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "kelvin": "{{night_temperature_value}}",
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "choose": [
                          {
                            "alias": "Set the transition for the night lights switch - Default",
                            "conditions": [
                              {
                                "condition": "template",
                                "value_template": "{{ ('use_brightness' not in include_night_light_control) and ('use_colour_temperature' not in include_night_light_control) }}"
                              }
                            ],
                            "sequence": [
                              {
                                "service": "light.turn_on",
                                "target": {
                                  "entity_id": "{{ night_light_entities_off }}"
                                },
                                "data": {
                                  "transition": "{{ night_transition_on_value }}"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Turn on the switches",
                        "service": "switch.turn_on",
                        "target": {
                          "entity_id": "{{ night_switch_entities_off }}"
                        }
                      },
                      {
                        "alias": "Turn on the scenes",
                        "service": "scene.turn_on",
                        "target": {
                          "entity_id": "{{ night_scene_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_on_value }}"
                        }
                      },
                      {
                        "choose": [
                          {
                            "alias": "By-pass is enabled & check by-pass option - turn lights on",
                            "conditions": [
                              {
                                "condition": "trigger",
                                "id": "t6"
                              },
                              {
                                "condition": "template",
                                "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Check by-pass settings and preform the correct action",
                                "if": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled",
                                    "condition": "template",
                                    "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                                  }
                                ],
                                "then": [
                                  {
                                    "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                    "delay": {
                                      "minutes": 60
                                    }
                                  },
                                  {
                                    "alias": "Turn off the by-pass",
                                    "service": "homeassistant.turn_off",
                                    "entity_id": "input_boolean.sleep_time"
                                  },
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ],
                                "else": [
                                  {
                                    "stop": "Stop the automation"
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "alias": "Check if the trigger is on and wait for it to go off",
                            "conditions": [
                              {
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "sequence": [
                              {
                                "alias": "Wait until motion sensor is off",
                                "wait_for_trigger": {
                                  "platform": "state",
                                  "entity_id": [
                                    "binary_sensor.zigbee_motion_sensor_motion"
                                  ],
                                  "from": "on",
                                  "to": "off"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Wait the number of minutes set in the night lights time delay",
                        "delay": {
                          "minutes": 5
                        }
                      },
                      {
                        "alias": "Turn off the lights",
                        "service": "light.turn_off",
                        "target": {
                          "entity_id": "{{ night_light_entities }}"
                        },
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      },
                      {
                        "alias": "Turn off the switches",
                        "service": "switch.turn_off",
                        "target": {
                          "entity_id": "{{ night_switch_entities }}"
                        }
                      },
                      {
                        "alias": "Turn off the scenes",
                        "service": "scene.turn_on",
                        "entity_id": [],
                        "data": {
                          "transition": "{{ night_transition_off_value }}"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "choose": [
                      {
                        "alias": "By-pass is turned on  & check by-pass option - turn lights off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned on  & check by-pass option - Keep the current lights state",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_stop' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "By-pass is turned off  & check if the motion trigger is off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t7"
                          },
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "match": "all",
                            "state": "off"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the by-pass time delay",
                            "delay": {
                              "minutes": 0
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Sun, Ambient Light Sensor & time above setting to turn off",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t8",
                              "t9",
                              "t10"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait the number of minutes set in the normal lights time delay",
                            "delay": {
                              "minutes": 1
                            }
                          },
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ light_entities }}"
                            },
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ switch_entities }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ transition_off_value }}"
                            }
                          },
                          {
                            "stop": "Stop the automation"
                          }
                        ]
                      },
                      {
                        "alias": "Turn off night lights when trigger by end night lights conditions",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": [
                              "t11",
                              "t12"
                            ]
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Turn off the lights",
                            "service": "light.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_light }}"
                            },
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          },
                          {
                            "alias": "Turn off the switches",
                            "service": "switch.turn_off",
                            "target": {
                              "entity_id": "{{ crossover_night_lights_switch }}"
                            }
                          },
                          {
                            "alias": "Turn off the scenes",
                            "service": "scene.turn_on",
                            "entity_id": [],
                            "data": {
                              "transition": "{{ night_transition_off_value }}"
                            }
                          }
                        ]
                      },
                      {
                        "alias": "Safe Guard when HA restarts",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t13"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check automation and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the motion trigger is on",
                                "condition": "state",
                                "entity_id": [
                                  "binary_sensor.zigbee_motion_sensor_motion"
                                ],
                                "state": "on",
                                "match": "any"
                              }
                            ],
                            "then": [
                              {
                                "alias": "We need something here for the IF to continue",
                                "delay": {
                                  "seconds": 1
                                }
                              },
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ],
                            "else": [
                              {
                                "choose": [
                                  {
                                    "alias": "Check if the by-pass auto off is enabled and by-pass is ON",
                                    "conditions": [
                                      {
                                        "condition": "template",
                                        "value_template": "{{ (include_bypass_auto_off == 'bypass_auto_off_enabled') and (states[motion_bypass].state == 'on') }}"
                                      }
                                    ],
                                    "sequence": [
                                      {
                                        "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                        "delay": {
                                          "minutes": 60
                                        }
                                      },
                                      {
                                        "alias": "Turn off the by-pass",
                                        "service": "homeassistant.turn_off",
                                        "entity_id": "input_boolean.sleep_time"
                                      },
                                      {
                                        "stop": "Stop the automation"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "alias": "Wait the number of minutes set in the normal lights time delay",
                                "delay": {
                                  "minutes": 1
                                }
                              },
                              {
                                "alias": "Turn off the lights",
                                "service": "light.turn_off",
                                "target": {
                                  "entity_id": "{{ light_entities }}"
                                },
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "alias": "Turn off the switches",
                                "service": "switch.turn_off",
                                "target": {
                                  "entity_id": "{{ switch_entities }}"
                                }
                              },
                              {
                                "alias": "Turn off the scenes",
                                "service": "scene.turn_on",
                                "entity_id": [],
                                "data": {
                                  "transition": "{{ transition_off_value }}"
                                }
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and not ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' in include_light_control) and ('use_colour_temperature' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "brightness_pct": "{{ brightness_value }}",
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the brightness and transition for the normal lights switch",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_colour_temperature' in include_light_control) and not ('use_brightness' in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "kelvin": "{{temperature_value}}",
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "choose": [
                      {
                        "alias": "Set the transition for the normal lights switch - Default",
                        "conditions": [
                          {
                            "condition": "template",
                            "value_template": "{{ ('use_brightness' not in include_light_control) and ('use_colour_temperature' not in include_light_control) }}"
                          }
                        ],
                        "sequence": [
                          {
                            "service": "light.turn_on",
                            "target": {
                              "entity_id": "{{ light_entities_off }}"
                            },
                            "data": {
                              "transition": "{{ transition_on_value }}"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Turn on the switches",
                    "service": "switch.turn_on",
                    "target": {
                      "entity_id": "{{ switch_entities_off }}"
                    }
                  },
                  {
                    "alias": "Turn on the scenes",
                    "service": "scene.turn_on",
                    "target": {
                      "entity_id": "{{ scene_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_on_value }}"
                    }
                  },
                  {
                    "choose": [
                      {
                        "alias": "By-pass is enabled & check by-pass option - turn lights on",
                        "conditions": [
                          {
                            "condition": "trigger",
                            "id": "t6"
                          },
                          {
                            "condition": "template",
                            "value_template": "{{ include_bypass == 'bypass_enabled_turn_on' }}"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Check by-pass settings and preform the correct action",
                            "if": [
                              {
                                "alias": "Check if the by-pass auto off is enabled",
                                "condition": "template",
                                "value_template": "{{ include_bypass_auto_off == 'bypass_auto_off_enabled' }}"
                              }
                            ],
                            "then": [
                              {
                                "alias": "Wait the number of minutes set in the by-pass auto off time delay",
                                "delay": {
                                  "minutes": 60
                                }
                              },
                              {
                                "alias": "Turn off the by-pass",
                                "service": "homeassistant.turn_off",
                                "entity_id": "input_boolean.sleep_time"
                              },
                              {
                                "stop": "Stop the automation"
                              }
                            ],
                            "else": [
                              {
                                "stop": "Stop the automation"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "alias": "Check if the trigger is on and wait for it to go off",
                        "conditions": [
                          {
                            "condition": "state",
                            "entity_id": [
                              "binary_sensor.zigbee_motion_sensor_motion"
                            ],
                            "state": "on",
                            "match": "any"
                          }
                        ],
                        "sequence": [
                          {
                            "alias": "Wait until motion sensor is off",
                            "wait_for_trigger": {
                              "platform": "state",
                              "entity_id": [
                                "binary_sensor.zigbee_motion_sensor_motion"
                              ],
                              "from": "on",
                              "to": "off"
                            }
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "alias": "Wait the number of minutes set in the normal lights time delay",
                    "delay": {
                      "minutes": 1
                    }
                  },
                  {
                    "alias": "Turn off the lights",
                    "service": "light.turn_off",
                    "target": {
                      "entity_id": "{{ light_entities }}"
                    },
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  },
                  {
                    "alias": "Turn off the switches",
                    "service": "switch.turn_off",
                    "target": {
                      "entity_id": "{{ switch_entities }}"
                    }
                  },
                  {
                    "alias": "Turn off the scenes",
                    "service": "scene.turn_on",
                    "entity_id": [],
                    "data": {
                      "transition": "{{ transition_off_value }}"
                    }
                  }
                ]
              }
            ],
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1688854997782",
            "alias": "LIGHT - Turn on bedroom light",
            "description": "",
            "use_blueprint": {
              "path": "Blackshome/sensor-light.yaml",
              "input": {
                "light_switch": {
                  "entity_id": "light.bedroom_light"
                },
                "motion_trigger": [
                  "binary_sensor.zigbee_motion_sensor_motion"
                ],
                "include_bypass": "bypass_disabled",
                "motion_bypass": "input_boolean.sleep_time",
                "include_sun": "sun_enabled",
                "sun_elevation": -3.5,
                "include_device_tracker": "zone_people_enabled",
                "zone": "zone.home",
                "people": [
                  "person.cecilia_ueda",
                  "person.christian_silva"
                ],
                "time_delay": 1,
                "include_time": "time_enabled",
                "after_time": "08:00:00",
                "before_time": "01:00:00"
              }
            }
          },
          "context": {
            "id": "01HGB84EW0SS0X41BWVM7MQMNG",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/14/conditions/0/entity_id/0",
          "run_id": "d219a9b7750fccfa3673b894ef35cfe8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:18:02.880383+00:00",
            "finish": "2023-11-28T15:18:02.888413+00:00"
          },
          "domain": "automation",
          "item_id": "1688854997782",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.1684208941685": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "317a7a3d4ebd39616c3cfdd77d337fa3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:40:00.327869+00:00",
            "finish": "2023-11-28T14:40:00.328069+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-28T14:40:00.327933+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T11:01:51.127768+00:00",
                    "last_updated": "2023-11-28T11:01:51.127768+00:00",
                    "context": {
                      "id": "01HGASFBCQ8HEAGBPMFQG40G2R",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T11:40:00.327637-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:40:00.327971+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-28T14:40:00.328007+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGB5YST752RJF78N4S96YHG8",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "317a7a3d4ebd39616c3cfdd77d337fa3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:40:00.327869+00:00",
            "finish": "2023-11-28T14:40:00.328069+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "42f24fd0c55a82e35e51e0d22a7828d0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:50:00.327127+00:00",
            "finish": "2023-11-28T14:50:00.327309+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-28T14:50:00.327181+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T11:01:51.127768+00:00",
                    "last_updated": "2023-11-28T11:01:51.127768+00:00",
                    "context": {
                      "id": "01HGASFBCQ8HEAGBPMFQG40G2R",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T11:50:00.326910-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:50:00.327217+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-28T14:50:00.327252+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGB6H3R785A45WZ2FECBYWCJ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "42f24fd0c55a82e35e51e0d22a7828d0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:50:00.327127+00:00",
            "finish": "2023-11-28T14:50:00.327309+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "f3784d7b5cc35f4415d7d06367b82dcb",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:00:00.327003+00:00",
            "finish": "2023-11-28T15:00:00.327251+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-28T15:00:00.327071+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T11:01:51.127768+00:00",
                    "last_updated": "2023-11-28T11:01:51.127768+00:00",
                    "context": {
                      "id": "01HGASFBCQ8HEAGBPMFQG40G2R",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T12:00:00.326643-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T15:00:00.327119+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-28T15:00:00.327170+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGB73DP614RV3SK4EH6B67NT",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "f3784d7b5cc35f4415d7d06367b82dcb",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:00:00.327003+00:00",
            "finish": "2023-11-28T15:00:00.327251+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "9c616d22ce3b590aefd15bd574087d03",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:10:00.327873+00:00",
            "finish": "2023-11-28T15:10:00.328061+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-28T15:10:00.327927+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T11:01:51.127768+00:00",
                    "last_updated": "2023-11-28T11:01:51.127768+00:00",
                    "context": {
                      "id": "01HGASFBCQ8HEAGBPMFQG40G2R",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T12:10:00.327657-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T15:10:00.327964+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-28T15:10:00.328000+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGB7NQM7WGYXNKPX9YP8C8PW",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "9c616d22ce3b590aefd15bd574087d03",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:10:00.327873+00:00",
            "finish": "2023-11-28T15:10:00.328061+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "5ae0319e39deb5e493d04f2347c9ff98",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:20:00.399666+00:00",
            "finish": "2023-11-28T15:20:00.399883+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-28T15:20:00.399732+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_on_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684208941685",
                      "last_triggered": "2023-10-20T14:00:00.189849+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn on Heater"
                    },
                    "last_changed": "2023-11-28T15:17:37.542789+00:00",
                    "last_updated": "2023-11-28T15:17:37.542789+00:00",
                    "context": {
                      "id": "01HGB83P4676TP9HC55MA0HJHE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T12:20:00.399403-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T15:20:00.399778+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-28T15:20:00.399816+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684208941685",
            "alias": "SWITCH - Turn on Heater",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.heater_automation"
                ],
                "to": "on"
              },
              {
                "platform": "time_pattern",
                "minutes": "/10"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "below": "input_number.thermostat_temperature"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "binary_sensor.cecilia_pc",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGB881MF3DBD78JGAATJ9KXK",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "5ae0319e39deb5e493d04f2347c9ff98",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:20:00.399666+00:00",
            "finish": "2023-11-28T15:20:00.399883+00:00"
          },
          "domain": "automation",
          "item_id": "1684208941685",
          "trigger": "time pattern"
        }
      }
    ],
    "automation.1684086727943": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "b5376a12c58b805ec93a87cc69156dfa",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:45:56.769347+00:00",
            "finish": "2023-11-28T14:45:56.769960+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T14:45:56.769819+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-26T18:47:45.267234+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T11:01:51.127373+00:00",
                    "last_updated": "2023-11-28T11:01:51.127373+00:00",
                    "context": {
                      "id": "01HGASFBCQRASHVFFAN0FZQMCB",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713315,
                        "longitude": -49.2995267,
                        "gps_accuracy": 13,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T14:45:28.639497+00:00",
                      "context": {
                        "id": "01HGB68TDZS1YV1025T5WBFE6E",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713315,
                        "longitude": -49.2995267,
                        "gps_accuracy": 78,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T14:45:56.768717+00:00",
                      "context": {
                        "id": "01HGB69NX0F3NT6MZE3ZW5SSPB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:45:56.769856+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGB69NX1RDWBA52S68MERHM1",
            "parent_id": "01HGB69NX0F3NT6MZE3ZW5SSPB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "b5376a12c58b805ec93a87cc69156dfa",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:45:56.769347+00:00",
            "finish": "2023-11-28T14:45:56.769960+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "0e97dca3f1b8417a6f48e88d5a4e191b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:49:58.302113+00:00",
            "finish": "2023-11-28T14:49:58.302749+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T14:49:58.302598+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-26T18:47:45.267234+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T11:01:51.127373+00:00",
                    "last_updated": "2023-11-28T11:01:51.127373+00:00",
                    "context": {
                      "id": "01HGASFBCQRASHVFFAN0FZQMCB",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713315,
                        "longitude": -49.2995267,
                        "gps_accuracy": 78,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T14:45:56.768717+00:00",
                      "context": {
                        "id": "01HGB69NX0F3NT6MZE3ZW5SSPB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713467,
                        "longitude": -49.2995433,
                        "gps_accuracy": 13,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T14:49:58.299344+00:00",
                      "context": {
                        "id": "01HGB6H1RVE2SA0FSTATB5ARYJ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:49:58.302645+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGB6H1RYA7DNJ2WR9CK2NX72",
            "parent_id": "01HGB6H1RVE2SA0FSTATB5ARYJ",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "0e97dca3f1b8417a6f48e88d5a4e191b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:49:58.302113+00:00",
            "finish": "2023-11-28T14:49:58.302749+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "0c1a8d996f99900ad85bb4d94379707b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:51:59.436684+00:00",
            "finish": "2023-11-28T14:51:59.437319+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T14:51:59.437180+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-26T18:47:45.267234+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T11:01:51.127373+00:00",
                    "last_updated": "2023-11-28T11:01:51.127373+00:00",
                    "context": {
                      "id": "01HGASFBCQRASHVFFAN0FZQMCB",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713467,
                        "longitude": -49.2995433,
                        "gps_accuracy": 13,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T14:49:58.299344+00:00",
                      "context": {
                        "id": "01HGB6H1RVE2SA0FSTATB5ARYJ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713517,
                        "longitude": -49.2995445,
                        "gps_accuracy": 13,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T14:51:59.433867+00:00",
                      "context": {
                        "id": "01HGB6MR29YERPW4ZD0EBECQET",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:51:59.437218+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGB6MR2CZJRS6HPB0VY3XRPN",
            "parent_id": "01HGB6MR29YERPW4ZD0EBECQET",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "0c1a8d996f99900ad85bb4d94379707b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:51:59.436684+00:00",
            "finish": "2023-11-28T14:51:59.437319+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "520c33e52625e994206f547120480549",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:00:26.367513+00:00",
            "finish": "2023-11-28T15:00:26.367816+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T15:00:26.367747+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-26T18:47:45.267234+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T11:01:51.127373+00:00",
                    "last_updated": "2023-11-28T11:01:51.127373+00:00",
                    "context": {
                      "id": "01HGASFBCQRASHVFFAN0FZQMCB",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713517,
                        "longitude": -49.2995445,
                        "gps_accuracy": 13,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T14:51:59.433867+00:00",
                      "context": {
                        "id": "01HGB6MR29YERPW4ZD0EBECQET",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713487,
                        "longitude": -49.2995496,
                        "gps_accuracy": 13,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T15:00:26.365561+00:00",
                      "context": {
                        "id": "01HGB7473X31EJKBBMGBWZGQSC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T15:00:26.367766+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGB7473Z07E4TJPA87Q6F8GJ",
            "parent_id": "01HGB7473X31EJKBBMGBWZGQSC",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "520c33e52625e994206f547120480549",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:00:26.367513+00:00",
            "finish": "2023-11-28T15:00:26.367816+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "68f7b254034600303371da5df7b1ef23",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:10:42.710436+00:00",
            "finish": "2023-11-28T15:10:42.710755+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T15:10:42.710685+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notification_cecilia_has_arrived_home",
                    "state": "on",
                    "attributes": {
                      "id": "1684086727943",
                      "last_triggered": "2023-11-26T18:47:45.267234+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "friendly_name": "ZONE - Cecilia arrived home"
                    },
                    "last_changed": "2023-11-28T11:01:51.127373+00:00",
                    "last_updated": "2023-11-28T11:01:51.127373+00:00",
                    "context": {
                      "id": "01HGASFBCQRASHVFFAN0FZQMCB",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "Persons state has changed",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "person.cecilia_ueda",
                    "from_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713487,
                        "longitude": -49.2995496,
                        "gps_accuracy": 13,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T15:00:26.365561+00:00",
                      "context": {
                        "id": "01HGB7473X31EJKBBMGBWZGQSC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "person.cecilia_ueda",
                      "state": "home",
                      "attributes": {
                        "editable": true,
                        "id": "cecilia_ueda",
                        "latitude": -25.4713421,
                        "longitude": -49.2995359,
                        "gps_accuracy": 13,
                        "source": "device_tracker.cecilia_sp",
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392",
                        "device_trackers": [
                          "device_tracker.cecilia_sp"
                        ],
                        "entity_picture": "/api/image/serve/78c5fbcec903d0cfca26e67dec03012f/512x512",
                        "friendly_name": "Cecilia Ueda"
                      },
                      "last_changed": "2023-11-28T11:01:42.402534+00:00",
                      "last_updated": "2023-11-28T15:10:42.708722+00:00",
                      "context": {
                        "id": "01HGB7Q10M0NVZDS2C8BRMY9Y8",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of person.cecilia_ueda"
                  },
                  "people2monitor_var": [
                    "person.cecilia_ueda"
                  ],
                  "zone2monitor_var": [
                    "zone.home"
                  ],
                  "friend_zone": [
                    "home"
                  ],
                  "to_state": "home",
                  "from_state": "home"
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T15:10:42.710704+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "state",
                "id": "Persons state has changed",
                "entity_id": [
                  "person.cecilia_ueda"
                ]
              }
            ],
            "condition": [
              {
                "alias": "Make sure there even was a move",
                "condition": "template",
                "value_template": "{{ to_state != from_state }}"
              },
              {
                "alias": "Make sure it's not an I'm Lost move",
                "condition": "template",
                "value_template": "{{ not to_state in ('unknown','unavailable','none','None','') and not from_state in ('unknown','unavailable','none','None','') }}\n"
              },
              {
                "alias": "Only allow execution within selected Hours / Weekdays",
                "condition": "time",
                "after": "00:00:00",
                "before": "00:00:00",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri",
                  "sat",
                  "sun"
                ]
              }
            ],
            "variables": {
              "people2monitor_var": [
                "person.cecilia_ueda"
              ],
              "zone2monitor_var": [
                "zone.home"
              ],
              "friend_zone": "{% set ns = namespace(zone=[]) %} {% for z in zone2monitor_var %} {% set ns.zone = ns.zone + [states[z].attributes.friendly_name | lower] %} {% endfor %}  {{ ns.zone }}\n",
              "to_state": "{{ trigger.to_state.state | lower }}",
              "from_state": "{{ trigger.from_state.state | lower }}"
            },
            "action": [
              {
                "alias": "Determine if there was an actionable event",
                "choose": [
                  {
                    "conditions": [
                      {
                        "alias": "Has Person arrived at Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "condition": "template",
                            "alias": "person is in target zone",
                            "value_template": "{{ to_state in friend_zone }}"
                          },
                          {
                            "condition": "template",
                            "alias": "person is arriving from another zone",
                            "value_template": "{{ not from_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "notify.mobile_app_christian_sp",
                        "data": {
                          "title": "Home assistant",
                          "message": "Cecilia has arrived home"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person left Zone?",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person was in Zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person not in zone now",
                            "condition": "template",
                            "value_template": "{{ not to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      {
                        "alias": "Person jumped from known zone to known zone",
                        "condition": "and",
                        "conditions": [
                          {
                            "alias": "Person left known zone",
                            "condition": "template",
                            "value_template": "{{ from_state in friend_zone }}"
                          },
                          {
                            "alias": "Person arrived in known zone",
                            "condition": "template",
                            "value_template": "{{ to_state in friend_zone }}"
                          }
                        ]
                      }
                    ],
                    "sequence": []
                  }
                ]
              },
              {
                "alias": "Time delay to hold on devices that disconnect often (if needed)",
                "delay": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "mode": "queued",
            "max": 10,
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1684086727943",
            "alias": "ZONE - Cecilia arrived home",
            "description": "",
            "use_blueprint": {
              "path": "SirGoodenough/Person_Alert_Blueprint.yaml",
              "input": {
                "people2monitor": [
                  "person.cecilia_ueda"
                ],
                "zone2monitor": [
                  "zone.home"
                ],
                "hold_period": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                },
                "leave_action": [],
                "enter_action": [
                  {
                    "service": "notify.mobile_app_christian_sp",
                    "data": {
                      "title": "Home assistant",
                      "message": "Cecilia has arrived home"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HGB7Q10PYH9DZ4T1BVKZV05Q",
            "parent_id": "01HGB7Q10M0NVZDS2C8BRMY9Y8",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "68f7b254034600303371da5df7b1ef23",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T15:10:42.710436+00:00",
            "finish": "2023-11-28T15:10:42.710755+00:00"
          },
          "domain": "automation",
          "item_id": "1684086727943",
          "trigger": "state of person.cecilia_ueda"
        }
      }
    ],
    "automation.1683953508588": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "63130fd2d83778ea91481c717ae125b4",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T13:58:41.297281+00:00",
            "finish": "2023-11-28T13:58:41.297434+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T13:58:41.297311+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T11:01:51.127275+00:00",
                    "last_updated": "2023-11-28T11:01:51.127275+00:00",
                    "context": {
                      "id": "01HGASFBCQ66FWJM3DSC5K7ZG0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "74",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T13:51:42.440542+00:00",
                      "last_updated": "2023-11-28T13:51:42.440542+00:00",
                      "context": {
                        "id": "01HGB36BV8E969WQDT2F2T8MB9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "73",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T13:58:41.296928+00:00",
                      "last_updated": "2023-11-28T13:58:41.296928+00:00",
                      "context": {
                        "id": "01HGB3K4WG36ZDTAAEGDGYV3XA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T13:58:41.297335+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGB3K4WHDPTYCN1G2GSCMXTE",
            "parent_id": "01HGB3K4WG36ZDTAAEGDGYV3XA",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "63130fd2d83778ea91481c717ae125b4",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T13:58:41.297281+00:00",
            "finish": "2023-11-28T13:58:41.297434+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "9f9e896374772bf9204534b9431406f3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:08:41.466147+00:00",
            "finish": "2023-11-28T14:08:41.466408+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T14:08:41.466197+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T11:01:51.127275+00:00",
                    "last_updated": "2023-11-28T11:01:51.127275+00:00",
                    "context": {
                      "id": "01HGASFBCQ66FWJM3DSC5K7ZG0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "73",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T13:58:41.296928+00:00",
                      "last_updated": "2023-11-28T13:58:41.296928+00:00",
                      "context": {
                        "id": "01HGB3K4WG36ZDTAAEGDGYV3XA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "72",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T14:08:41.465425+00:00",
                      "last_updated": "2023-11-28T14:08:41.465425+00:00",
                      "context": {
                        "id": "01HGB45EZSPXNS4YR9V3RQA6QV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:08:41.466233+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGB45EZTSJGE1E8Y67XCCWGJ",
            "parent_id": "01HGB45EZSPXNS4YR9V3RQA6QV",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "9f9e896374772bf9204534b9431406f3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:08:41.466147+00:00",
            "finish": "2023-11-28T14:08:41.466408+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "20e0504873968f09b926acd2cad7fa00",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:19:49.216928+00:00",
            "finish": "2023-11-28T14:19:49.217284+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T14:19:49.216988+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T11:01:51.127275+00:00",
                    "last_updated": "2023-11-28T11:01:51.127275+00:00",
                    "context": {
                      "id": "01HGASFBCQ66FWJM3DSC5K7ZG0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "72",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T14:08:41.465425+00:00",
                      "last_updated": "2023-11-28T14:08:41.465425+00:00",
                      "context": {
                        "id": "01HGB45EZSPXNS4YR9V3RQA6QV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "71",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T14:19:49.216601+00:00",
                      "last_updated": "2023-11-28T14:19:49.216601+00:00",
                      "context": {
                        "id": "01HGB4SV30S5ZJS5YKNSHV81S3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:19:49.217030+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGB4SV30SN9KQMSZCCNBT6X3",
            "parent_id": "01HGB4SV30S5ZJS5YKNSHV81S3",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "20e0504873968f09b926acd2cad7fa00",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:19:49.216928+00:00",
            "finish": "2023-11-28T14:19:49.217284+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "18b28f84ac7c3deb048b579e9258bdd5",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:25:36.662965+00:00",
            "finish": "2023-11-28T14:25:36.663099+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T14:25:36.662992+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T11:01:51.127275+00:00",
                    "last_updated": "2023-11-28T11:01:51.127275+00:00",
                    "context": {
                      "id": "01HGASFBCQ66FWJM3DSC5K7ZG0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "71",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T14:19:49.216601+00:00",
                      "last_updated": "2023-11-28T14:19:49.216601+00:00",
                      "context": {
                        "id": "01HGB4SV30S5ZJS5YKNSHV81S3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "70",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T14:25:36.662562+00:00",
                      "last_updated": "2023-11-28T14:25:36.662562+00:00",
                      "context": {
                        "id": "01HGB54ECPXZR55RZR7WCGTVH6",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:25:36.663009+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGB54ECPA1Y6G78D244WJAXK",
            "parent_id": "01HGB54ECPXZR55RZR7WCGTVH6",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "18b28f84ac7c3deb048b579e9258bdd5",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:25:36.662965+00:00",
            "finish": "2023-11-28T14:25:36.663099+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "e1111d86306f03fa329c9f982dc863da",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:43:56.454464+00:00",
            "finish": "2023-11-28T14:43:56.454611+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T14:43:56.454493+00:00",
                "changed_variables": {
                  "phone_battery": "sensor.cecilia_sp_battery_level",
                  "charged_percent": 99,
                  "this": {
                    "entity_id": "automation.switch_turn_off_charging",
                    "state": "on",
                    "attributes": {
                      "id": "1683953508588",
                      "last_triggered": "2023-11-28T02:20:58.551122+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off charging"
                    },
                    "last_changed": "2023-11-28T11:01:51.127275+00:00",
                    "last_updated": "2023-11-28T11:01:51.127275+00:00",
                    "context": {
                      "id": "01HGASFBCQ66FWJM3DSC5K7ZG0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "sensor.cecilia_sp_battery_level",
                    "from_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "70",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-70",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T14:25:36.662562+00:00",
                      "last_updated": "2023-11-28T14:25:36.662562+00:00",
                      "context": {
                        "id": "01HGB54ECPXZR55RZR7WCGTVH6",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.cecilia_sp_battery_level",
                      "state": "69",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "%",
                        "device_class": "battery",
                        "icon": "mdi:battery-60",
                        "friendly_name": "CECILIA-SP Battery level"
                      },
                      "last_changed": "2023-11-28T14:43:56.454308+00:00",
                      "last_updated": "2023-11-28T14:43:56.454308+00:00",
                      "context": {
                        "id": "01HGB660D6R31V2HZEGV3006AX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.cecilia_sp_battery_level"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T14:43:56.454512+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "sensor.cecilia_sp_battery_level"
                  ]
                }
              }
            ]
          },
          "config": {
            "variables": {
              "phone_battery": "sensor.cecilia_sp_battery_level",
              "charged_percent": 99
            },
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.cecilia_sp_battery_level"
              }
            ],
            "condition": {
              "condition": "template",
              "value_template": "{{ (states(phone_battery)|int) >= (charged_percent|int) }}"
            },
            "action": [
              {
                "service": "switch.turn_off",
                "entity_id": "switch.local_charger_socket"
              }
            ],
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1683953508588",
            "alias": "SWITCH - Turn off charging",
            "description": "",
            "use_blueprint": {
              "path": "vorion/turn-off-phone-charging-after-the-phone-is-charged.yaml",
              "input": {
                "switch": "switch.local_charger_socket",
                "phone_battery": "sensor.cecilia_sp_battery_level",
                "charged_percent": 99
              }
            }
          },
          "context": {
            "id": "01HGB660D6Z34TFW5W9CTTQS61",
            "parent_id": "01HGB660D6R31V2HZEGV3006AX",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "e1111d86306f03fa329c9f982dc863da",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T14:43:56.454464+00:00",
            "finish": "2023-11-28T14:43:56.454611+00:00"
          },
          "domain": "automation",
          "item_id": "1683953508588",
          "trigger": "state of sensor.cecilia_sp_battery_level"
        }
      }
    ],
    "automation.1700481253602": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "038319c77662b2da5d2a3cdbaee0d2e6",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T11:05:00.385189+00:00",
            "finish": "2023-11-26T11:05:03.295937+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T11:05:00.385249+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.jellyfin_turn_on",
                    "state": "on",
                    "attributes": {
                      "id": "1700481253602",
                      "last_triggered": "2023-11-25T11:05:00.261411+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "JELLYFIN - Turn on"
                    },
                    "last_changed": "2023-11-26T11:01:53.602003+00:00",
                    "last_updated": "2023-11-26T11:01:53.602003+00:00",
                    "context": {
                      "id": "01HG5MNZT23YTYMZDEBCW3ZK0G",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T08:05:00.384916-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T11:05:00.385619+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG5MVP7151JJ7C4G49QBPEHB",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "docker_start_jellyfin",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1700481253602",
            "alias": "JELLYFIN - Turn on",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:05:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "shell_command.docker_start_jellyfin",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG5MVP7151JJ7C4G49QBPEHB",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "038319c77662b2da5d2a3cdbaee0d2e6",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T11:05:00.385189+00:00",
            "finish": "2023-11-26T11:05:03.295937+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "382bfb57dc1b376307d04a13522b7e72",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T11:05:00.480310+00:00",
            "finish": "2023-11-27T11:05:03.012790+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T11:05:00.480347+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.jellyfin_turn_on",
                    "state": "on",
                    "attributes": {
                      "id": "1700481253602",
                      "last_triggered": "2023-11-26T11:05:00.385369+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "JELLYFIN - Turn on"
                    },
                    "last_changed": "2023-11-27T11:01:53.205381+00:00",
                    "last_updated": "2023-11-27T11:01:53.205381+00:00",
                    "context": {
                      "id": "01HG872PDNTYWZGJSBJ1EW6XEF",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T08:05:00.480112-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T11:05:00.480588+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG878DA0EYA1AJXEWACENG4M",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "docker_start_jellyfin",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1700481253602",
            "alias": "JELLYFIN - Turn on",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:05:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "shell_command.docker_start_jellyfin",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG878DA0EYA1AJXEWACENG4M",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "382bfb57dc1b376307d04a13522b7e72",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T11:05:00.480310+00:00",
            "finish": "2023-11-27T11:05:03.012790+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "def00472fcc5f1f3217103350f7bdb83",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T11:05:00.092600+00:00",
            "finish": "2023-11-28T11:05:02.356605+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T11:05:00.092666+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.jellyfin_turn_on",
                    "state": "on",
                    "attributes": {
                      "id": "1700481253602",
                      "last_triggered": "2023-11-27T11:05:00.480428+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "JELLYFIN - Turn on"
                    },
                    "last_changed": "2023-11-28T11:01:51.128550+00:00",
                    "last_updated": "2023-11-28T11:01:51.128550+00:00",
                    "context": {
                      "id": "01HGASFBCRG561S9JSTFDSH9NJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T08:05:00.092315-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T11:05:00.093074+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGASN3XWTBY6EKH89WC6D4CE",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "docker_start_jellyfin",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1700481253602",
            "alias": "JELLYFIN - Turn on",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:05:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "shell_command.docker_start_jellyfin",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGASN3XWTBY6EKH89WC6D4CE",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "def00472fcc5f1f3217103350f7bdb83",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T11:05:00.092600+00:00",
            "finish": "2023-11-28T11:05:02.356605+00:00"
          },
          "domain": "automation",
          "item_id": "1700481253602",
          "trigger": "time"
        }
      }
    ],
    "automation.1684209316498": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "cc3b55c4af132ebc7582f91cd15fbe92",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:06:13.806277+00:00",
            "finish": "2023-11-26T11:06:13.806463+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T11:06:13.806332+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684209316498",
                      "last_triggered": "2023-10-20T14:01:40.005739+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off heater"
                    },
                    "last_changed": "2023-11-26T11:01:53.600857+00:00",
                    "last_updated": "2023-11-26T11:01:53.600857+00:00",
                    "context": {
                      "id": "01HG5MNZT0XSZMQ34SG8RZV93V",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.office_temperature_sensor_temperature",
                    "below": null,
                    "above": "input_number.thermostat_temperature",
                    "from_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "unavailable",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-26T11:02:07.506203+00:00",
                      "last_updated": "2023-11-26T11:02:07.506203+00:00",
                      "context": {
                        "id": "01HG5MPDCJCXQNNNW1QEKS1VE4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "22.5",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-26T11:06:13.804401+00:00",
                      "last_updated": "2023-11-26T11:06:13.804401+00:00",
                      "context": {
                        "id": "01HG5MXXXC45YSNKWWHZA6Q2WE",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "numeric state of sensor.office_temperature_sensor_temperature"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T11:06:13.806370+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T11:06:13.806407+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684209316498",
            "alias": "SWITCH - Turn off heater",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0
                },
                "above": "input_number.thermostat_temperature"
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "above": "input_number.thermostat_temperature"
              }
            ],
            "action": [
              {
                "service": "switch.turn_off",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG5MXXXE1PTJC5PMW6TYTHBR",
            "parent_id": "01HG5MXXXC45YSNKWWHZA6Q2WE",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "cc3b55c4af132ebc7582f91cd15fbe92",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:06:13.806277+00:00",
            "finish": "2023-11-26T11:06:13.806463+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "60d8861f0122f6b43ec8635d4dfdb81b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:06:39.998325+00:00",
            "finish": "2023-11-27T11:06:39.998513+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T11:06:39.998380+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684209316498",
                      "last_triggered": "2023-10-20T14:01:40.005739+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off heater"
                    },
                    "last_changed": "2023-11-27T11:01:53.204149+00:00",
                    "last_updated": "2023-11-27T11:01:53.204149+00:00",
                    "context": {
                      "id": "01HG872PDMMA0GGHC97E9K2193",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.office_temperature_sensor_temperature",
                    "below": null,
                    "above": "input_number.thermostat_temperature",
                    "from_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "unavailable",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-27T11:02:07.704492+00:00",
                      "last_updated": "2023-11-27T11:02:07.704492+00:00",
                      "context": {
                        "id": "01HG8734JRS6K462N34GN0G6DB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "22.1",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-27T11:06:39.996403+00:00",
                      "last_updated": "2023-11-27T11:06:39.996403+00:00",
                      "context": {
                        "id": "01HG87BEFW55A10FBTVM4TZG1Y",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "numeric state of sensor.office_temperature_sensor_temperature"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:06:39.998419+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-27T11:06:39.998453+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684209316498",
            "alias": "SWITCH - Turn off heater",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0
                },
                "above": "input_number.thermostat_temperature"
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "above": "input_number.thermostat_temperature"
              }
            ],
            "action": [
              {
                "service": "switch.turn_off",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG87BEFY3QN0SJ3M13G01MEP",
            "parent_id": "01HG87BEFW55A10FBTVM4TZG1Y",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "60d8861f0122f6b43ec8635d4dfdb81b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:06:39.998325+00:00",
            "finish": "2023-11-27T11:06:39.998513+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "43be9ab44edf93d6e825a89ab2073de2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:07:02.932450+00:00",
            "finish": "2023-11-28T11:07:02.932569+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T11:07:02.932494+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_heater",
                    "state": "on",
                    "attributes": {
                      "id": "1684209316498",
                      "last_triggered": "2023-10-20T14:01:40.005739+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off heater"
                    },
                    "last_changed": "2023-11-28T11:01:51.127866+00:00",
                    "last_updated": "2023-11-28T11:01:51.127866+00:00",
                    "context": {
                      "id": "01HGASFBCQQ8PCN6MMVWNFMDFN",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.office_temperature_sensor_temperature",
                    "below": null,
                    "above": "input_number.thermostat_temperature",
                    "from_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "unavailable",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-28T11:02:05.599067+00:00",
                      "last_updated": "2023-11-28T11:02:05.599067+00:00",
                      "context": {
                        "id": "01HGASFSGZ19RD1SN6DM5NAWJF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.office_temperature_sensor_temperature",
                      "state": "22.3",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "\u00b0C",
                        "device_class": "temperature",
                        "friendly_name": "Office Temperature Sensor Temperature"
                      },
                      "last_changed": "2023-11-28T11:07:02.931075+00:00",
                      "last_updated": "2023-11-28T11:07:02.931075+00:00",
                      "context": {
                        "id": "01HGASRVWK26R6EPM2DJQK0YX9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "numeric state of sensor.office_temperature_sensor_temperature"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:07:02.932517+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-28T11:07:02.932537+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1684209316498",
            "alias": "SWITCH - Turn off heater",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 0
                },
                "above": "input_number.thermostat_temperature"
              },
              {
                "platform": "state",
                "entity_id": [
                  "input_number.thermostat_temperature"
                ]
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_boolean.heater_automation",
                "state": "on"
              },
              {
                "condition": "numeric_state",
                "entity_id": "sensor.office_temperature_sensor_temperature",
                "above": "input_number.thermostat_temperature"
              }
            ],
            "action": [
              {
                "service": "switch.turn_off",
                "data": {},
                "target": {
                  "entity_id": "switch.heater_socket"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGASRVWMD7BMSCPZE4652ADK",
            "parent_id": "01HGASRVWK26R6EPM2DJQK0YX9",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "43be9ab44edf93d6e825a89ab2073de2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:07:02.932450+00:00",
            "finish": "2023-11-28T11:07:02.932569+00:00"
          },
          "domain": "automation",
          "item_id": "1684209316498",
          "trigger": "numeric state of sensor.office_temperature_sensor_temperature"
        }
      }
    ],
    "automation.1684209621936": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1",
          "run_id": "1971aee7debc96596bc8d6a4022effa3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:55:00.334842+00:00",
            "finish": "2023-11-26T11:55:00.335083+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T11:55:00.334885+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-26T11:01:53.601039+00:00",
                    "last_updated": "2023-11-26T11:01:53.601039+00:00",
                    "context": {
                      "id": "01HG5MNZT1XQ7G4NQJDF76TTVH",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T08:55:00.334613-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T11:55:00.334923+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-26T11:55:00.334951+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.334967"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "sun",
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-26T11:55:00.335023+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:24:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.335041"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon"
                  ],
                  "now_weekday": "sun",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG5QQ7VEEX13YR1N55AKBX91",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1",
          "run_id": "1971aee7debc96596bc8d6a4022effa3",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:55:00.334842+00:00",
            "finish": "2023-11-26T11:55:00.335083+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "582ed3a9cd85d736b9817c717d849c11",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:25:00.138463+00:00",
            "finish": "2023-11-27T11:25:00.138805+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T11:25:00.138512+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-27T11:01:53.204375+00:00",
                    "last_updated": "2023-11-27T11:01:53.204375+00:00",
                    "context": {
                      "id": "01HG872PDM8HEAGBPMFQG40G2R",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T08:25:00.138202-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:25:00.138553+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T11:25:00.138582+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.138600"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T11:25:00.138647+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:24:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.138662"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-27T11:25:00.138716+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-27T11:25:00.138751+00:00",
                "result": {
                  "result": false,
                  "state": "Cool",
                  "wanted_state": "Heat"
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG88D0VA3B7HPM05J51SX3D0",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "582ed3a9cd85d736b9817c717d849c11",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:25:00.138463+00:00",
            "finish": "2023-11-27T11:25:00.138805+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "86c7f3ff08306d2bbd84ca73bad98f17",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:55:00.415943+00:00",
            "finish": "2023-11-27T11:55:00.416376+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T11:55:00.416003+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.872577+00:00",
                    "last_updated": "2023-11-27T11:37:20.872577+00:00",
                    "context": {
                      "id": "01HG893M783YTYMZDEBCW3ZK0G",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T08:55:00.415616-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:55:00.416051+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T11:55:00.416080+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.416096"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T11:55:00.416153+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:24:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.416198"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-27T11:55:00.416278+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-27T11:55:00.416316+00:00",
                "result": {
                  "result": false,
                  "state": "Cool",
                  "wanted_state": "Heat"
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG8A3YXZC37V0TT5HNQTVWTG",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "86c7f3ff08306d2bbd84ca73bad98f17",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:55:00.415943+00:00",
            "finish": "2023-11-27T11:55:00.416376+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1",
          "run_id": "6b5b9ce8308cc7e3a08b6bef4b0d92c8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:25:00.262038+00:00",
            "finish": "2023-11-28T11:25:00.262355+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T11:25:00.262124+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-28T11:01:51.127960+00:00",
                    "last_updated": "2023-11-28T11:01:51.127960+00:00",
                    "context": {
                      "id": "01HGASFBCQRSGA3TN666RR4BWJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T08:25:00.261777-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:25:00.262170+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T11:25:00.262199+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.262215"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-28T11:25:00.262263+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:24:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.262281"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon"
                  ],
                  "now_weekday": "tue",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGATSQZ55GGGGTBNT1K7HJD1",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1",
          "run_id": "6b5b9ce8308cc7e3a08b6bef4b0d92c8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:25:00.262038+00:00",
            "finish": "2023-11-28T11:25:00.262355+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "80c9b222e9cf42911485ca86dc73aa02",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:55:00.500170+00:00",
            "finish": "2023-11-28T11:55:00.500459+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T11:55:00.500211+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_on_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209621936",
                      "last_triggered": "2023-11-20T11:55:00.218981+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn on automation"
                    },
                    "last_changed": "2023-11-28T11:01:51.127960+00:00",
                    "last_updated": "2023-11-28T11:01:51.127960+00:00",
                    "context": {
                      "id": "01HGASFBCQRSGA3TN666RR4BWJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T08:55:00.499939-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:55:00.500251+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T11:55:00.500279+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:54:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:55:00.500295"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-28T11:55:00.500371+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-28T11:55:00.500407+00:00",
                "result": {
                  "result": false,
                  "state": "Cool",
                  "wanted_state": "Heat"
                }
              }
            ]
          },
          "config": {
            "id": "1684209621936",
            "alias": "HEATER - Turn on automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "08:55:00"
              },
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "08:54:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri"
                    ]
                  },
                  {
                    "condition": "time",
                    "after": "08:24:00",
                    "weekday": [
                      "mon"
                    ]
                  }
                ]
              },
              {
                "condition": "state",
                "entity_id": "input_select.fan_mode",
                "state": "Heat"
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGAWGP0MQ5N1XYPJDJG7SZN0",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/1/entity_id/0",
          "run_id": "80c9b222e9cf42911485ca86dc73aa02",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:55:00.500170+00:00",
            "finish": "2023-11-28T11:55:00.500459+00:00"
          },
          "domain": "automation",
          "item_id": "1684209621936",
          "trigger": "time"
        }
      }
    ],
    "automation.1672712190023": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "a75fea175464a059064dd4b9f90ab348",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:25:00.371056+00:00",
            "finish": "2023-11-26T11:25:00.371239+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T11:25:00.371120+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.pc_daily_christian_pc_wol",
                    "state": "on",
                    "attributes": {
                      "id": "1672712190023",
                      "last_triggered": "2023-11-24T11:25:00.070904+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "PC - Daily Christian-PC WoL"
                    },
                    "last_changed": "2023-11-26T11:01:53.596196+00:00",
                    "last_updated": "2023-11-26T11:01:53.596196+00:00",
                    "context": {
                      "id": "01HG5MNZSWF959RQ7TNECYZ705",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T08:25:00.370785-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T11:25:00.371165+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.371185"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "sun",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1672712190023",
            "alias": "PC - Daily Christian-PC WoL",
            "description": "Bussiness day WoL",
            "trigger": [
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri"
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "target": {
                  "entity_id": "switch.christian_pc_wol"
                },
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG5P0A2K5Z08GQTMR4XXAXQC",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "a75fea175464a059064dd4b9f90ab348",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T11:25:00.371056+00:00",
            "finish": "2023-11-26T11:25:00.371239+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "17dea253dea19d33fc8248aa537782c3",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T11:25:00.469684+00:00",
            "finish": "2023-11-27T11:25:01.478415+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T11:25:00.469730+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.pc_daily_christian_pc_wol",
                    "state": "on",
                    "attributes": {
                      "id": "1672712190023",
                      "last_triggered": "2023-11-24T11:25:00.070904+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "PC - Daily Christian-PC WoL"
                    },
                    "last_changed": "2023-11-27T11:01:53.199400+00:00",
                    "last_updated": "2023-11-27T11:01:53.199400+00:00",
                    "context": {
                      "id": "01HG872PDFNBAEJRMYPV7Z5Y3F",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T08:25:00.469447-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:25:00.469769+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.469788"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T11:25:00.470223+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG88D15NKAJ7NVMTNTTQ3Q4C",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.christian_pc_wol"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672712190023",
            "alias": "PC - Daily Christian-PC WoL",
            "description": "Bussiness day WoL",
            "trigger": [
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri"
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "target": {
                  "entity_id": "switch.christian_pc_wol"
                },
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG88D15NKAJ7NVMTNTTQ3Q4C",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "17dea253dea19d33fc8248aa537782c3",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T11:25:00.469684+00:00",
            "finish": "2023-11-27T11:25:01.478415+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "d0a3b2ddf7c0a98ea1c80e251f062b64",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T11:25:00.388830+00:00",
            "finish": "2023-11-28T11:25:01.397642+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T11:25:00.388871+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.pc_daily_christian_pc_wol",
                    "state": "on",
                    "attributes": {
                      "id": "1672712190023",
                      "last_triggered": "2023-11-27T11:25:00.469944+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "PC - Daily Christian-PC WoL"
                    },
                    "last_changed": "2023-11-28T11:01:51.125177+00:00",
                    "last_updated": "2023-11-28T11:01:51.125177+00:00",
                    "context": {
                      "id": "01HGASFBCN29T6KXGE0EXSKJWK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T08:25:00.388613-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:25:00.388908+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:25:00.388926"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "tue",
                  "result": true
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T11:25:00.390977+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGATSR34300HSQ06HQHD0ZZK",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.christian_pc_wol"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672712190023",
            "alias": "PC - Daily Christian-PC WoL",
            "description": "Bussiness day WoL",
            "trigger": [
              {
                "platform": "time",
                "at": "08:25:00"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "weekday": [
                  "mon",
                  "tue",
                  "wed",
                  "thu",
                  "fri"
                ]
              }
            ],
            "action": [
              {
                "service": "switch.turn_on",
                "target": {
                  "entity_id": "switch.christian_pc_wol"
                },
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGATSR34300HSQ06HQHD0ZZK",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "d0a3b2ddf7c0a98ea1c80e251f062b64",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T11:25:00.388830+00:00",
            "finish": "2023-11-28T11:25:01.397642+00:00"
          },
          "domain": "automation",
          "item_id": "1672712190023",
          "trigger": "time"
        }
      }
    ],
    "automation.1673477422415": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "39284f745cc2d63cd73a42f0d714d9b2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:25:30.958647+00:00",
            "finish": "2023-11-27T11:25:30.959075+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T11:25:30.958692+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-27T11:01:53.199573+00:00",
                    "last_updated": "2023-11-27T11:01:53.199573+00:00",
                    "context": {
                      "id": "01HG872PDF8CRR0XB4RH0MYC32",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "from_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "off",
                      "attributes": {
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-27T11:01:53.231337+00:00",
                      "last_updated": "2023-11-27T11:01:53.231337+00:00",
                      "context": {
                        "id": "01HG872PEFFP729W56DHPE828Y",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "on",
                      "attributes": {
                        "round_trip_time_avg": 0.593,
                        "round_trip_time_max": 0.593,
                        "round_trip_time_mdev": "",
                        "round_trip_time_min": 0.593,
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-27T11:25:30.957313+00:00",
                      "last_updated": "2023-11-27T11:25:30.957313+00:00",
                      "context": {
                        "id": "01HG88DYYDG07553R9YNMWP2NM",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.christian_pc"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T11:25:30.958730+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T11:25:30.958756+00:00",
                "result": {
                  "wanted_time_after": "2023-11-27T21:51:00.858560+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG88DYYERW7WFD42E74WF7S2",
            "parent_id": "01HG88DYYDG07553R9YNMWP2NM",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "39284f745cc2d63cd73a42f0d714d9b2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T11:25:30.958647+00:00",
            "finish": "2023-11-27T11:25:30.959075+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1/conditions/1/entity_id/0",
          "run_id": "8a0eebaae3e903cb76d0839286f6a34a",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T21:51:15.862817+00:00",
            "finish": "2023-11-27T21:51:15.863348+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "sunset",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T21:51:15.862854+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.868081+00:00",
                    "last_updated": "2023-11-27T11:37:20.868081+00:00",
                    "context": {
                      "id": "01HG893M741WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "sun",
                    "event": "sunset",
                    "offset": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "sunset"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T21:51:15.862889+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T21:51:15.862916+00:00",
                "result": {
                  "wanted_time_after": "2023-11-27T21:51:00.858560+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T21:51:15.863146+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-27T21:51:15.863173+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T21:51:15.863204+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/1/conditions/1": [
              {
                "path": "condition/0/conditions/1/conditions/1",
                "timestamp": "2023-11-27T21:51:15.863262+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/1/entity_id/0",
                "timestamp": "2023-11-27T21:51:15.863288+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9C7QWPMP9MSHW2PR6BD287",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1/conditions/1/entity_id/0",
          "run_id": "8a0eebaae3e903cb76d0839286f6a34a",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T21:51:15.862817+00:00",
            "finish": "2023-11-27T21:51:15.863348+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "sunset"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/2/entity_id/0",
          "run_id": "1f8c4c9b04c80dd202d3280b6b568833",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T22:09:56.099571+00:00",
            "finish": "2023-11-27T22:09:56.100147+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T22:09:56.099607+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.868081+00:00",
                    "last_updated": "2023-11-27T11:37:20.868081+00:00",
                    "context": {
                      "id": "01HG893M741WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "from_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "off",
                      "attributes": {
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-27T21:12:01.019261+00:00",
                      "last_updated": "2023-11-27T21:12:01.019261+00:00",
                      "context": {
                        "id": "01HG99ZW7VFYBDCCKA2H9WGECB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "on",
                      "attributes": {
                        "round_trip_time_avg": 0.791,
                        "round_trip_time_max": 1.697,
                        "round_trip_time_mdev": "",
                        "round_trip_time_min": 0.3,
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-27T22:09:56.099230+00:00",
                      "last_updated": "2023-11-27T22:09:56.099230+00:00",
                      "context": {
                        "id": "01HG9D9XW3GHPFQR4RTJGRGQ1N",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.christian_pc"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T22:09:56.099642+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T22:09:56.099667+00:00",
                "result": {
                  "wanted_time_after": "2023-11-27T21:51:00.858560+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T22:09:56.099949+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1/conditions/0": [
              {
                "path": "condition/0/conditions/1/conditions/0",
                "timestamp": "2023-11-27T22:09:56.099976+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T22:09:56.100005+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "condition/0/conditions/2": [
              {
                "path": "condition/0/conditions/2",
                "timestamp": "2023-11-27T22:09:56.100067+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/2/entity_id/0": [
              {
                "path": "condition/0/conditions/2/entity_id/0",
                "timestamp": "2023-11-27T22:09:56.100096+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9D9XW3Z4RQ035TW4F8M703",
            "parent_id": "01HG9D9XW3GHPFQR4RTJGRGQ1N",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/2/entity_id/0",
          "run_id": "1f8c4c9b04c80dd202d3280b6b568833",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T22:09:56.099571+00:00",
            "finish": "2023-11-27T22:09:56.100147+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "5825a350bc25a0b3ae7d7f308f2e08df",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:28:26.700442+00:00",
            "finish": "2023-11-28T03:28:26.700640+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T03:28:26.700463+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.868081+00:00",
                    "last_updated": "2023-11-27T11:37:20.868081+00:00",
                    "context": {
                      "id": "01HG893M741WZZQXN1629MZS8S",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "from_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "off",
                      "attributes": {
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-27T22:59:01.230996+00:00",
                      "last_updated": "2023-11-27T22:59:01.230996+00:00",
                      "context": {
                        "id": "01HG9G3SZECZBNRQ737T6YJP3Q",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "on",
                      "attributes": {
                        "round_trip_time_avg": 0.557,
                        "round_trip_time_max": 0.813,
                        "round_trip_time_mdev": "",
                        "round_trip_time_min": 0.249,
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-28T03:28:26.699246+00:00",
                      "last_updated": "2023-11-28T03:28:26.699246+00:00",
                      "context": {
                        "id": "01HG9ZH4JB87PGVSFG8J833F1E",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.christian_pc"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T03:28:26.700481+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T03:28:26.700495+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:51:45.252192+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9ZH4JCKEHZEPK1RH5R1V0W",
            "parent_id": "01HG9ZH4JB87PGVSFG8J833F1E",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "5825a350bc25a0b3ae7d7f308f2e08df",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:28:26.700442+00:00",
            "finish": "2023-11-28T03:28:26.700640+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "9850fb33340ab335de9d275010176402",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:25:30.196062+00:00",
            "finish": "2023-11-28T11:25:30.196491+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T11:25:30.196108+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1673477422415",
                      "last_triggered": "2023-10-27T02:06:30.965130+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on office light"
                    },
                    "last_changed": "2023-11-28T11:01:51.125299+00:00",
                    "last_updated": "2023-11-28T11:01:51.125299+00:00",
                    "context": {
                      "id": "01HGASFBCNGG46EC80FM5GVAZJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "binary_sensor.christian_pc",
                    "from_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "off",
                      "attributes": {
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-28T11:01:51.165164+00:00",
                      "last_updated": "2023-11-28T11:01:51.165164+00:00",
                      "context": {
                        "id": "01HGASFBDXPDKSMCT2EQCA6WQG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.christian_pc",
                      "state": "on",
                      "attributes": {
                        "round_trip_time_avg": 0.338,
                        "round_trip_time_max": 0.338,
                        "round_trip_time_mdev": "",
                        "round_trip_time_min": 0.338,
                        "device_class": "connectivity",
                        "friendly_name": "christian_pc"
                      },
                      "last_changed": "2023-11-28T11:25:30.193937+00:00",
                      "last_updated": "2023-11-28T11:25:30.193937+00:00",
                      "context": {
                        "id": "01HGATTN6HV8WA5M3PWNY0SWZD",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.christian_pc"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T11:25:30.196147+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T11:25:30.196174+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:51:45.252192+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673477422415",
            "alias": "LIGHT - Turn on office light",
            "description": "Automatically turn on office light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.christian_pc"
                ],
                "to": "on"
              },
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.cecilia_pc"
                ],
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "after_offset": "-15"
                  },
                  {
                    "condition": "or",
                    "conditions": [
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.christian_pc",
                        "state": "on"
                      },
                      {
                        "condition": "state",
                        "entity_id": "binary_sensor.cecilia_pc",
                        "state": "on"
                      }
                    ]
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_office",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGATTN6MEX7CB83BEPSWG9BS",
            "parent_id": "01HGATTN6HV8WA5M3PWNY0SWZD",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "9850fb33340ab335de9d275010176402",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T11:25:30.196062+00:00",
            "finish": "2023-11-28T11:25:30.196491+00:00"
          },
          "domain": "automation",
          "item_id": "1673477422415",
          "trigger": "state of binary_sensor.christian_pc"
        }
      }
    ],
    "automation.1673494217272": [
      {
        "extended_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "b8f5d4fa893d751642b330bd3f23a8bf",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T13:00:00.428742+00:00",
            "finish": "2023-11-26T16:01:08.774097+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T13:00:00.428787+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.advanced_medication_reminder",
                    "state": "on",
                    "attributes": {
                      "id": "1673494217272",
                      "last_triggered": "2023-11-25T13:00:00.318027+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Advanced medication reminder"
                    },
                    "last_changed": "2023-11-26T11:01:53.597040+00:00",
                    "last_updated": "2023-11-26T11:01:53.597040+00:00",
                    "context": {
                      "id": "01HG5MNZSXJKG1JDR5PN18C143",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T10:00:00.428482-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T13:00:00.429198+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG5VE8HC9QCX0GND1G3YWS9K",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-26T13:00:00.430128+00:00"
              }
            ],
            "action/1/repeat": [
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T13:00:00.430461+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": true,
                    "index": 1
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T13:30:08.898380+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 2
                  },
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T14:00:09.708559+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 3
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T14:30:10.471011+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 4
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T15:00:13.464860+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 5
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T15:30:14.237356+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 6
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T16:00:17.758678+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 7
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-26T16:01:08.773748+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 8
                  },
                  "wait": {
                    "remaining": 1749.314974762001,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-26T16:01:08.769218+00:00",
                        "context": {
                          "id": "01HG65SY51V29PP3PHCMA5K5CJ",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0": [
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T13:00:00.430499+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T13:30:08.898420+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T14:00:09.708576+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T14:30:10.471046+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T15:00:13.464895+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T15:30:14.237396+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T16:00:17.758717+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-26T16:01:08.773782+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0/entity_id/0": [
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T13:00:00.430528+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T13:30:08.898450+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T14:00:09.708589+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T14:30:10.471075+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T15:00:13.464922+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T15:30:14.237425+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T16:00:17.758756+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-26T16:01:08.773809+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ],
            "action/1/repeat/sequence/0": [
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T13:00:00.430872+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T13:30:08.898776+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T14:00:09.708754+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T14:30:10.471400+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T15:00:13.465303+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T15:30:14.237770+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-26T16:00:17.759108+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/1": [
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T13:00:00.431660+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T13:30:08.899204+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T14:00:09.708953+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T14:30:10.471796+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T15:00:13.465754+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T15:30:14.238184+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-26T16:00:17.759516+00:00",
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T13:00:00.431806+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T13:30:08.899271+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T14:00:09.708980+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T14:30:10.471853+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T15:00:13.465822+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T15:30:14.238241+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-26T16:00:17.759573+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T13:00:00.431838+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T13:30:08.899299+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T14:00:09.708993+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T14:30:10.471899+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T15:00:13.465850+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T15:30:14.238268+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-26T16:00:17.759601+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/2": [
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T13:00:00.432385+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T13:30:08.899777+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T14:00:09.709257+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T14:30:10.472378+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T15:00:13.466342+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T15:30:14.238749+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-26T16:00:17.760098+00:00"
              }
            ],
            "action/1/repeat/sequence/3": [
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T13:00:08.551720+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T13:30:09.315975+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T14:00:10.053381+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T14:30:10.908011+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T15:00:13.854401+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T15:30:14.811926+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-26T16:00:18.083702+00:00",
                "result": {
                  "wait": {
                    "remaining": 1749.314974762001,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-26T16:01:08.769218+00:00",
                        "context": {
                          "id": "01HG65SY51V29PP3PHCMA5K5CJ",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                }
              }
            ],
            "action/1/repeat/sequence/4": [
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T13:30:08.553761+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T14:00:09.319548+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T14:30:10.054355+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T15:00:10.909605+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T15:30:13.856219+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T16:00:14.814522+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-26T16:01:08.770565+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 1749.314974762001,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-26T16:01:08.769218+00:00",
                        "context": {
                          "id": "01HG65SY51V29PP3PHCMA5K5CJ",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T13:30:08.554161+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T14:00:09.319597+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T14:30:10.054438+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T15:00:10.909694+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T15:30:13.856305+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T16:00:14.814600+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-26T16:01:08.770662+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T13:30:08.554198+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T14:00:09.319613+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T14:30:10.054467+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T15:00:10.909724+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T15:30:13.856336+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T16:00:14.814630+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-26T16:01:08.770692+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T13:30:08.554406+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T14:00:09.319697+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T14:30:10.054620+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T15:00:10.909890+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T15:30:13.856502+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-26T16:00:14.814772+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T13:30:08.554440+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T14:00:09.319710+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T14:30:10.054648+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T15:00:10.909919+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T15:30:13.856531+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-26T16:00:14.814800+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2": [
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T13:30:08.554624+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T14:00:09.319765+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T14:30:10.054763+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T15:00:10.910041+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T15:30:13.856654+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-26T16:00:14.814916+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T13:30:08.554659+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T14:00:09.319777+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T14:30:10.054790+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T15:00:10.910068+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T15:30:13.856681+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-26T16:00:14.814943+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/default/0": [
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T13:30:08.555115+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T14:00:09.319998+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T14:30:10.055196+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T15:00:10.910487+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T15:30:13.857123+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-26T16:00:14.815348+00:00"
              }
            ],
            "action/1/repeat/sequence/4/default/1": [
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T13:30:08.896041+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T14:00:09.708071+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T14:30:10.470174+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T15:00:13.463902+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T15:30:14.236051+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-26T16:00:17.757511+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/0",
                "timestamp": "2023-11-26T16:01:08.771522+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/1",
                "timestamp": "2023-11-26T16:01:08.772974+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Medication taken",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "time",
                "at": "10:00:00"
              }
            ],
            "mode": "restart",
            "action": [
              {
                "service": "input_boolean.turn_off",
                "target": {
                  "entity_id": "input_boolean.medication"
                }
              },
              {
                "alias": "Notify until the medication has been take",
                "repeat": {
                  "while": [
                    {
                      "condition": "state",
                      "entity_id": "input_boolean.medication",
                      "state": "off"
                    }
                  ],
                  "sequence": [
                    {
                      "service": "logbook.log",
                      "data": {
                        "name": "Medication Reminder",
                        "message": "Reminder sent",
                        "entity_id": "input_boolean.medication"
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ true }}",
                          "sequence": []
                        }
                      ]
                    },
                    {
                      "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                      "domain": "mobile_app",
                      "type": "notify",
                      "title": "Medication Reminder",
                      "message": "It's time to take your medication",
                      "data": {
                        "actions": [
                          {
                            "title": "Taken",
                            "action": "taken"
                          },
                          {
                            "title": "Ask later",
                            "action": "later"
                          },
                          {
                            "title": "Skip",
                            "action": "skip"
                          }
                        ],
                        "tag": "input_boolean.medication"
                      }
                    },
                    {
                      "wait_for_trigger": {
                        "platform": "event",
                        "event_type": "mobile_app_notification_action",
                        "event_data": {
                          "tag": "input_boolean.medication"
                        }
                      },
                      "timeout": {
                        "minutes": 30
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'taken' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Medication taken",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'later' }}",
                          "sequence": [
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Postpone reminder",
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "delay": {
                                "minutes": 30
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'skip' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Reminder skipped",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        }
                      ],
                      "default": [
                        {
                          "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                          "domain": "mobile_app",
                          "type": "notify",
                          "message": "clear_notification",
                          "data": {
                            "tag": "input_boolean.medication"
                          }
                        },
                        {
                          "service": "logbook.log",
                          "data": {
                            "name": "Medication Reminder",
                            "message": "No answer time out",
                            "entity_id": "input_boolean.medication"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": "",
            "use_blueprint": {
              "path": "Aohzan/medication_reminder_android.yaml",
              "input": {
                "reminder_time": "10:00:00",
                "notify_device": "c64d919497fe1f5e4c511f1d631e5f77",
                "notification_title": "Medication Reminder",
                "input_boolean": "input_boolean.medication"
              }
            }
          },
          "context": {
            "id": "01HG5VE8HC9QCX0GND1G3YWS9K",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "b8f5d4fa893d751642b330bd3f23a8bf",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T13:00:00.428742+00:00",
            "finish": "2023-11-26T16:01:08.774097+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "2e847014359a406ae709b68e5682eb15",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T13:00:00.443486+00:00",
            "finish": "2023-11-27T16:32:42.547545+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T13:00:00.443518+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.advanced_medication_reminder",
                    "state": "on",
                    "attributes": {
                      "id": "1673494217272",
                      "last_triggered": "2023-11-26T13:00:00.428916+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Advanced medication reminder"
                    },
                    "last_changed": "2023-11-27T11:37:20.868614+00:00",
                    "last_updated": "2023-11-27T11:37:20.868614+00:00",
                    "context": {
                      "id": "01HG893M7429T6KXGE0EXSKJWK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T10:00:00.443263-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T13:00:00.443890+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG8DTZHVPGB7FSH4B2Y4NTQW",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T13:00:00.444827+00:00"
              }
            ],
            "action/1/repeat": [
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T13:00:00.445150+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": true,
                    "index": 1
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T13:30:04.096468+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 2
                  },
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T14:00:04.981386+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 3
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T14:30:05.880820+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 4
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T15:00:06.633005+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 5
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T15:30:07.379703+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 6
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T16:00:08.219573+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 7
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T16:30:09.951661+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 8
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-27T16:32:42.547202+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 9
                  },
                  "wait": {
                    "remaining": 1647.8184357309983,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-27T16:32:42.543699+00:00",
                        "context": {
                          "id": "01HG8T0EHF8K7EZEMKV0G2H9XH",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0": [
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T13:00:00.445189+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T13:30:04.096502+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T14:00:04.981402+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T14:30:05.880860+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T15:00:06.633039+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T15:30:07.379743+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T16:00:08.219614+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T16:30:09.951701+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-27T16:32:42.547233+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0/entity_id/0": [
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T13:00:00.445217+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T13:30:04.096528+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T14:00:04.981414+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T14:30:05.880873+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T15:00:06.633066+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T15:30:07.379772+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T16:00:08.219642+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T16:30:09.951730+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-27T16:32:42.547259+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ],
            "action/1/repeat/sequence/0": [
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T13:00:00.445534+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T13:30:04.096849+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T14:00:04.981571+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T14:30:05.881193+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T15:00:06.633407+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T15:30:07.380103+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T16:00:08.219977+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-27T16:30:09.952044+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/1": [
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T13:00:00.446613+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T13:30:04.097246+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T14:00:04.981751+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T14:30:05.881582+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T15:00:06.633835+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T15:30:07.380539+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T16:00:08.220414+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-27T16:30:09.952482+00:00",
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T13:00:00.446780+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T13:30:04.097313+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T14:00:04.981777+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T14:30:05.881637+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T15:00:06.633890+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T15:30:07.380594+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T16:00:08.220465+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-27T16:30:09.952538+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T13:00:00.446817+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T13:30:04.097342+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T14:00:04.981789+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T14:30:05.881664+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T15:00:06.633917+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T15:30:07.380620+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:00:08.220496+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:30:09.952565+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/2": [
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T13:00:00.447394+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T13:30:04.097817+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T14:00:04.982010+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T14:30:05.882127+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T15:00:06.634452+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T15:30:07.381102+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T16:00:08.220985+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-27T16:30:09.953039+00:00"
              }
            ],
            "action/1/repeat/sequence/3": [
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T13:00:03.802783+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T13:30:04.423875+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T14:00:05.465735+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T14:30:06.207735+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T15:00:07.014714+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T15:30:07.748831+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T16:00:09.591462+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-27T16:30:10.361612+00:00",
                "result": {
                  "wait": {
                    "remaining": 1647.8184357309983,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-27T16:32:42.543699+00:00",
                        "context": {
                          "id": "01HG8T0EHF8K7EZEMKV0G2H9XH",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                }
              }
            ],
            "action/1/repeat/sequence/4": [
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T13:30:03.803828+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T14:00:04.425382+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T14:30:05.466941+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T15:00:06.208865+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T15:30:07.016320+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T16:00:07.750404+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T16:30:09.593598+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-27T16:32:42.545094+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 1647.8184357309983,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-27T16:32:42.543699+00:00",
                        "context": {
                          "id": "01HG8T0EHF8K7EZEMKV0G2H9XH",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T13:30:03.804224+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T14:00:04.425439+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T14:30:05.467022+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T15:00:06.208922+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T15:30:07.016399+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T16:00:07.750500+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T16:30:09.593676+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-27T16:32:42.545169+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T13:30:03.804262+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T14:00:04.425453+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T14:30:05.467051+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T15:00:06.208936+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T15:30:07.016428+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:00:07.750530+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:30:09.593704+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-27T16:32:42.545198+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T13:30:03.804447+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T14:00:04.425547+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T14:30:05.467204+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T15:00:06.209027+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T15:30:07.016584+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T16:00:07.750697+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-27T16:30:09.593856+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T13:30:03.804479+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T14:00:04.425560+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T14:30:05.467232+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T15:00:06.209040+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T15:30:07.016613+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T16:00:07.750726+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-27T16:30:09.593884+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2": [
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T13:30:03.804628+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T14:00:04.425614+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T14:30:05.467345+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T15:00:06.209093+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T15:30:07.016732+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T16:00:07.750845+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-27T16:30:09.593995+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T13:30:03.804664+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T14:00:04.425626+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T14:30:05.467370+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T15:00:06.209105+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T15:30:07.016758+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T16:00:07.750872+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-27T16:30:09.594022+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/default/0": [
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T13:30:03.805120+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T14:00:04.425853+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T14:30:05.467774+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T15:00:06.209318+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T15:30:07.017159+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T16:00:07.751304+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-27T16:30:09.594428+00:00"
              }
            ],
            "action/1/repeat/sequence/4/default/1": [
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T13:30:04.095626+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T14:00:04.980983+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T14:30:05.879981+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T15:00:06.632024+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T15:30:07.378699+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T16:00:08.218194+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-27T16:30:09.950406+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/0",
                "timestamp": "2023-11-27T16:32:42.545680+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/1",
                "timestamp": "2023-11-27T16:32:42.546473+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Medication taken",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "time",
                "at": "10:00:00"
              }
            ],
            "mode": "restart",
            "action": [
              {
                "service": "input_boolean.turn_off",
                "target": {
                  "entity_id": "input_boolean.medication"
                }
              },
              {
                "alias": "Notify until the medication has been take",
                "repeat": {
                  "while": [
                    {
                      "condition": "state",
                      "entity_id": "input_boolean.medication",
                      "state": "off"
                    }
                  ],
                  "sequence": [
                    {
                      "service": "logbook.log",
                      "data": {
                        "name": "Medication Reminder",
                        "message": "Reminder sent",
                        "entity_id": "input_boolean.medication"
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ true }}",
                          "sequence": []
                        }
                      ]
                    },
                    {
                      "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                      "domain": "mobile_app",
                      "type": "notify",
                      "title": "Medication Reminder",
                      "message": "It's time to take your medication",
                      "data": {
                        "actions": [
                          {
                            "title": "Taken",
                            "action": "taken"
                          },
                          {
                            "title": "Ask later",
                            "action": "later"
                          },
                          {
                            "title": "Skip",
                            "action": "skip"
                          }
                        ],
                        "tag": "input_boolean.medication"
                      }
                    },
                    {
                      "wait_for_trigger": {
                        "platform": "event",
                        "event_type": "mobile_app_notification_action",
                        "event_data": {
                          "tag": "input_boolean.medication"
                        }
                      },
                      "timeout": {
                        "minutes": 30
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'taken' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Medication taken",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'later' }}",
                          "sequence": [
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Postpone reminder",
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "delay": {
                                "minutes": 30
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'skip' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Reminder skipped",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        }
                      ],
                      "default": [
                        {
                          "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                          "domain": "mobile_app",
                          "type": "notify",
                          "message": "clear_notification",
                          "data": {
                            "tag": "input_boolean.medication"
                          }
                        },
                        {
                          "service": "logbook.log",
                          "data": {
                            "name": "Medication Reminder",
                            "message": "No answer time out",
                            "entity_id": "input_boolean.medication"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": "",
            "use_blueprint": {
              "path": "Aohzan/medication_reminder_android.yaml",
              "input": {
                "reminder_time": "10:00:00",
                "notify_device": "c64d919497fe1f5e4c511f1d631e5f77",
                "notification_title": "Medication Reminder",
                "input_boolean": "input_boolean.medication"
              }
            }
          },
          "context": {
            "id": "01HG8DTZHVPGB7FSH4B2Y4NTQW",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "2e847014359a406ae709b68e5682eb15",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T13:00:00.443486+00:00",
            "finish": "2023-11-27T16:32:42.547545+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "576baf71ee9c0abcfad1715de136b63a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T13:00:00.076631+00:00",
            "finish": "2023-11-28T15:04:26.166607+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T13:00:00.076680+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.advanced_medication_reminder",
                    "state": "on",
                    "attributes": {
                      "id": "1673494217272",
                      "last_triggered": "2023-11-27T13:00:00.443656+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "Advanced medication reminder"
                    },
                    "last_changed": "2023-11-28T11:01:51.125623+00:00",
                    "last_updated": "2023-11-28T11:01:51.125623+00:00",
                    "context": {
                      "id": "01HGASFBCN8RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T10:00:00.076329-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T13:00:00.077131+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGB07P6CH2352V1ZS2XEYGE8",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T13:00:00.078088+00:00"
              }
            ],
            "action/1/repeat": [
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T13:00:00.078456+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": true,
                    "index": 1
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T13:30:00.890288+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 2
                  },
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T14:00:05.187013+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 3
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T14:30:07.286696+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 4
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T15:00:09.145287+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 5
                  }
                },
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat",
                "timestamp": "2023-11-28T15:04:26.162931+00:00",
                "changed_variables": {
                  "repeat": {
                    "first": false,
                    "index": 6
                  },
                  "wait": {
                    "remaining": 1544.6887354770006,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-28T15:04:26.155819+00:00",
                        "context": {
                          "id": "01HGB7BH9BYRK9V7HMSEWPWKND",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0": [
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T13:00:00.078494+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T13:30:00.890329+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T14:00:05.187030+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T14:30:07.286737+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T15:00:09.145324+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/while/0",
                "timestamp": "2023-11-28T15:04:26.162965+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/while/0/entity_id/0": [
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T13:00:00.078527+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T13:30:00.890360+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T14:00:05.187044+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T14:30:07.286767+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T15:00:09.145354+00:00",
                "result": {
                  "result": true,
                  "state": "off",
                  "wanted_state": "off"
                }
              },
              {
                "path": "action/1/repeat/while/0/entity_id/0",
                "timestamp": "2023-11-28T15:04:26.162992+00:00",
                "result": {
                  "result": false,
                  "state": "on",
                  "wanted_state": "off"
                }
              }
            ],
            "action/1/repeat/sequence/0": [
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T13:00:00.078878+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T13:30:00.890701+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T14:00:05.187211+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T14:30:07.287092+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/0",
                "timestamp": "2023-11-28T15:00:09.145679+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Reminder sent",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/1": [
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T13:00:00.079331+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T13:30:00.891115+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T14:00:05.187397+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T14:30:07.287499+00:00",
                "result": {
                  "choice": 0
                }
              },
              {
                "path": "action/1/repeat/sequence/1",
                "timestamp": "2023-11-28T15:00:09.146816+00:00",
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T13:00:00.079472+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T13:30:00.891202+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T14:00:05.187424+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T14:30:07.287555+00:00",
                "result": {
                  "result": true
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0",
                "timestamp": "2023-11-28T15:00:09.146887+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/1/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T13:00:00.079507+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T13:30:00.891230+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T14:00:05.187437+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T14:30:07.287583+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T15:00:09.146917+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/2": [
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T13:00:00.080094+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T13:30:00.891725+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T14:00:05.187666+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T14:30:07.288055+00:00"
              },
              {
                "path": "action/1/repeat/sequence/2",
                "timestamp": "2023-11-28T15:00:09.147400+00:00"
              }
            ],
            "action/1/repeat/sequence/3": [
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T13:00:00.523630+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T13:30:01.246615+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T14:00:06.972834+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T14:30:07.699856+00:00",
                "result": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                }
              },
              {
                "path": "action/1/repeat/sequence/3",
                "timestamp": "2023-11-28T15:00:10.843977+00:00",
                "result": {
                  "wait": {
                    "remaining": 1544.6887354770006,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-28T15:04:26.155819+00:00",
                        "context": {
                          "id": "01HGB7BH9BYRK9V7HMSEWPWKND",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                }
              }
            ],
            "action/1/repeat/sequence/4": [
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T13:30:00.524976+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 0.0,
                    "trigger": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T14:00:01.247994+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T14:30:06.973996+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T15:00:07.701036+00:00",
                "result": {
                  "choice": "default"
                }
              },
              {
                "path": "action/1/repeat/sequence/4",
                "timestamp": "2023-11-28T15:04:26.156408+00:00",
                "changed_variables": {
                  "wait": {
                    "remaining": 1544.6887354770006,
                    "trigger": {
                      "id": "0",
                      "idx": "0",
                      "alias": null,
                      "platform": "event",
                      "event": {
                        "event_type": "mobile_app_notification_action",
                        "data": {
                          "action_2_title": "Ask later",
                          "action_3_title": "Skip",
                          "tag": "input_boolean.medication",
                          "title": "Medication Reminder",
                          "webhook_id": "17e1399e8bf1860d48f75d6a2b7d5a20f3a82ca4b34c9475cebe1c5f1d1bd315",
                          "message": "It's time to take your medication",
                          "action_1_title": "Taken",
                          "action_1_key": "taken",
                          "action_2_key": "later",
                          "action_3_key": "skip",
                          "server_id": "1",
                          "action": "taken",
                          "device_id": "81084dbff6010930"
                        },
                        "origin": "REMOTE",
                        "time_fired": "2023-11-28T15:04:26.155819+00:00",
                        "context": {
                          "id": "01HGB7BH9BYRK9V7HMSEWPWKND",
                          "parent_id": null,
                          "user_id": "2eb48afb57034b2eb5b96583279df927"
                        }
                      },
                      "description": "event 'mobile_app_notification_action'"
                    }
                  }
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T13:30:00.525391+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T14:00:01.248087+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T14:30:06.974087+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T15:00:07.701164+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0",
                "timestamp": "2023-11-28T15:04:26.156479+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T13:30:00.525447+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T14:00:01.248117+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T14:30:06.974118+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T15:00:07.701197+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/0/conditions/0",
                "timestamp": "2023-11-28T15:04:26.156509+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-28T13:30:00.525651+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-28T14:00:01.248280+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-28T14:30:06.974284+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1",
                "timestamp": "2023-11-28T15:00:07.701361+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/1/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-28T13:30:00.525684+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-28T14:00:01.248308+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-28T14:30:06.974313+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/1/conditions/0",
                "timestamp": "2023-11-28T15:00:07.701391+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2": [
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-28T13:30:00.525841+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-28T14:00:01.248427+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-28T14:30:06.974429+00:00",
                "result": {
                  "result": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2",
                "timestamp": "2023-11-28T15:00:07.701511+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/2/conditions/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-28T13:30:00.525881+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-28T14:00:01.248455+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-28T14:30:06.974458+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              },
              {
                "path": "action/1/repeat/sequence/4/choose/2/conditions/0",
                "timestamp": "2023-11-28T15:00:07.701541+00:00",
                "result": {
                  "result": false,
                  "entities": []
                }
              }
            ],
            "action/1/repeat/sequence/4/default/0": [
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-28T13:30:00.526364+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-28T14:00:01.248888+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-28T14:30:06.974905+00:00"
              },
              {
                "path": "action/1/repeat/sequence/4/default/0",
                "timestamp": "2023-11-28T15:00:07.701970+00:00"
              }
            ],
            "action/1/repeat/sequence/4/default/1": [
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-28T13:30:00.887637+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-28T14:00:05.186588+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-28T14:30:07.285437+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              },
              {
                "path": "action/1/repeat/sequence/4/default/1",
                "timestamp": "2023-11-28T15:00:09.144385+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "No answer time out",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/0": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/0",
                "timestamp": "2023-11-28T15:04:26.157399+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.medication"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1/repeat/sequence/4/choose/0/sequence/1": [
              {
                "path": "action/1/repeat/sequence/4/choose/0/sequence/1",
                "timestamp": "2023-11-28T15:04:26.162165+00:00",
                "result": {
                  "params": {
                    "domain": "logbook",
                    "service": "log",
                    "service_data": {
                      "name": "Medication Reminder",
                      "message": "Medication taken",
                      "entity_id": "input_boolean.medication"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "trigger": [
              {
                "platform": "time",
                "at": "10:00:00"
              }
            ],
            "mode": "restart",
            "action": [
              {
                "service": "input_boolean.turn_off",
                "target": {
                  "entity_id": "input_boolean.medication"
                }
              },
              {
                "alias": "Notify until the medication has been take",
                "repeat": {
                  "while": [
                    {
                      "condition": "state",
                      "entity_id": "input_boolean.medication",
                      "state": "off"
                    }
                  ],
                  "sequence": [
                    {
                      "service": "logbook.log",
                      "data": {
                        "name": "Medication Reminder",
                        "message": "Reminder sent",
                        "entity_id": "input_boolean.medication"
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ true }}",
                          "sequence": []
                        }
                      ]
                    },
                    {
                      "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                      "domain": "mobile_app",
                      "type": "notify",
                      "title": "Medication Reminder",
                      "message": "It's time to take your medication",
                      "data": {
                        "actions": [
                          {
                            "title": "Taken",
                            "action": "taken"
                          },
                          {
                            "title": "Ask later",
                            "action": "later"
                          },
                          {
                            "title": "Skip",
                            "action": "skip"
                          }
                        ],
                        "tag": "input_boolean.medication"
                      }
                    },
                    {
                      "wait_for_trigger": {
                        "platform": "event",
                        "event_type": "mobile_app_notification_action",
                        "event_data": {
                          "tag": "input_boolean.medication"
                        }
                      },
                      "timeout": {
                        "minutes": 30
                      }
                    },
                    {
                      "choose": [
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'taken' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Medication taken",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'later' }}",
                          "sequence": [
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Postpone reminder",
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "delay": {
                                "minutes": 30
                              }
                            }
                          ]
                        },
                        {
                          "conditions": "{{ wait.trigger and wait.trigger.event.data.action == 'skip' }}",
                          "sequence": [
                            {
                              "service": "input_boolean.turn_on",
                              "target": {
                                "entity_id": "input_boolean.medication"
                              }
                            },
                            {
                              "service": "logbook.log",
                              "data": {
                                "name": "Medication Reminder",
                                "message": "Reminder skipped",
                                "entity_id": "input_boolean.medication"
                              }
                            }
                          ]
                        }
                      ],
                      "default": [
                        {
                          "device_id": "c64d919497fe1f5e4c511f1d631e5f77",
                          "domain": "mobile_app",
                          "type": "notify",
                          "message": "clear_notification",
                          "data": {
                            "tag": "input_boolean.medication"
                          }
                        },
                        {
                          "service": "logbook.log",
                          "data": {
                            "name": "Medication Reminder",
                            "message": "No answer time out",
                            "entity_id": "input_boolean.medication"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1673494217272",
            "alias": "Advanced medication reminder",
            "description": "",
            "use_blueprint": {
              "path": "Aohzan/medication_reminder_android.yaml",
              "input": {
                "reminder_time": "10:00:00",
                "notify_device": "c64d919497fe1f5e4c511f1d631e5f77",
                "notification_title": "Medication Reminder",
                "input_boolean": "input_boolean.medication"
              }
            }
          },
          "context": {
            "id": "01HGB07P6CH2352V1ZS2XEYGE8",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/repeat/sequence/4/choose/0/sequence/1",
          "run_id": "576baf71ee9c0abcfad1715de136b63a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T13:00:00.076631+00:00",
            "finish": "2023-11-28T15:04:26.166607+00:00"
          },
          "domain": "automation",
          "item_id": "1673494217272",
          "trigger": "time"
        }
      }
    ],
    "automation.1673492717992": [
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "d02a34603ef1a8a9f5899d53c6f560c0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:00:00.246164+00:00",
            "finish": "2023-11-27T23:00:00.246328+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:00:00.246232+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-27T21:00:00.247097+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-27T11:37:20.868276+00:00",
                    "last_updated": "2023-11-27T21:00:00.248836+00:00",
                    "context": {
                      "id": "01HG999WBPB59VNHK1A8YKJW44",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-27T20:00:00.245923-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:00:00.246269+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "20:00:00.246286"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9G5KKPVFG9P9XSEGJMVAD3",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "d02a34603ef1a8a9f5899d53c6f560c0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:00:00.246164+00:00",
            "finish": "2023-11-27T23:00:00.246328+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "119bc3773ccaad4f8346bc1b744137a9",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T01:00:00.245176+00:00",
            "finish": "2023-11-28T01:00:00.245437+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T01:00:00.245283+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-27T21:00:00.247097+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-27T11:37:20.868276+00:00",
                    "last_updated": "2023-11-27T21:00:00.248836+00:00",
                    "context": {
                      "id": "01HG999WBPB59VNHK1A8YKJW44",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-27T22:00:00.244823-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T01:00:00.245346+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00.245375"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9Q1AVN436PQE0WV41W88DH",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "119bc3773ccaad4f8346bc1b744137a9",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T01:00:00.245176+00:00",
            "finish": "2023-11-28T01:00:00.245437+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0",
          "run_id": "50f029c9c0ec299e26ee1a77e70ba50d",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:00:00.245083+00:00",
            "finish": "2023-11-28T03:00:00.245213+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T03:00:00.245137+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-27T21:00:00.247097+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-27T11:37:20.868276+00:00",
                    "last_updated": "2023-11-27T21:00:00.248836+00:00",
                    "context": {
                      "id": "01HG999WBPB59VNHK1A8YKJW44",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T00:00:00.244866-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T03:00:00.245168+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00.245181"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9XX23NS2HPS1JJ7H9MC9F8",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0",
          "run_id": "50f029c9c0ec299e26ee1a77e70ba50d",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:00:00.245083+00:00",
            "finish": "2023-11-28T03:00:00.245213+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/else/0",
          "run_id": "431d36df44eb83e1b5c17a33a5129e9b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T13:00:00.322923+00:00",
            "finish": "2023-11-28T13:00:00.326858+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T13:00:00.322971+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-27T21:00:00.247097+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-28T11:01:51.125413+00:00",
                    "last_updated": "2023-11-28T11:01:51.125413+00:00",
                    "context": {
                      "id": "01HGASFBCN4H2GT1T1PERTZB8P",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T10:00:00.322661-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T13:00:00.323009+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "10:00:00.323028"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-28T13:00:00.323076+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-28T13:00:00.323112+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T13:00:00.323518+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGB07PE23MD42CWXHC2K58N1",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-28T13:00:00.323740+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-28T13:00:00.324289+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "weather.home",
                    "sensor.office_temperature_sensor_humidity"
                  ]
                }
              }
            ],
            "action/0/else/0": [
              {
                "path": "action/0/else/0",
                "timestamp": "2023-11-28T13:00:00.324818+00:00",
                "result": {
                  "params": {
                    "domain": "input_select",
                    "service": "select_option",
                    "service_data": {
                      "option": "Inside",
                      "entity_id": [
                        "input_select.best_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_select.best_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGB07PE23MD42CWXHC2K58N1",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/else/0",
          "run_id": "431d36df44eb83e1b5c17a33a5129e9b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T13:00:00.322923+00:00",
            "finish": "2023-11-28T13:00:00.326858+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/else/0",
          "run_id": "0f555036dfc6f6ff2d97e80fbdf237d4",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T15:00:00.323134+00:00",
            "finish": "2023-11-28T15:00:00.328661+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T15:00:00.323203+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_determine_best_humidity",
                    "state": "on",
                    "attributes": {
                      "id": "1673492717992",
                      "last_triggered": "2023-11-28T13:00:00.323265+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Determine best humidity"
                    },
                    "last_changed": "2023-11-28T11:01:51.125413+00:00",
                    "last_updated": "2023-11-28T13:00:00.326543+00:00",
                    "context": {
                      "id": "01HGB07PE23MD42CWXHC2K58N1",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time_pattern",
                    "now": "2023-11-28T12:00:00.322785-03:00",
                    "description": "time pattern"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T15:00:00.323243+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "12:00:00.323263"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-28T15:00:00.323317+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/entity_id/0": [
              {
                "path": "condition/1/entity_id/0",
                "timestamp": "2023-11-28T15:00:00.323351+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T15:00:00.324716+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGB73DP32CWN2YP6J4DATY3A",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-28T15:00:00.324821+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-28T15:00:00.324874+00:00",
                "result": {
                  "result": false,
                  "entities": [
                    "weather.home",
                    "sensor.office_temperature_sensor_humidity"
                  ]
                }
              }
            ],
            "action/0/else/0": [
              {
                "path": "action/0/else/0",
                "timestamp": "2023-11-28T15:00:00.325568+00:00",
                "result": {
                  "params": {
                    "domain": "input_select",
                    "service": "select_option",
                    "service_data": {
                      "option": "Inside",
                      "entity_id": [
                        "input_select.best_humidity"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_select.best_humidity"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673492717992",
            "alias": "WEATHER - Determine best humidity",
            "description": "",
            "trigger": [
              {
                "platform": "time_pattern",
                "hours": "/2"
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "state",
                "entity_id": "group.residents",
                "state": "home"
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "template",
                    "value_template": "{{ states('sensor.office_temperature_sensor_humidity') | float >\n   state_attr('weather.home', 'humidity') | float }}"
                  }
                ],
                "then": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Outside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_select.select_option",
                    "data": {
                      "option": "Inside"
                    },
                    "target": {
                      "entity_id": "input_select.best_humidity"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGB73DP32CWN2YP6J4DATY3A",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/else/0",
          "run_id": "0f555036dfc6f6ff2d97e80fbdf237d4",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T15:00:00.323134+00:00",
            "finish": "2023-11-28T15:00:00.328661+00:00"
          },
          "domain": "automation",
          "item_id": "1673492717992",
          "trigger": "time pattern"
        }
      }
    ],
    "automation.1674225267956": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "c31e2a8ef5fabaac6aa431039c0886ba",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T12:35:38.562734+00:00",
            "finish": "2023-11-27T12:35:38.563152+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T12:35:38.562792+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.869132+00:00",
                    "last_updated": "2023-11-27T11:37:20.869132+00:00",
                    "context": {
                      "id": "01HG893M75X0EMASCYWG9XHYBV",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "remote.living_room_tv",
                    "from_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "off",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-27T11:37:13.160012+00:00",
                      "last_updated": "2023-11-27T12:35:37.103583+00:00",
                      "context": {
                        "id": "01HG8CEAGFCX39HE4P8X3WFC99",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "on",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-27T12:35:38.562410+00:00",
                      "last_updated": "2023-11-27T12:35:38.562410+00:00",
                      "context": {
                        "id": "01HG8CEBY2KBE5CMPV2MP4D8SM",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of remote.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T12:35:38.562828+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T12:35:38.562852+00:00",
                "result": {
                  "wanted_time_after": "2023-11-27T21:51:15.858560+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG8CEBY2DGZMHHY92TFBDHR9",
            "parent_id": "01HG8CEBY2KBE5CMPV2MP4D8SM",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "c31e2a8ef5fabaac6aa431039c0886ba",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T12:35:38.562734+00:00",
            "finish": "2023-11-27T12:35:38.563152+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "c5691afe2a4a0a5fe13307f717220f04",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T15:58:29.890522+00:00",
            "finish": "2023-11-27T15:58:29.890952+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T15:58:29.890576+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.869132+00:00",
                    "last_updated": "2023-11-27T11:37:20.869132+00:00",
                    "context": {
                      "id": "01HG893M75X0EMASCYWG9XHYBV",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "remote.living_room_tv",
                    "from_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "off",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-27T13:28:40.774845+00:00",
                      "last_updated": "2023-11-27T15:58:28.521509+00:00",
                      "context": {
                        "id": "01HG8R1RN9HHV3KRXSPSMKXHWD",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "on",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-27T15:58:29.890218+00:00",
                      "last_updated": "2023-11-27T15:58:29.890218+00:00",
                      "context": {
                        "id": "01HG8R1T02DRZ1557VGK02M6EP",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of remote.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T15:58:29.890613+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T15:58:29.890654+00:00",
                "result": {
                  "wanted_time_after": "2023-11-27T21:51:15.858560+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG8R1T028QNFJDKB116PZFTG",
            "parent_id": "01HG8R1T02DRZ1557VGK02M6EP",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "c5691afe2a4a0a5fe13307f717220f04",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T15:58:29.890522+00:00",
            "finish": "2023-11-27T15:58:29.890952+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1/entity_id/0",
          "run_id": "ebee3ab91598889e24483c7118da2d13",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T21:51:15.863392+00:00",
            "finish": "2023-11-27T21:51:15.863782+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "sunset",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T21:51:15.863433+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.869132+00:00",
                    "last_updated": "2023-11-27T11:37:20.869132+00:00",
                    "context": {
                      "id": "01HG893M75X0EMASCYWG9XHYBV",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "sun",
                    "event": "sunset",
                    "offset": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 0.0
                    },
                    "description": "sunset"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T21:51:15.863459+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T21:51:15.863483+00:00",
                "result": {
                  "wanted_time_after": "2023-11-27T21:51:15.858560+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T21:51:15.863702+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2023-11-27T21:51:15.863731+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9C7QWQTE3PMVTJCJRHF3GB",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1/entity_id/0",
          "run_id": "ebee3ab91598889e24483c7118da2d13",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T21:51:15.863392+00:00",
            "finish": "2023-11-27T21:51:15.863782+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "sunset"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/1/entity_id/0",
          "run_id": "c634f9936adbcc42c92aee8b499b0431",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:16:06.224485+00:00",
            "finish": "2023-11-27T23:16:06.224981+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T23:16:06.224540+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.869132+00:00",
                    "last_updated": "2023-11-27T11:37:20.869132+00:00",
                    "context": {
                      "id": "01HG893M75X0EMASCYWG9XHYBV",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "remote.living_room_tv",
                    "from_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "off",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-27T16:55:26.622632+00:00",
                      "last_updated": "2023-11-27T23:16:04.408795+00:00",
                      "context": {
                        "id": "01HG9H315RZNVBHYQYE6VRBXS5",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "on",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-27T23:16:06.224145+00:00",
                      "last_updated": "2023-11-27T23:16:06.224145+00:00",
                      "context": {
                        "id": "01HG9H32YG3EXSGMN7YGP7BF4H",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of remote.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:16:06.224575+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:16:06.224600+00:00",
                "result": {
                  "wanted_time_after": "2023-11-27T21:51:15.858560+00:00",
                  "result": true
                }
              }
            ],
            "condition/0/conditions/1": [
              {
                "path": "condition/0/conditions/1",
                "timestamp": "2023-11-27T23:16:06.224889+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/1/entity_id/0": [
              {
                "path": "condition/0/conditions/1/entity_id/0",
                "timestamp": "2023-11-27T23:16:06.224925+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9H32YGZ7CK435QS0DFMC29",
            "parent_id": "01HG9H32YG3EXSGMN7YGP7BF4H",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/1/entity_id/0",
          "run_id": "c634f9936adbcc42c92aee8b499b0431",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:16:06.224485+00:00",
            "finish": "2023-11-27T23:16:06.224981+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "4ec5c97b1636061e247eabcfb8b6e9a2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:29:55.018754+00:00",
            "finish": "2023-11-28T03:29:55.019176+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-28T03:29:55.018813+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674225267956",
                      "last_triggered": "2023-10-19T21:25:11.889018+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.869132+00:00",
                    "last_updated": "2023-11-27T11:37:20.869132+00:00",
                    "context": {
                      "id": "01HG893M75X0EMASCYWG9XHYBV",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "device",
                    "entity_id": "remote.living_room_tv",
                    "from_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "off",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T00:37:58.722907+00:00",
                      "last_updated": "2023-11-28T03:29:53.710607+00:00",
                      "context": {
                        "id": "01HG9ZKSHE5XH2PP0BRSHHBE03",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "remote.living_room_tv",
                      "state": "on",
                      "attributes": {
                        "activity_list": null,
                        "current_activity": "com.google.android.apps.tv.launcherx",
                        "friendly_name": "Living Room TV",
                        "supported_features": 4
                      },
                      "last_changed": "2023-11-28T03:29:55.017613+00:00",
                      "last_updated": "2023-11-28T03:29:55.017613+00:00",
                      "context": {
                        "id": "01HG9ZKTT95Q8YRJDX7Q3CACMK",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of remote.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-28T03:29:55.018850+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-28T03:29:55.018875+00:00",
                "result": {
                  "wanted_time_after": "2023-11-28T21:52:00.252192+00:00",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1674225267956",
            "alias": "LIGHT - Turn on living room light",
            "description": "Automatically turn on living room light",
            "trigger": [
              {
                "platform": "sun",
                "event": "sunset",
                "offset": 0
              },
              {
                "platform": "device",
                "type": "turned_on",
                "device_id": "be47f007e7bf0b6911b54fe459312703",
                "entity_id": "remote.living_room_tv",
                "domain": "remote"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "sun",
                    "after": "sunset"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "on"
                  },
                  {
                    "condition": "state",
                    "entity_id": "light.living_room_light",
                    "state": "off"
                  },
                  {
                    "condition": "state",
                    "entity_id": "remote.living_room_tv",
                    "state": "on"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9ZKTTAGCA5T0S2T8B6VT5H",
            "parent_id": "01HG9ZKTT95Q8YRJDX7Q3CACMK",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "4ec5c97b1636061e247eabcfb8b6e9a2",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-28T03:29:55.018754+00:00",
            "finish": "2023-11-28T03:29:55.019176+00:00"
          },
          "domain": "automation",
          "item_id": "1674225267956",
          "trigger": "state of remote.living_room_tv"
        }
      }
    ],
    "automation.1674367315493": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "c9cd9afeae4f896ee67df631a2f95ee0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:51:03.966728+00:00",
            "finish": "2023-11-27T23:51:03.966941+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:51:03.966783+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-27T11:37:20.869511+00:00",
                    "last_updated": "2023-11-27T11:37:20.869511+00:00",
                    "context": {
                      "id": "01HG893M750WVQHES2D66YSRE9",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 17.172,
                        "media_position_updated_at": "2023-11-27T23:50:40.659518+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:50:40.654237+00:00",
                      "last_updated": "2023-11-27T23:50:40.659794+00:00",
                      "context": {
                        "id": "01HG9K2CRKPJ2A9FXCYYZ7SQTY",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 17.305,
                        "media_position_updated_at": "2023-11-27T23:51:03.966017+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:51:03.966393+00:00",
                      "last_updated": "2023-11-27T23:51:03.966393+00:00",
                      "context": {
                        "id": "01HG9K33GYYGGZBHBEQW8HHZ7P",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:51:03.966818+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:51:03.966844+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:51:03.966875+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K33GYKGZ4MZ0WYP71DZHZ",
            "parent_id": "01HG9K33GYYGGZBHBEQW8HHZ7P",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "c9cd9afeae4f896ee67df631a2f95ee0",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:51:03.966728+00:00",
            "finish": "2023-11-27T23:51:03.966941+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "28a06eeebabe28e67f960f130c304a71",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:51:21.833766+00:00",
            "finish": "2023-11-27T23:51:21.833978+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:51:21.833825+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-27T11:37:20.869511+00:00",
                    "last_updated": "2023-11-27T11:37:20.869511+00:00",
                    "context": {
                      "id": "01HG893M750WVQHES2D66YSRE9",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 34.787,
                        "media_position_updated_at": "2023-11-27T23:51:21.534106+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:51:21.517107+00:00",
                      "last_updated": "2023-11-27T23:51:21.534382+00:00",
                      "context": {
                        "id": "01HG9K3MNYPN1SCS1GZBBJCVQ6",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 24.647,
                        "media_position_updated_at": "2023-11-27T23:51:21.833185+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:51:21.833461+00:00",
                      "last_updated": "2023-11-27T23:51:21.833461+00:00",
                      "context": {
                        "id": "01HG9K3MZ9FYG0E6N04FQESVA8",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:51:21.833861+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:51:21.833887+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:51:21.833914+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K3MZ9KJ4PS0V3BCZ9BEJB",
            "parent_id": "01HG9K3MZ9FYG0E6N04FQESVA8",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "28a06eeebabe28e67f960f130c304a71",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:51:21.833766+00:00",
            "finish": "2023-11-27T23:51:21.833978+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "0091c0aaac7312d08aeb48837fc1f80b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:53:07.607886+00:00",
            "finish": "2023-11-27T23:53:07.608098+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:53:07.607944+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-27T11:37:20.869511+00:00",
                    "last_updated": "2023-11-27T11:37:20.869511+00:00",
                    "context": {
                      "id": "01HG893M750WVQHES2D66YSRE9",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 104.969,
                        "media_position_updated_at": "2023-11-27T23:52:43.195680+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:52:43.171216+00:00",
                      "last_updated": "2023-11-27T23:52:43.195953+00:00",
                      "context": {
                        "id": "01HG9K64DVFD7BNGR735E8HAYC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 105.043,
                        "media_position_updated_at": "2023-11-27T23:53:07.606792+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:53:07.607134+00:00",
                      "last_updated": "2023-11-27T23:53:07.607134+00:00",
                      "context": {
                        "id": "01HG9K6W8QFG38TZ2CC4FJY3FG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:53:07.607981+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:53:07.608007+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:53:07.608036+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K6W8QNRJY1VMNHJA56EJZ",
            "parent_id": "01HG9K6W8QFG38TZ2CC4FJY3FG",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "0091c0aaac7312d08aeb48837fc1f80b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:53:07.607886+00:00",
            "finish": "2023-11-27T23:53:07.608098+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "5b558ea66ce508939c56f51d861b262b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:53:33.914477+00:00",
            "finish": "2023-11-27T23:53:33.914695+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:53:33.914537+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-27T11:37:20.869511+00:00",
                    "last_updated": "2023-11-27T11:37:20.869511+00:00",
                    "context": {
                      "id": "01HG893M750WVQHES2D66YSRE9",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 119.881,
                        "media_position_updated_at": "2023-11-27T23:53:22.487432+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:53:22.483331+00:00",
                      "last_updated": "2023-11-27T23:53:22.487641+00:00",
                      "context": {
                        "id": "01HG9K7ASQ55AW5DYC6GVP0RYJ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 119.946,
                        "media_position_updated_at": "2023-11-27T23:53:33.913386+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:53:33.913720+00:00",
                      "last_updated": "2023-11-27T23:53:33.913720+00:00",
                      "context": {
                        "id": "01HG9K7NYSBH5Q61MF9CF7HNTN",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:53:33.914575+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:53:33.914601+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:53:33.914631+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K7NYT4259W18ZZH2P9X3P",
            "parent_id": "01HG9K7NYSBH5Q61MF9CF7HNTN",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "5b558ea66ce508939c56f51d861b262b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:53:33.914477+00:00",
            "finish": "2023-11-27T23:53:33.914695+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "e2c825895ba87664d9c2091dfd9131ce",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:54:20.469500+00:00",
            "finish": "2023-11-27T23:54:20.469632+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:54:20.469554+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_playing",
                    "state": "on",
                    "attributes": {
                      "id": "1674367315493",
                      "last_triggered": "2023-11-26T17:34:51.106581+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode playing"
                    },
                    "last_changed": "2023-11-27T11:37:20.869511+00:00",
                    "last_updated": "2023-11-27T11:37:20.869511+00:00",
                    "context": {
                      "id": "01HG893M750WVQHES2D66YSRE9",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 120.241,
                        "media_position_updated_at": "2023-11-27T23:53:51.647282+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:53:51.646515+00:00",
                      "last_updated": "2023-11-27T23:53:51.647949+00:00",
                      "context": {
                        "id": "01HG9K878Z36J2ACP5G19XZNWC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 0,
                        "media_position": 0,
                        "media_position_updated_at": "2023-11-27T23:54:20.468626+00:00",
                        "media_title": "",
                        "media_artist": "",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:54:20.468884+00:00",
                      "last_updated": "2023-11-27T23:54:20.468884+00:00",
                      "context": {
                        "id": "01HG9K93DMT32KB74XS02KHHGQ",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:54:20.469573+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:54:20.469586+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:54:20.469600+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367315493",
            "alias": "MEDIA - Theater mode playing",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "to": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K93DN2N7T63JRRWT5YGAG",
            "parent_id": "01HG9K93DMT32KB74XS02KHHGQ",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "e2c825895ba87664d9c2091dfd9131ce",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:54:20.469500+00:00",
            "finish": "2023-11-27T23:54:20.469632+00:00"
          },
          "domain": "automation",
          "item_id": "1674367315493",
          "trigger": "state of media_player.living_room_tv"
        }
      }
    ],
    "automation.1674367256897": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "5fb2fd087aa7425509f027b4029079df",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:50:43.655097+00:00",
            "finish": "2023-11-27T23:50:43.655328+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:50:43.655155+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-27T11:37:20.869289+00:00",
                    "last_updated": "2023-11-27T11:37:20.869289+00:00",
                    "context": {
                      "id": "01HG893M758RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 16.419,
                        "media_position_updated_at": "2023-11-27T23:50:39.640464+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:50:39.091187+00:00",
                      "last_updated": "2023-11-27T23:50:39.640735+00:00",
                      "context": {
                        "id": "01HG9K2BRRVXPQVZ1CN7FFQYZ3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 17.172,
                        "media_position_updated_at": "2023-11-27T23:50:40.653944+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:50:40.654237+00:00",
                      "last_updated": "2023-11-27T23:50:40.654237+00:00",
                      "context": {
                        "id": "01HG9K2CREBV8WBH61JXVN3MG6",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:50:43.655193+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:50:43.655219+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:50:43.655249+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K2FP76YKQQ32T0ZRV3GAB",
            "parent_id": "01HG9K2CREBV8WBH61JXVN3MG6",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "5fb2fd087aa7425509f027b4029079df",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:50:43.655097+00:00",
            "finish": "2023-11-27T23:50:43.655328+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "4dc7e658bbd81b3a97d517a18c6fe074",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:52:46.172460+00:00",
            "finish": "2023-11-27T23:52:46.172681+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:52:46.172520+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-27T11:37:20.869289+00:00",
                    "last_updated": "2023-11-27T11:37:20.869289+00:00",
                    "context": {
                      "id": "01HG893M758RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 24.764,
                        "media_position_updated_at": "2023-11-27T23:51:22.814128+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:51:21.833461+00:00",
                      "last_updated": "2023-11-27T23:51:22.814439+00:00",
                      "context": {
                        "id": "01HG9K3NXYH9JT4TVD6XZQEPS6",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 104.969,
                        "media_position_updated_at": "2023-11-27T23:52:43.170837+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:52:43.171216+00:00",
                      "last_updated": "2023-11-27T23:52:43.171216+00:00",
                      "context": {
                        "id": "01HG9K64D3DA4DWKFN6E3MQ5AB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:52:46.172558+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:52:46.172585+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:52:46.172614+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K67AWQABYC0V17JTAPP6G",
            "parent_id": "01HG9K64D3DA4DWKFN6E3MQ5AB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "4dc7e658bbd81b3a97d517a18c6fe074",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:52:46.172460+00:00",
            "finish": "2023-11-27T23:52:46.172681+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "50efabc3216d3ab5a4e6617c6f83fb83",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:53:25.484730+00:00",
            "finish": "2023-11-27T23:53:25.484964+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:53:25.484787+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-27T11:37:20.869289+00:00",
                    "last_updated": "2023-11-27T11:37:20.869289+00:00",
                    "context": {
                      "id": "01HG893M758RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 105.373,
                        "media_position_updated_at": "2023-11-27T23:53:07.754168+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:53:07.607134+00:00",
                      "last_updated": "2023-11-27T23:53:07.754439+00:00",
                      "context": {
                        "id": "01HG9K6WDA3VSPZGYFFX3NB2Y0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "paused",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 119.881,
                        "media_position_updated_at": "2023-11-27T23:53:22.482966+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:53:22.483331+00:00",
                      "last_updated": "2023-11-27T23:53:22.483331+00:00",
                      "context": {
                        "id": "01HG9K7ASKWFPNR4GDXW53W2X6",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:53:25.484824+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:53:25.484850+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:53:25.484898+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K7DQCJ1EVDTBV34M1QFN2",
            "parent_id": "01HG9K7ASKWFPNR4GDXW53W2X6",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "50efabc3216d3ab5a4e6617c6f83fb83",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:53:25.484730+00:00",
            "finish": "2023-11-27T23:53:25.484964+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "346c2814778572357124337b72a63029",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:53:54.647524+00:00",
            "finish": "2023-11-27T23:53:54.647762+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:53:54.647582+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-27T11:37:20.869289+00:00",
                    "last_updated": "2023-11-27T11:37:20.869289+00:00",
                    "context": {
                      "id": "01HG893M758RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 120.241,
                        "media_position_updated_at": "2023-11-27T23:53:34.076931+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:53:33.913720+00:00",
                      "last_updated": "2023-11-27T23:53:34.077176+00:00",
                      "context": {
                        "id": "01HG9K7P3XFJHGRPVNWFGMJZN2",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 137.38,
                        "media_position": 120.241,
                        "media_position_updated_at": "2023-11-27T23:53:51.646202+00:00",
                        "media_title": "Asmongold Responds to the Drama",
                        "media_artist": "Asmongold Clips",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:53:51.646515+00:00",
                      "last_updated": "2023-11-27T23:53:51.646515+00:00",
                      "context": {
                        "id": "01HG9K878YZAB36SW0D58J7EQN",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:53:54.647638+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:53:54.647665+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:53:54.647696+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K8A6QYR7DSXR4XKB20632",
            "parent_id": "01HG9K878YZAB36SW0D58J7EQN",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "346c2814778572357124337b72a63029",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:53:54.647524+00:00",
            "finish": "2023-11-27T23:53:54.647762+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "b8f728d7536187be508d24123770d914",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:54:24.644045+00:00",
            "finish": "2023-11-27T23:54:24.644280+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:54:24.644102+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_theater_mode_paused",
                    "state": "on",
                    "attributes": {
                      "id": "1674367256897",
                      "last_triggered": "2023-11-26T22:37:26.540455+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Theater mode paused"
                    },
                    "last_changed": "2023-11-27T11:37:20.869289+00:00",
                    "last_updated": "2023-11-27T11:37:20.869289+00:00",
                    "context": {
                      "id": "01HG893M758RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "media_player.living_room_tv",
                    "from_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "playing",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 241.6,
                        "media_position": 0.161,
                        "media_position_updated_at": "2023-11-27T23:54:21.232303+00:00",
                        "media_title": "",
                        "media_artist": "",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:54:20.468884+00:00",
                      "last_updated": "2023-11-27T23:54:21.232579+00:00",
                      "context": {
                        "id": "01HG9K945G1WH2820PV4JHHZET",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "media_player.living_room_tv",
                      "state": "idle",
                      "attributes": {
                        "volume_level": 1.0,
                        "is_volume_muted": false,
                        "media_content_id": "",
                        "media_content_type": "video",
                        "media_duration": 241.6,
                        "media_position": 0.161,
                        "media_position_updated_at": "2023-11-27T23:54:21.642002+00:00",
                        "media_title": "",
                        "media_artist": "",
                        "app_id": "2C6A6E3D",
                        "app_name": "YouTube",
                        "entity_picture_local": null,
                        "friendly_name": "Living Room TV",
                        "supported_features": 152499
                      },
                      "last_changed": "2023-11-27T23:54:21.642334+00:00",
                      "last_updated": "2023-11-27T23:54:21.642334+00:00",
                      "context": {
                        "id": "01HG9K94JA35DVJ5D67ZMEBFPE",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 3.0
                    },
                    "attribute": null,
                    "description": "state of media_player.living_room_tv"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T23:54:24.644139+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T23:54:24.644182+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0/entity_id/0": [
              {
                "path": "condition/0/conditions/0/entity_id/0",
                "timestamp": "2023-11-27T23:54:24.644214+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "id": "1674367256897",
            "alias": "MEDIA - Theater mode paused",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "media_player.living_room_tv"
                ],
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 3
                },
                "from": "playing"
              }
            ],
            "condition": [
              {
                "condition": "and",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  },
                  {
                    "condition": "sun",
                    "after": "sunset",
                    "before": "sunrise"
                  },
                  {
                    "condition": "state",
                    "entity_id": "switch.adaptive_lighting_living_room",
                    "state": "off"
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "data": {
                  "transition": 10
                },
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9K97G4N6RTXN76QCZXN70W",
            "parent_id": "01HG9K94JA35DVJ5D67ZMEBFPE",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0/entity_id/0",
          "run_id": "b8f728d7536187be508d24123770d914",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-27T23:54:24.644045+00:00",
            "finish": "2023-11-27T23:54:24.644280+00:00"
          },
          "domain": "automation",
          "item_id": "1674367256897",
          "trigger": "state of media_player.living_room_tv"
        }
      }
    ],
    "automation.1676734805757": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "e1f429cc2e1fa5f0756accaa5b5fd2d1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:11:31.662440+00:00",
            "finish": "2023-11-26T15:11:31.662551+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:11:31.662467+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:08:55.578141+00:00",
                      "last_updated": "2023-11-26T15:08:55.578141+00:00",
                      "context": {
                        "id": "01HG62TACTP2V2AMSQE8KKK6M0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "46.3",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:10:31.660609+00:00",
                      "last_updated": "2023-11-26T15:10:31.660609+00:00",
                      "context": {
                        "id": "01HG62X87C6YANF73XKBSW7RNX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:11:31.662493+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:11:31.662514+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG62Z2TEG1ZY6QT247EWZ4NN",
            "parent_id": "01HG62X87C6YANF73XKBSW7RNX",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "e1f429cc2e1fa5f0756accaa5b5fd2d1",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:11:31.662440+00:00",
            "finish": "2023-11-26T15:11:31.662551+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "26d1fb7149ebbb5e965edace8ca1a1f8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:17:59.054508+00:00",
            "finish": "2023-11-26T15:17:59.054691+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:17:59.054550+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:15:56.984359+00:00",
                      "last_updated": "2023-11-26T15:15:56.984359+00:00",
                      "context": {
                        "id": "01HG6375XRQ3WB595QKCVHQDKS",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "8.3",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:16:59.053223+00:00",
                      "last_updated": "2023-11-26T15:16:59.053223+00:00",
                      "context": {
                        "id": "01HG6392HDZ3KKHRT31Z9CJ3JA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:17:59.054590+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:17:59.054629+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG63AX4ER875MG7E45R0GBKH",
            "parent_id": "01HG6392HDZ3KKHRT31Z9CJ3JA",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "26d1fb7149ebbb5e965edace8ca1a1f8",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:17:59.054508+00:00",
            "finish": "2023-11-26T15:17:59.054691+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "ea8d0ba4dbf40f0d1cdee6d1467cf120",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:27:16.616921+00:00",
            "finish": "2023-11-26T15:27:16.617141+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:27:16.616963+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:25:05.538062+00:00",
                      "last_updated": "2023-11-26T15:25:05.538062+00:00",
                      "context": {
                        "id": "01HG63QXM2M43C7APTV0A5ZEEK",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "44.3",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:26:16.614268+00:00",
                      "last_updated": "2023-11-26T15:26:16.614268+00:00",
                      "context": {
                        "id": "01HG63T316SF47096AWDEW28HK",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:27:16.617002+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:27:16.617063+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG63VXM85CSST0RAGWW05G7R",
            "parent_id": "01HG63T316SF47096AWDEW28HK",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "ea8d0ba4dbf40f0d1cdee6d1467cf120",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:27:16.616921+00:00",
            "finish": "2023-11-26T15:27:16.617141+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "cb721cd0747c74f2b8a72f474ea900d6",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:35:31.101788+00:00",
            "finish": "2023-11-26T15:35:31.101967+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:35:31.101837+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:33:22.036863+00:00",
                      "last_updated": "2023-11-26T15:33:22.036863+00:00",
                      "context": {
                        "id": "01HG6472FMBBF1M44PTKM2TT8C",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "13.7",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:34:31.100280+00:00",
                      "last_updated": "2023-11-26T15:34:31.100280+00:00",
                      "context": {
                        "id": "01HG6495XW0R9F93YX7M3BN5D1",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:35:31.101877+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:35:31.101912+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG64B0GX4JJZVWQ6NXCPQPGF",
            "parent_id": "01HG6495XW0R9F93YX7M3BN5D1",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "cb721cd0747c74f2b8a72f474ea900d6",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:35:31.101788+00:00",
            "finish": "2023-11-26T15:35:31.101967+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "5a7d868cf4762b732a599e566d0d31bc",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:42:20.477216+00:00",
            "finish": "2023-11-26T15:42:20.477406+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:42:20.477275+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_status_running",
                    "state": "on",
                    "attributes": {
                      "id": "1676734805757",
                      "last_triggered": "2023-11-26T14:50:51.454458+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Status Running"
                    },
                    "last_changed": "2023-11-26T11:01:53.599176+00:00",
                    "last_updated": "2023-11-26T14:50:51.456282+00:00",
                    "context": {
                      "id": "01HG61S7NYY8R5K2CD36APAW70",
                      "parent_id": "01HG61QD2WAAQ9ZM43Y6JP2CS7",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": null,
                    "above": 1.0,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:37:17.245822+00:00",
                      "last_updated": "2023-11-26T15:37:17.245822+00:00",
                      "context": {
                        "id": "01HG64E85X5A7DNMZBWCZ9JHJ0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "45.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:41:20.475378+00:00",
                      "last_updated": "2023-11-26T15:41:20.475378+00:00",
                      "context": {
                        "id": "01HG64NNPV6KFTZDGEXQKQF4WB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:42:20.477312+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:42:20.477347+00:00",
                "result": {
                  "result": false,
                  "state": "On",
                  "wanted_state": "Off"
                }
              }
            ]
          },
          "config": {
            "id": "1676734805757",
            "alias": "WASHER - Status Running",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 1,
                  "seconds": 0
                },
                "above": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "Off"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "On"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG64QG9XMM5PQ3Z3PPSSX4SA",
            "parent_id": "01HG64NNPV6KFTZDGEXQKQF4WB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "5a7d868cf4762b732a599e566d0d31bc",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T15:42:20.477216+00:00",
            "finish": "2023-11-26T15:42:20.477406+00:00"
          },
          "domain": "automation",
          "item_id": "1676734805757",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      }
    ],
    "automation.1673493242815": [
      {
        "extended_dict": {
          "last_step": "action/0/else/0",
          "run_id": "a476fbb3cbf4a80c871e43ae7d4c32dc",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T15:00:00.221342+00:00",
            "finish": "2023-11-26T15:00:06.826021+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:00:00.221383+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_humidity_alert",
                    "state": "on",
                    "attributes": {
                      "id": "1673493242815",
                      "last_triggered": "2023-11-23T17:00:00.403043+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Humidity Alert"
                    },
                    "last_changed": "2023-11-26T11:01:53.596749+00:00",
                    "last_updated": "2023-11-26T11:01:53.596749+00:00",
                    "context": {
                      "id": "01HG5MNZSWZJRVTTCKH0F07K18",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_select.best_humidity",
                    "from_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Inside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-26T11:01:49.247208+00:00",
                      "last_updated": "2023-11-26T11:01:49.247208+00:00",
                      "context": {
                        "id": "01HG5MNVHZS7145QXRPASE6TKG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Outside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-26T15:00:00.221095+00:00",
                      "last_updated": "2023-11-26T15:00:00.221095+00:00",
                      "context": {
                        "id": "01HG629ZJTRGHMYCC0A4DNGNA4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_select.best_humidity"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:00:00.221412+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "12:00:00.221435"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-26T15:00:00.221476+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0": [
              {
                "path": "condition/1/conditions/0",
                "timestamp": "2023-11-26T15:00:00.221502+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0/entity_id/0": [
              {
                "path": "condition/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-26T15:00:00.221530+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T15:00:00.221845+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG629ZJX4MJA6GAF4E21Q2RE",
                    "parent_id": "01HG629ZJTRGHMYCC0A4DNGNA4",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-26T15:00:00.222037+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-26T15:00:00.222074+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:00:00.222101+00:00",
                "result": {
                  "result": false,
                  "state": "Outside",
                  "wanted_state": "Inside"
                }
              }
            ],
            "action/0/else/0": [
              {
                "path": "action/0/else/0",
                "timestamp": "2023-11-26T15:00:00.222490+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673493242815",
            "alias": "WEATHER - Humidity Alert",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_select.best_humidity"
                ]
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "group.christian_home",
                    "state": "home"
                  },
                  {
                    "condition": "state",
                    "entity_id": "group.cecilia_home",
                    "state": "home"
                  }
                ]
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_select.best_humidity",
                    "state": "Inside"
                  }
                ],
                "then": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG629ZJX4MJA6GAF4E21Q2RE",
            "parent_id": "01HG629ZJTRGHMYCC0A4DNGNA4",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/else/0",
          "run_id": "a476fbb3cbf4a80c871e43ae7d4c32dc",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T15:00:00.221342+00:00",
            "finish": "2023-11-26T15:00:06.826021+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/then/0",
          "run_id": "75f3c59fa7118509272b629cffba95bf",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:00:00.219705+00:00",
            "finish": "2023-11-26T17:00:10.408491+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T17:00:00.219724+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.weather_humidity_alert",
                    "state": "on",
                    "attributes": {
                      "id": "1673493242815",
                      "last_triggered": "2023-11-26T15:00:00.221638+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WEATHER - Humidity Alert"
                    },
                    "last_changed": "2023-11-26T11:01:53.596749+00:00",
                    "last_updated": "2023-11-26T15:00:06.825773+00:00",
                    "context": {
                      "id": "01HG62A6192JZ3YSZKYJ5MTFQ0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_select.best_humidity",
                    "from_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Outside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-26T15:00:00.221095+00:00",
                      "last_updated": "2023-11-26T15:00:00.221095+00:00",
                      "context": {
                        "id": "01HG629ZJTRGHMYCC0A4DNGNA4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "input_select.best_humidity",
                      "state": "Inside",
                      "attributes": {
                        "options": [
                          "Outside",
                          "Inside"
                        ],
                        "editable": true,
                        "icon": "mdi:water",
                        "friendly_name": "best_humidity"
                      },
                      "last_changed": "2023-11-26T17:00:00.219596+00:00",
                      "last_updated": "2023-11-26T17:00:00.219596+00:00",
                      "context": {
                        "id": "01HG695PTT6ES5B6E1CNCEQJ4H",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_select.best_humidity"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T17:00:00.219737+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "09:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "14:00:00.219745"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00"
                  },
                  "result": true
                }
              }
            ],
            "condition/1": [
              {
                "path": "condition/1",
                "timestamp": "2023-11-26T17:00:00.219763+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0": [
              {
                "path": "condition/1/conditions/0",
                "timestamp": "2023-11-26T17:00:00.219776+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/1/conditions/0/entity_id/0": [
              {
                "path": "condition/1/conditions/0/entity_id/0",
                "timestamp": "2023-11-26T17:00:00.219789+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T17:00:00.219936+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG695PTV5Z6FAJWP3S4YZPKZ",
                    "parent_id": "01HG695PTT6ES5B6E1CNCEQJ4H",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "then"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-26T17:00:00.219968+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-26T17:00:00.219982+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-26T17:00:00.219996+00:00",
                "result": {
                  "result": true,
                  "state": "Inside",
                  "wanted_state": "Inside"
                }
              }
            ],
            "action/0/then/0": [
              {
                "path": "action/0/then/0",
                "timestamp": "2023-11-26T17:00:00.220170+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1673493242815",
            "alias": "WEATHER - Humidity Alert",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_select.best_humidity"
                ]
              }
            ],
            "condition": [
              {
                "condition": "time",
                "after": "09:00:00",
                "before": "19:00:00"
              },
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "state",
                    "entity_id": "group.christian_home",
                    "state": "home"
                  },
                  {
                    "condition": "state",
                    "entity_id": "group.cecilia_home",
                    "state": "home"
                  }
                ]
              }
            ],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_select.best_humidity",
                    "state": "Inside"
                  }
                ],
                "then": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity outside is higher, close your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "notify.notify",
                    "data": {
                      "message": "Humidity inside is higher, open your windows!",
                      "title": "Humidity Alert"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG695PTV5Z6FAJWP3S4YZPKZ",
            "parent_id": "01HG695PTT6ES5B6E1CNCEQJ4H",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/then/0",
          "run_id": "75f3c59fa7118509272b629cffba95bf",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:00:00.219705+00:00",
            "finish": "2023-11-26T17:00:10.408491+00:00"
          },
          "domain": "automation",
          "item_id": "1673493242815",
          "trigger": "state of input_select.best_humidity"
        }
      }
    ],
    "automation.1676744130645": [
      {
        "extended_dict": {
          "last_step": "action/1",
          "run_id": "98287c14e5333568e5bfd22032108d3d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T15:59:43.000799+00:00",
            "finish": "2023-11-26T15:59:44.678190+00:00"
          },
          "domain": "automation",
          "item_id": "1676744130645",
          "trigger": "numeric state of sensor.washing_machine_socket_power",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T15:59:43.000850+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.washer_turn_off",
                    "state": "on",
                    "attributes": {
                      "id": "1676744130645",
                      "last_triggered": "2023-11-21T17:07:53.525900+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "WASHER - Turn off"
                    },
                    "last_changed": "2023-11-26T11:01:53.599325+00:00",
                    "last_updated": "2023-11-26T11:01:53.599325+00:00",
                    "context": {
                      "id": "01HG5MNZSZY9WBSP4BDVEF8C3T",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "numeric_state",
                    "entity_id": "sensor.washing_machine_socket_power",
                    "below": 1.0,
                    "above": null,
                    "from_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "262.6",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:45:45.750012+00:00",
                      "last_updated": "2023-11-26T15:45:45.750012+00:00",
                      "context": {
                        "id": "01HG64XRRPH7QQS2YRHMGTNBYF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.washing_machine_socket_power",
                      "state": "0.0",
                      "attributes": {
                        "state_class": "measurement",
                        "unit_of_measurement": "W",
                        "device_class": "power",
                        "friendly_name": "Washing machine socket Power"
                      },
                      "last_changed": "2023-11-26T15:49:42.997969+00:00",
                      "last_updated": "2023-11-26T15:49:42.997969+00:00",
                      "context": {
                        "id": "01HG6550ENZKFPYZ47TVSES4KC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 600.0
                    },
                    "description": "numeric state of sensor.washing_machine_socket_power"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T15:59:43.000891+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2023-11-26T15:59:43.000927+00:00",
                "result": {
                  "result": true,
                  "state": "On",
                  "wanted_state": "On"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T15:59:43.001363+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG65QACRWTFBG5ERR6SK71KJ",
                    "parent_id": "01HG6550ENZKFPYZ47TVSES4KC",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_select",
                    "service": "select_option",
                    "service_data": {
                      "option": "Off",
                      "entity_id": [
                        "input_select.washing_machine_status"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "input_select.washing_machine_status"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-26T15:59:43.003005+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "message": "Wash completed.",
                      "title": "Washing machine"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1676744130645",
            "alias": "WASHER - Turn off",
            "description": "",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.washing_machine_socket_power",
                "for": {
                  "hours": 0,
                  "minutes": 10,
                  "seconds": 0
                },
                "below": 1
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "input_select.washing_machine_status",
                "state": "On"
              }
            ],
            "action": [
              {
                "service": "input_select.select_option",
                "data": {
                  "option": "Off"
                },
                "target": {
                  "entity_id": "input_select.washing_machine_status"
                }
              },
              {
                "service": "notify.notify",
                "data": {
                  "message": "Wash completed.",
                  "title": "Washing machine"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG65QACRWTFBG5ERR6SK71KJ",
            "parent_id": "01HG6550ENZKFPYZ47TVSES4KC",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1",
          "run_id": "98287c14e5333568e5bfd22032108d3d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T15:59:43.000799+00:00",
            "finish": "2023-11-26T15:59:44.678190+00:00"
          },
          "domain": "automation",
          "item_id": "1676744130645",
          "trigger": "numeric state of sensor.washing_machine_socket_power"
        }
      }
    ],
    "automation.1680556356761": [
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "3b13dc25bce8e6e84f77753b6df2bce2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T23:58:29.778786+00:00",
            "finish": "2023-11-27T23:58:29.795689+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T23:58:29.778877+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-27T23:55:07.676942+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871192+00:00",
                    "last_updated": "2023-11-27T23:55:07.694148+00:00",
                    "context": {
                      "id": "01HG9KAHGWKDF0BA79STTVP6KX",
                      "parent_id": "01HG9KAHGWQGJ78SYTMK5RH7XE",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T23:58:29.778515+00:00",
                      "context": {
                        "id": "01HG9KGPWJ6BGB548EPX2KN559",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T23:58:29.779191+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9KGPWJ1XA7WBWZPE9G1YM1",
                    "parent_id": "01HG9KGPWJ6BGB548EPX2KN559",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T23:58:29.779634+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T23:58:29.779703+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T23:58:29.779734+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T23:58:29.779838+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T23:58:29.779930+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T23:58:29.780282+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9KGPWJ1XA7WBWZPE9G1YM1",
            "parent_id": "01HG9KGPWJ6BGB548EPX2KN559",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "3b13dc25bce8e6e84f77753b6df2bce2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T23:58:29.778786+00:00",
            "finish": "2023-11-27T23:58:29.795689+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "ac04f9add6a0344106fd69cbe062a668",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:04:42.278361+00:00",
            "finish": "2023-11-28T00:04:42.296270+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T00:04:42.278460+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-27T23:58:29.778973+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871192+00:00",
                    "last_updated": "2023-11-27T23:58:29.795514+00:00",
                    "context": {
                      "id": "01HG9KGPWJ1XA7WBWZPE9G1YM1",
                      "parent_id": "01HG9KGPWJ6BGB548EPX2KN559",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T00:04:42.277717+00:00",
                      "context": {
                        "id": "01HG9KW2N5VTB55S0MA0B4374F",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T00:04:42.278794+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9KW2N6V6AZJYPYCK1WQ5MG",
                    "parent_id": "01HG9KW2N5VTB55S0MA0B4374F",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T00:04:42.279208+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T00:04:42.279279+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T00:04:42.279311+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T00:04:42.279432+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T00:04:42.279538+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T00:04:42.279879+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9KW2N6V6AZJYPYCK1WQ5MG",
            "parent_id": "01HG9KW2N5VTB55S0MA0B4374F",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "ac04f9add6a0344106fd69cbe062a668",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:04:42.278361+00:00",
            "finish": "2023-11-28T00:04:42.296270+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "11c1aa0d69b5c9d502bf15c6337b523d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:04:51.278946+00:00",
            "finish": "2023-11-28T00:04:51.295915+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T00:04:51.279039+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-28T00:04:42.278570+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871192+00:00",
                    "last_updated": "2023-11-28T00:04:42.296061+00:00",
                    "context": {
                      "id": "01HG9KW2N6V6AZJYPYCK1WQ5MG",
                      "parent_id": "01HG9KW2N5VTB55S0MA0B4374F",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T00:04:51.278652+00:00",
                      "context": {
                        "id": "01HG9KWBEE8QG07E2PSKYHNWKS",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T00:04:51.279366+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9KWBEE451QRVDHS9GW85GD",
                    "parent_id": "01HG9KWBEE8QG07E2PSKYHNWKS",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T00:04:51.279783+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T00:04:51.279854+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T00:04:51.279886+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T00:04:51.279991+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T00:04:51.280085+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T00:04:51.280478+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9KWBEE451QRVDHS9GW85GD",
            "parent_id": "01HG9KWBEE8QG07E2PSKYHNWKS",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "11c1aa0d69b5c9d502bf15c6337b523d",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:04:51.278946+00:00",
            "finish": "2023-11-28T00:04:51.295915+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "64e0e8837a4c1a44ffca1a7498dbfb3a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:19:22.537151+00:00",
            "finish": "2023-11-28T00:19:22.555456+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T00:19:22.537212+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-28T00:04:51.279135+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871192+00:00",
                    "last_updated": "2023-11-28T00:04:51.295727+00:00",
                    "context": {
                      "id": "01HG9KWBEE451QRVDHS9GW85GD",
                      "parent_id": "01HG9KWBEE8QG07E2PSKYHNWKS",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T00:19:22.536890+00:00",
                      "context": {
                        "id": "01HG9MPY98WSW7NPBKEMQR17YT",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T00:19:22.537540+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9MPY990EAQHQWYASKPR4HV",
                    "parent_id": "01HG9MPY98WSW7NPBKEMQR17YT",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T00:19:22.537945+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T00:19:22.538014+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T00:19:22.538045+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T00:19:22.538151+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T00:19:22.538243+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T00:19:22.538595+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9MPY990EAQHQWYASKPR4HV",
            "parent_id": "01HG9MPY98WSW7NPBKEMQR17YT",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "64e0e8837a4c1a44ffca1a7498dbfb3a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:19:22.537151+00:00",
            "finish": "2023-11-28T00:19:22.555456+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "45606dc876ae17e079ac4911b554fd4b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:20:52.860545+00:00",
            "finish": "2023-11-28T00:20:52.878399+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T00:20:52.860632+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_kitchen_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680556356761",
                      "last_triggered": "2023-11-28T00:19:22.537309+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Kitchen light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871192+00:00",
                    "last_updated": "2023-11-28T00:19:22.555280+00:00",
                    "context": {
                      "id": "01HG9MPY990EAQHQWYASKPR4HV",
                      "parent_id": "01HG9MPY98WSW7NPBKEMQR17YT",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:29:18:e1:e0",
                        "unique_id": "00:12:4b:00:29:18:e1:e0:1:0x0006",
                        "device_id": "32eb643cc51b1ff3098e619b102a920f",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T00:20:52.860305+00:00",
                      "context": {
                        "id": "01HG9MSPFWGHA1QAGPTJ2JRDBV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T00:20:52.860935+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9MSPFWP0T8CDEGGMFXSEAK",
                    "parent_id": "01HG9MSPFWGHA1QAGPTJ2JRDBV",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T00:20:52.861367+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T00:20:52.861436+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T00:20:52.861468+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T00:20:52.861575+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T00:20:52.861670+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T00:20:52.862053+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "32eb643cc51b1ff3098e619b102a920f"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "entity_id": "light.kitchen_light_group"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680556356761",
            "alias": "SWITCH - Kitchen light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "32eb643cc51b1ff3098e619b102a920f",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "entity_id": "light.kitchen_light_group"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9MSPFWP0T8CDEGGMFXSEAK",
            "parent_id": "01HG9MSPFWGHA1QAGPTJ2JRDBV",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "45606dc876ae17e079ac4911b554fd4b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:20:52.860545+00:00",
            "finish": "2023-11-28T00:20:52.878399+00:00"
          },
          "domain": "automation",
          "item_id": "1680556356761",
          "trigger": "event 'zha_event'"
        }
      }
    ],
    "automation.1674368220338": [
      {
        "extended_dict": {
          "last_step": "action/0/then/1",
          "run_id": "d2c18694f8d099f2a0ab8f090b7daa53",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:34:51.070789+00:00",
            "finish": "2023-11-26T17:34:51.158198+00:00"
          },
          "domain": "automation",
          "item_id": "1674368220338",
          "trigger": "state of input_boolean.theater_mode",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T17:34:51.070839+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_toggle_theater_mode",
                    "state": "on",
                    "attributes": {
                      "id": "1674368220338",
                      "last_triggered": "2023-11-22T23:05:31.792489+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Toggle theater mode"
                    },
                    "last_changed": "2023-11-26T11:01:53.598148+00:00",
                    "last_updated": "2023-11-26T11:01:53.598148+00:00",
                    "context": {
                      "id": "01HG5MNZSY29T6KXGE0EXSKJWK",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "from_state": {
                      "entity_id": "input_boolean.theater_mode",
                      "state": "off",
                      "attributes": {
                        "editable": true,
                        "icon": "mdi:theater",
                        "friendly_name": "Theater mode"
                      },
                      "last_changed": "2023-11-26T11:01:48.991744+00:00",
                      "last_updated": "2023-11-26T11:01:48.991744+00:00",
                      "context": {
                        "id": "01HG5MNV9ZEWMFDVG5TKYEFD51",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "input_boolean.theater_mode",
                      "state": "on",
                      "attributes": {
                        "editable": true,
                        "icon": "mdi:theater",
                        "friendly_name": "Theater mode"
                      },
                      "last_changed": "2023-11-26T17:34:51.070028+00:00",
                      "last_updated": "2023-11-26T17:34:51.070028+00:00",
                      "context": {
                        "id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
                        "parent_id": null,
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392"
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_boolean.theater_mode"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T17:34:51.072663+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG6B5GNY16H0MR45DZK4AV8K",
                    "parent_id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "then"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-26T17:34:51.072887+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-26T17:34:51.072923+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-26T17:34:51.072951+00:00",
                "result": {
                  "result": true,
                  "state": "on",
                  "wanted_state": "on"
                }
              }
            ],
            "action/0/then/0": [
              {
                "path": "action/0/then/0",
                "timestamp": "2023-11-26T17:34:51.079218+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.adaptive_lighting_living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/0/then/1": [
              {
                "path": "action/0/then/1",
                "timestamp": "2023-11-26T17:34:51.105846+00:00",
                "child_id": {
                  "domain": "automation",
                  "item_id": "1674367315493",
                  "run_id": "2e337c33c615b5c4ab117c075a8ad666"
                },
                "result": {
                  "params": {
                    "domain": "automation",
                    "service": "trigger",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "automation.media_theater_mode_playing"
                      ]
                    }
                  },
                  "running_script": true
                }
              }
            ]
          },
          "config": {
            "id": "1674368220338",
            "alias": "MEDIA - Toggle theater mode",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.theater_mode"
                ]
              }
            ],
            "condition": [],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  }
                ],
                "then": [
                  {
                    "service": "input_boolean.turn_off",
                    "data": {},
                    "target": {
                      "entity_id": "switch.adaptive_lighting_living_room"
                    }
                  },
                  {
                    "service": "automation.trigger",
                    "data": {},
                    "target": {
                      "entity_id": "automation.media_theater_mode_playing"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_boolean.turn_on",
                    "data": {},
                    "target": {
                      "entity_id": "switch.adaptive_lighting_living_room"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6B5GNY16H0MR45DZK4AV8K",
            "parent_id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/then/1",
          "run_id": "d2c18694f8d099f2a0ab8f090b7daa53",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:34:51.070789+00:00",
            "finish": "2023-11-26T17:34:51.158198+00:00"
          },
          "domain": "automation",
          "item_id": "1674368220338",
          "trigger": "state of input_boolean.theater_mode"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/else/0",
          "run_id": "19707def48bcd675960948d8d3fc994f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T23:00:54.505975+00:00",
            "finish": "2023-11-26T23:00:54.511451+00:00"
          },
          "domain": "automation",
          "item_id": "1674368220338",
          "trigger": "state of input_boolean.theater_mode",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T23:00:54.506019+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.media_toggle_theater_mode",
                    "state": "on",
                    "attributes": {
                      "id": "1674368220338",
                      "last_triggered": "2023-11-26T17:34:51.070932+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "MEDIA - Toggle theater mode"
                    },
                    "last_changed": "2023-11-26T11:01:53.598148+00:00",
                    "last_updated": "2023-11-26T17:34:51.157779+00:00",
                    "context": {
                      "id": "01HG6B5GNY16H0MR45DZK4AV8K",
                      "parent_id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "from_state": {
                      "entity_id": "input_boolean.theater_mode",
                      "state": "on",
                      "attributes": {
                        "editable": true,
                        "icon": "mdi:theater",
                        "friendly_name": "Theater mode"
                      },
                      "last_changed": "2023-11-26T17:34:51.070028+00:00",
                      "last_updated": "2023-11-26T17:34:51.070028+00:00",
                      "context": {
                        "id": "01HG6B5GNXBCT5RN9M5MFXPG9C",
                        "parent_id": null,
                        "user_id": "a44c24bdbf7c4cb795dd5cd77adf7392"
                      }
                    },
                    "to_state": {
                      "entity_id": "input_boolean.theater_mode",
                      "state": "off",
                      "attributes": {
                        "editable": true,
                        "icon": "mdi:theater",
                        "friendly_name": "Theater mode"
                      },
                      "last_changed": "2023-11-26T23:00:54.504822+00:00",
                      "last_updated": "2023-11-26T23:00:54.504822+00:00",
                      "context": {
                        "id": "01HG6XTHK7PP4PP4YWS846BY3E",
                        "parent_id": null,
                        "user_id": "2eb48afb57034b2eb5b96583279df927"
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of input_boolean.theater_mode"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T23:00:54.508446+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG6XTHK9KSQGPW7G2NJ7CN8H",
                    "parent_id": "01HG6XTHK7PP4PP4YWS846BY3E",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "else"
                }
              }
            ],
            "action/0/if": [
              {
                "path": "action/0/if",
                "timestamp": "2023-11-26T23:00:54.508522+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0": [
              {
                "path": "action/0/if/condition/0",
                "timestamp": "2023-11-26T23:00:54.508555+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/if/condition/0/entity_id/0": [
              {
                "path": "action/0/if/condition/0/entity_id/0",
                "timestamp": "2023-11-26T23:00:54.508588+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ],
            "action/0/else/0": [
              {
                "path": "action/0/else/0",
                "timestamp": "2023-11-26T23:00:54.508888+00:00",
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "switch.adaptive_lighting_living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674368220338",
            "alias": "MEDIA - Toggle theater mode",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "input_boolean.theater_mode"
                ]
              }
            ],
            "condition": [],
            "action": [
              {
                "if": [
                  {
                    "condition": "state",
                    "entity_id": "input_boolean.theater_mode",
                    "state": "on"
                  }
                ],
                "then": [
                  {
                    "service": "input_boolean.turn_off",
                    "data": {},
                    "target": {
                      "entity_id": "switch.adaptive_lighting_living_room"
                    }
                  },
                  {
                    "service": "automation.trigger",
                    "data": {},
                    "target": {
                      "entity_id": "automation.media_theater_mode_playing"
                    }
                  }
                ],
                "else": [
                  {
                    "service": "input_boolean.turn_on",
                    "data": {},
                    "target": {
                      "entity_id": "switch.adaptive_lighting_living_room"
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6XTHK9KSQGPW7G2NJ7CN8H",
            "parent_id": "01HG6XTHK7PP4PP4YWS846BY3E",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/else/0",
          "run_id": "19707def48bcd675960948d8d3fc994f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T23:00:54.505975+00:00",
            "finish": "2023-11-26T23:00:54.511451+00:00"
          },
          "domain": "automation",
          "item_id": "1674368220338",
          "trigger": "state of input_boolean.theater_mode"
        }
      }
    ],
    "automation.1674182650722": [
      {
        "extended_dict": {
          "last_step": "action/2",
          "run_id": "51e3d8f375b7d66b169b881601a1a97c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:54:30.899611+00:00",
            "finish": "2023-11-26T17:54:31.008848+00:00"
          },
          "domain": "automation",
          "item_id": "1674182650722",
          "trigger": "state of group.residents",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T17:54:30.899663+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_off_all_lights_when_away",
                    "state": "on",
                    "attributes": {
                      "id": "1674182650722",
                      "last_triggered": "2023-11-25T23:07:55.234671+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn off all lights when away"
                    },
                    "last_changed": "2023-11-26T11:01:53.597409+00:00",
                    "last_updated": "2023-11-26T11:01:53.597409+00:00",
                    "context": {
                      "id": "01HG5MNZSXEZQMGKTKDVG12NFE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "group.residents",
                    "from_state": {
                      "entity_id": "group.residents",
                      "state": "home",
                      "attributes": {
                        "entity_id": [
                          "person.cecilia_ueda",
                          "sensor.cecilia_redminote8_home",
                          "person.christian_silva",
                          "sensor.christian_christian_sp_home"
                        ],
                        "order": 0,
                        "friendly_name": "Residents"
                      },
                      "last_changed": "2023-11-26T11:02:15.690059+00:00",
                      "last_updated": "2023-11-26T11:02:15.690059+00:00",
                      "context": {
                        "id": "01HG5MPNCASPPHJ9NNATNKQBZ7",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "group.residents",
                      "state": "not_home",
                      "attributes": {
                        "entity_id": [
                          "person.cecilia_ueda",
                          "sensor.cecilia_redminote8_home",
                          "person.christian_silva",
                          "sensor.christian_christian_sp_home"
                        ],
                        "order": 0,
                        "friendly_name": "Residents"
                      },
                      "last_changed": "2023-11-26T17:49:30.898254+00:00",
                      "last_updated": "2023-11-26T17:49:30.898254+00:00",
                      "context": {
                        "id": "01HG6C0BWHXMV621BR8DJEMVJG",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 300.0
                    },
                    "attribute": null,
                    "description": "state of group.residents"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T17:54:30.900024+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG6C9GVK29GC6HQT83CTR5VC",
                    "parent_id": "01HG6C0BWHXMV621BR8DJEMVJG",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom",
                        "living_room",
                        "office",
                        "kitchen"
                      ],
                      "entity_id": [
                        "light.kitchen_light_group"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-26T17:54:30.992259+00:00",
                "result": {
                  "params": {
                    "domain": "switch",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2023-11-26T17:54:31.007221+00:00",
                "result": {
                  "params": {
                    "domain": "remote",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674182650722",
            "alias": "LIGHT - Turn off all lights when away",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "group.residents"
                ],
                "to": "not_home",
                "for": {
                  "hours": 0,
                  "minutes": 5,
                  "seconds": 0
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": [
                    "bedroom",
                    "living_room",
                    "office",
                    "kitchen"
                  ],
                  "entity_id": "light.kitchen_light_group"
                }
              },
              {
                "service": "switch.turn_off",
                "data": {},
                "target": {
                  "area_id": "bedroom"
                }
              },
              {
                "service": "remote.turn_off",
                "data": {},
                "target": {
                  "area_id": "living_room"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6C9GVK29GC6HQT83CTR5VC",
            "parent_id": "01HG6C0BWHXMV621BR8DJEMVJG",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2",
          "run_id": "51e3d8f375b7d66b169b881601a1a97c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T17:54:30.899611+00:00",
            "finish": "2023-11-26T17:54:31.008848+00:00"
          },
          "domain": "automation",
          "item_id": "1674182650722",
          "trigger": "state of group.residents"
        }
      }
    ],
    "automation.1672522611577": [
      {
        "extended_dict": {
          "last_step": "action/0/choose/1/sequence/0",
          "run_id": "1592ed4d1d098bbc2a1ba477d07c84ae",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T20:00:00.094802+00:00",
            "finish": "2023-11-27T20:00:00.107491+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2023-11-27T20:00:00.094876+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-27T01:00:00.288617+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.867712+00:00",
                    "last_updated": "2023-11-27T11:37:20.867712+00:00",
                    "context": {
                      "id": "01HG893M737EQQY2H5BN27Y4SH",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T17:00:00.094500-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T20:00:00.095252+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG95W0JYXMZ62MKRN401J8BC",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 1
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-27T20:00:00.095801+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-27T20:00:00.095835+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00.095854"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2023-11-27T20:00:00.095919+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2023-11-27T20:00:00.095949+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00.095971"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0/choose/1/sequence/0": [
              {
                "path": "action/0/choose/1/sequence/0",
                "timestamp": "2023-11-27T20:00:00.096292+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "shoulder",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG95W0JYXMZ62MKRN401J8BC",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/1/sequence/0",
          "run_id": "1592ed4d1d098bbc2a1ba477d07c84ae",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T20:00:00.094802+00:00",
            "finish": "2023-11-27T20:00:00.107491+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/choose/2/sequence/0",
          "run_id": "9c00f178e861d7d6d671fef6abbc14ab",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:00:00.263496+00:00",
            "finish": "2023-11-27T21:00:00.275312+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2023-11-27T21:00:00.263553+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-27T20:00:00.094990+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.867712+00:00",
                    "last_updated": "2023-11-27T20:00:00.107319+00:00",
                    "context": {
                      "id": "01HG95W0JYXMZ62MKRN401J8BC",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T18:00:00.263291-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T21:00:00.263829+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG999WC76MYAXMT5M8AF7PX6",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-27T21:00:00.263892+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-27T21:00:00.263922+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00.263939"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2023-11-27T21:00:00.264000+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2023-11-27T21:00:00.264027+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00.264042"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/2": [
              {
                "path": "action/0/choose/2",
                "timestamp": "2023-11-27T21:00:00.264090+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/2/conditions/0": [
              {
                "path": "action/0/choose/2/conditions/0",
                "timestamp": "2023-11-27T21:00:00.264116+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00.264130"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0/choose/2/sequence/0": [
              {
                "path": "action/0/choose/2/sequence/0",
                "timestamp": "2023-11-27T21:00:00.264433+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "peak",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG999WC76MYAXMT5M8AF7PX6",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/2/sequence/0",
          "run_id": "9c00f178e861d7d6d671fef6abbc14ab",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:00:00.263496+00:00",
            "finish": "2023-11-27T21:00:00.275312+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/choose/2/sequence/0",
          "run_id": "4b52563bbed2d54e110586c955e244de",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:00:00.151669+00:00",
            "finish": "2023-11-27T22:00:00.155495+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/3": [
              {
                "path": "trigger/3",
                "timestamp": "2023-11-27T22:00:00.151744+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-27T21:00:00.263635+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.867712+00:00",
                    "last_updated": "2023-11-27T21:00:00.275138+00:00",
                    "context": {
                      "id": "01HG999WC76MYAXMT5M8AF7PX6",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "3",
                    "idx": "3",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T19:00:00.151422-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:00:00.152095+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9CQQWQH6A26N3DGBS2T1MC",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 2
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-27T22:00:00.152188+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-27T22:00:00.152244+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00.152260"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2023-11-27T22:00:00.152327+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2023-11-27T22:00:00.152354+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00.152368"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/2": [
              {
                "path": "action/0/choose/2",
                "timestamp": "2023-11-27T22:00:00.152417+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/2/conditions/0": [
              {
                "path": "action/0/choose/2/conditions/0",
                "timestamp": "2023-11-27T22:00:00.152443+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "19:00:00.152459"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0/choose/2/sequence/0": [
              {
                "path": "action/0/choose/2/sequence/0",
                "timestamp": "2023-11-27T22:00:00.152739+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "peak",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9CQQWQH6A26N3DGBS2T1MC",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/2/sequence/0",
          "run_id": "4b52563bbed2d54e110586c955e244de",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:00:00.151669+00:00",
            "finish": "2023-11-27T22:00:00.155495+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/choose/3/sequence/0",
          "run_id": "699525de73543e3cd56e3c694ce57d71",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:00:00.429914+00:00",
            "finish": "2023-11-28T00:00:00.440569+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/4": [
              {
                "path": "trigger/4",
                "timestamp": "2023-11-28T00:00:00.429983+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-27T22:00:00.151856+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.867712+00:00",
                    "last_updated": "2023-11-27T22:00:00.155318+00:00",
                    "context": {
                      "id": "01HG9CQQWQH6A26N3DGBS2T1MC",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "4",
                    "idx": "4",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T21:00:00.429650-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T00:00:00.430260+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9KKFDDBS1M68WPYQG2ETCJ",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 3
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-28T00:00:00.430299+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-28T00:00:00.430315+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00.430322"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2023-11-28T00:00:00.430352+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2023-11-28T00:00:00.430365+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00.430372"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/2": [
              {
                "path": "action/0/choose/2",
                "timestamp": "2023-11-28T00:00:00.430395+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/2/conditions/0": [
              {
                "path": "action/0/choose/2/conditions/0",
                "timestamp": "2023-11-28T00:00:00.430407+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "18:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00.430413"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/choose/3": [
              {
                "path": "action/0/choose/3",
                "timestamp": "2023-11-28T00:00:00.430435+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/3/conditions/0": [
              {
                "path": "action/0/choose/3/conditions/0",
                "timestamp": "2023-11-28T00:00:00.430447+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "21:00:00.430453"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0/choose/3/sequence/0": [
              {
                "path": "action/0/choose/3/sequence/0",
                "timestamp": "2023-11-28T00:00:00.430588+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "shoulder",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9KKFDDBS1M68WPYQG2ETCJ",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/3/sequence/0",
          "run_id": "699525de73543e3cd56e3c694ce57d71",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T00:00:00.429914+00:00",
            "finish": "2023-11-28T00:00:00.440569+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/choose/0/sequence/0",
          "run_id": "de491228e202abc1ccf242204d2d0575",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:00:00.320248+00:00",
            "finish": "2023-11-28T01:00:00.332118+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T01:00:00.320319+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.energy_tariff_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1672522611577",
                      "last_triggered": "2023-11-28T00:00:00.430104+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "ENERGY - Tariff automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.867712+00:00",
                    "last_updated": "2023-11-28T00:00:00.440411+00:00",
                    "context": {
                      "id": "01HG9KKFDDBS1M68WPYQG2ETCJ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T22:00:00.319954-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T01:00:00.320685+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9Q1AY0VAY57W58RK66PDPB",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2023-11-28T01:00:00.320760+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2023-11-28T01:00:00.320791+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "22:00:00.320806"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:00:00"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0/choose/0/sequence/0": [
              {
                "path": "action/0/choose/0/sequence/0",
                "timestamp": "2023-11-28T01:00:00.321112+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "offpeak",
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1672522611577",
            "alias": "ENERGY - Tariff automation",
            "description": "Tariff automation",
            "trigger": [
              {
                "platform": "time",
                "at": "22:00:00"
              },
              {
                "platform": "time",
                "at": "17:00:00"
              },
              {
                "platform": "time",
                "at": "18:00:00"
              },
              {
                "platform": "time",
                "at": "19:00:00"
              },
              {
                "platform": "time",
                "at": "21:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "22:00:00",
                        "before": "17:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "offpeak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "17:00:00",
                        "before": "18:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "18:00:00",
                        "before": "21:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "peak"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "time",
                        "after": "21:00:00",
                        "before": "22:00:00",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "data": {
                          "option": "shoulder"
                        },
                        "target": {
                          "entity_id": [
                            "select.monthly_energy",
                            "select.pc_energy_cost",
                            "select.bedroom_light_energy_cost",
                            "select.electric_blanket_energy_cost",
                            "select.living_room_light_energy_cost",
                            "select.living_room_tv_energy_cost",
                            "select.fan_energy_cost",
                            "select.heater_energy_cost",
                            "select.washer_energy_cost",
                            "select.local_office_light_energy_cost"
                          ]
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "select.select_option",
                    "data": {
                      "option": "offpeak"
                    },
                    "target": {
                      "entity_id": [
                        "select.monthly_energy",
                        "select.pc_energy_cost",
                        "select.bedroom_light_energy_cost",
                        "select.electric_blanket_energy_cost",
                        "select.living_room_light_energy_cost",
                        "select.living_room_tv_energy_cost",
                        "select.fan_energy_cost",
                        "select.heater_energy_cost",
                        "select.washer_energy_cost",
                        "select.local_office_light_energy_cost"
                      ]
                    }
                  }
                ]
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9Q1AY0VAY57W58RK66PDPB",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/0/sequence/0",
          "run_id": "de491228e202abc1ccf242204d2d0575",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:00:00.320248+00:00",
            "finish": "2023-11-28T01:00:00.332118+00:00"
          },
          "domain": "automation",
          "item_id": "1672522611577",
          "trigger": "time"
        }
      }
    ],
    "automation.1684184359544": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "1d4da71dcf6d0b310d61b49f55a660c2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T20:28:02.330083+00:00",
            "finish": "2023-11-26T20:28:02.345491+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T20:28:02.330129+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_blanket_after_3_hours",
                    "state": "on",
                    "attributes": {
                      "id": "1684184359544",
                      "last_triggered": "2023-11-26T02:56:33.527531+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off blanket after 3 hours"
                    },
                    "last_changed": "2023-11-26T11:01:53.600284+00:00",
                    "last_updated": "2023-11-26T11:01:53.600284+00:00",
                    "context": {
                      "id": "01HG5MNZT0SJSNQYEAZ7JYSC2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "switch.local_electric_blanket_socket",
                    "from_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "off",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-26T11:01:53.856024+00:00",
                      "last_updated": "2023-11-26T11:01:53.856024+00:00",
                      "context": {
                        "id": "01HG5MP020P1ET9PM4N1PFHA00",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "on",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-26T20:28:02.328863+00:00",
                      "last_updated": "2023-11-26T20:28:02.328863+00:00",
                      "context": {
                        "id": "01HG6N2MCRS2J2S21ZG2SNZF1R",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of switch.local_electric_blanket_socket"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-26T20:28:02.330479+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG6N2MCT6S1ARGCY4Z8K8NAA",
                    "parent_id": "01HG6N2MCRS2J2S21ZG2SNZF1R",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "number",
                    "service": "set_value",
                    "service_data": {
                      "value": "180",
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684184359544",
            "alias": "SWITCH - Turn off blanket after 3 hours",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "switch.local_electric_blanket_socket"
                ],
                "from": "off",
                "to": "on"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "number.set_value",
                "data": {
                  "value": "180"
                },
                "target": {
                  "entity_id": "number.local_electric_blanket_socket_timer"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6N2MCT6S1ARGCY4Z8K8NAA",
            "parent_id": "01HG6N2MCRS2J2S21ZG2SNZF1R",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "1d4da71dcf6d0b310d61b49f55a660c2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-26T20:28:02.330083+00:00",
            "finish": "2023-11-26T20:28:02.345491+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "a5e6cc605d0447fba13c720f934160d5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T03:06:24.047214+00:00",
            "finish": "2023-11-27T03:06:24.062437+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T03:06:24.047256+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_blanket_after_3_hours",
                    "state": "on",
                    "attributes": {
                      "id": "1684184359544",
                      "last_triggered": "2023-11-26T20:28:02.330241+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off blanket after 3 hours"
                    },
                    "last_changed": "2023-11-26T11:01:53.600284+00:00",
                    "last_updated": "2023-11-26T20:28:02.345310+00:00",
                    "context": {
                      "id": "01HG6N2MCT6S1ARGCY4Z8K8NAA",
                      "parent_id": "01HG6N2MCRS2J2S21ZG2SNZF1R",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "switch.local_electric_blanket_socket",
                    "from_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "off",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-26T21:17:37.260170+00:00",
                      "last_updated": "2023-11-26T21:17:37.260170+00:00",
                      "context": {
                        "id": "01HG6QXDKCBTNR1JHV7MK3PTFE",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "on",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-27T03:06:24.045922+00:00",
                      "last_updated": "2023-11-27T03:06:24.045922+00:00",
                      "context": {
                        "id": "01HG7BW1XDGMGJRD4B2WV7KVK9",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of switch.local_electric_blanket_socket"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T03:06:24.048273+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG7BW1XFW8CHWHMPGZP3QDHB",
                    "parent_id": "01HG7BW1XDGMGJRD4B2WV7KVK9",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "number",
                    "service": "set_value",
                    "service_data": {
                      "value": "180",
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684184359544",
            "alias": "SWITCH - Turn off blanket after 3 hours",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "switch.local_electric_blanket_socket"
                ],
                "from": "off",
                "to": "on"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "number.set_value",
                "data": {
                  "value": "180"
                },
                "target": {
                  "entity_id": "number.local_electric_blanket_socket_timer"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG7BW1XFW8CHWHMPGZP3QDHB",
            "parent_id": "01HG7BW1XDGMGJRD4B2WV7KVK9",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "a5e6cc605d0447fba13c720f934160d5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T03:06:24.047214+00:00",
            "finish": "2023-11-27T03:06:24.062437+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "54e398c053386ccd16315d175db9e51b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:30:42.751923+00:00",
            "finish": "2023-11-28T01:30:42.767714+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T01:30:42.751962+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_turn_off_blanket_after_3_hours",
                    "state": "on",
                    "attributes": {
                      "id": "1684184359544",
                      "last_triggered": "2023-11-27T03:06:24.047345+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SWITCH - Turn off blanket after 3 hours"
                    },
                    "last_changed": "2023-11-27T11:37:20.871847+00:00",
                    "last_updated": "2023-11-27T11:37:20.871847+00:00",
                    "context": {
                      "id": "01HG893M77680W9GBFAJH9ASES",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "switch.local_electric_blanket_socket",
                    "from_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "off",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-27T11:37:21.146704+00:00",
                      "last_updated": "2023-11-27T11:37:21.146704+00:00",
                      "context": {
                        "id": "01HG893MFTA35WZJJVWCH991ZF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "switch.local_electric_blanket_socket",
                      "state": "on",
                      "attributes": {
                        "test_bit": 1,
                        "fault_code": 0,
                        "cycle_timer": "",
                        "random_timer": "",
                        "device_class": "outlet",
                        "friendly_name": "Local Electric blanket Socket"
                      },
                      "last_changed": "2023-11-28T01:30:42.750715+00:00",
                      "last_updated": "2023-11-28T01:30:42.750715+00:00",
                      "context": {
                        "id": "01HG9RSJ5YACE64383EN786RBW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of switch.local_electric_blanket_socket"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T01:30:42.752307+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9RSJ5Z70GPJS0NEV0E5QKN",
                    "parent_id": "01HG9RSJ5YACE64383EN786RBW",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "number",
                    "service": "set_value",
                    "service_data": {
                      "value": "180",
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "number.local_electric_blanket_socket_timer"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684184359544",
            "alias": "SWITCH - Turn off blanket after 3 hours",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "switch.local_electric_blanket_socket"
                ],
                "from": "off",
                "to": "on"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "number.set_value",
                "data": {
                  "value": "180"
                },
                "target": {
                  "entity_id": "number.local_electric_blanket_socket_timer"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9RSJ5Z70GPJS0NEV0E5QKN",
            "parent_id": "01HG9RSJ5YACE64383EN786RBW",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "54e398c053386ccd16315d175db9e51b",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:30:42.751923+00:00",
            "finish": "2023-11-28T01:30:42.767714+00:00"
          },
          "domain": "automation",
          "item_id": "1684184359544",
          "trigger": "state of switch.local_electric_blanket_socket"
        }
      }
    ],
    "automation.1684209757433": [
      {
        "extended_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "842d6bb6990a8a9234639df2ec8f7cac",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T20:30:00.202073+00:00",
            "finish": "2023-11-26T20:30:00.202260+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-26T20:30:00.202122+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_off_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209757433",
                      "last_triggered": "2023-11-24T20:30:00.317787+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn off automation"
                    },
                    "last_changed": "2023-11-26T11:01:53.601210+00:00",
                    "last_updated": "2023-11-26T11:01:53.601210+00:00",
                    "context": {
                      "id": "01HG5MNZT176TP9HC55MA0HJHE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-26T17:30:00.201833-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-26T20:30:00.202160+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-26T20:30:00.202188+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:29:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:30:00.202202"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "mon"
                  ],
                  "now_weekday": "sun",
                  "result": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209757433",
            "alias": "HEATER - Turn off automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "17:30:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "17:29:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri",
                      "mon"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_off",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG6N67GA1282AJKQPP5FQ4XE",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/conditions/0",
          "run_id": "842d6bb6990a8a9234639df2ec8f7cac",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2023-11-26T20:30:00.202073+00:00",
            "finish": "2023-11-26T20:30:00.202260+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "cb1af47b78202f5632ba004a7baacdf7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T20:30:00.154811+00:00",
            "finish": "2023-11-27T20:30:00.156400+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T20:30:00.154853+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.heater_turn_off_automation",
                    "state": "on",
                    "attributes": {
                      "id": "1684209757433",
                      "last_triggered": "2023-11-24T20:30:00.317787+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "HEATER - Turn off automation"
                    },
                    "last_changed": "2023-11-27T11:37:20.872740+00:00",
                    "last_updated": "2023-11-27T11:37:20.872740+00:00",
                    "context": {
                      "id": "01HG893M78MA0GGHC97E9K2193",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T17:30:00.154509-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2023-11-27T20:30:00.154894+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "condition/0/conditions/0": [
              {
                "path": "condition/0/conditions/0",
                "timestamp": "2023-11-27T20:30:00.154923+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:29:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:30:00.154939"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "tue",
                    "wed",
                    "thu",
                    "fri",
                    "mon"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T20:30:00.155355+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG97JYET2YYR6YNT8ZP1ZTJ5",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.heater_automation"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684209757433",
            "alias": "HEATER - Turn off automation",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "17:30:00"
              }
            ],
            "condition": [
              {
                "condition": "or",
                "conditions": [
                  {
                    "condition": "time",
                    "after": "17:29:00",
                    "weekday": [
                      "tue",
                      "wed",
                      "thu",
                      "fri",
                      "mon"
                    ]
                  }
                ]
              }
            ],
            "action": [
              {
                "service": "input_boolean.turn_off",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.heater_automation"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG97JYET2YYR6YNT8ZP1ZTJ5",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "cb1af47b78202f5632ba004a7baacdf7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T20:30:00.154811+00:00",
            "finish": "2023-11-27T20:30:00.156400+00:00"
          },
          "domain": "automation",
          "item_id": "1684209757433",
          "trigger": "time"
        }
      }
    ],
    "automation.1680553973480": [
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "9af9e79bcb128d60288274c485760fd2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T02:57:34.534627+00:00",
            "finish": "2023-11-27T02:57:34.606567+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T02:57:34.534649+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-26T23:06:22.426313+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-26T11:01:53.599478+00:00",
                    "last_updated": "2023-11-26T23:06:22.506552+00:00",
                    "context": {
                      "id": "01HG6Y4HTTGJTQ4Y0P6WRH7Q5Z",
                      "parent_id": "01HG6Y4HTSXC6JMT73VTE017JZ",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T02:57:34.534503+00:00",
                      "context": {
                        "id": "01HG7BBWT66QMCPQXKFVDVXHB7",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T02:57:34.534820+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG7BBWT6YX7PFB4VYE0JMT5A",
                    "parent_id": "01HG7BBWT66QMCPQXKFVDVXHB7",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T02:57:34.535025+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T02:57:34.535060+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T02:57:34.535075+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T02:57:34.535127+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T02:57:34.535173+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T02:57:34.535335+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG7BBWT6YX7PFB4VYE0JMT5A",
            "parent_id": "01HG7BBWT66QMCPQXKFVDVXHB7",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "9af9e79bcb128d60288274c485760fd2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T02:57:34.534627+00:00",
            "finish": "2023-11-27T02:57:34.606567+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "077d63fee399de9b9f3289a339555eba",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:39:21.658594+00:00",
            "finish": "2023-11-27T21:39:21.736353+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T21:39:21.658630+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-27T02:57:34.534701+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871034+00:00",
                    "last_updated": "2023-11-27T11:37:20.871034+00:00",
                    "context": {
                      "id": "01HG893M774S1P61C4Z89DCM2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T21:39:21.658325+00:00",
                      "context": {
                        "id": "01HG9BHYDTHR6SHEP85DJ9J3WC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T21:39:21.658951+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9BHYDTRP7Q4DNKPGBHYGE7",
                    "parent_id": "01HG9BHYDTHR6SHEP85DJ9J3WC",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T21:39:21.659479+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T21:39:21.660432+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T21:39:21.660470+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T21:39:21.660613+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T21:39:21.660745+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T21:39:21.661121+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9BHYDTRP7Q4DNKPGBHYGE7",
            "parent_id": "01HG9BHYDTHR6SHEP85DJ9J3WC",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "077d63fee399de9b9f3289a339555eba",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:39:21.658594+00:00",
            "finish": "2023-11-27T21:39:21.736353+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "74a271ad89971f60fb6ea45fe0f14e21",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:38:15.317327+00:00",
            "finish": "2023-11-27T22:38:17.005108+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T22:38:15.317364+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-27T21:39:21.658734+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871034+00:00",
                    "last_updated": "2023-11-27T21:39:21.735804+00:00",
                    "context": {
                      "id": "01HG9BHYDTRP7Q4DNKPGBHYGE7",
                      "parent_id": "01HG9BHYDTHR6SHEP85DJ9J3WC",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T22:38:15.317084+00:00",
                      "context": {
                        "id": "01HG9EXS8N8RFQYVWN8F28TSV0",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:38:15.317667+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9EXS8N29C2ER0F94PZPSHC",
                    "parent_id": "01HG9EXS8N8RFQYVWN8F28TSV0",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T22:38:15.318059+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T22:38:15.318127+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T22:38:15.318159+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T22:38:15.318267+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T22:38:15.318362+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T22:38:15.318701+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9EXS8N29C2ER0F94PZPSHC",
            "parent_id": "01HG9EXS8N8RFQYVWN8F28TSV0",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "74a271ad89971f60fb6ea45fe0f14e21",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:38:15.317327+00:00",
            "finish": "2023-11-27T22:38:17.005108+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "b3043cbb7d420be28f8f5b889db7591a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:56:17.241400+00:00",
            "finish": "2023-11-27T22:56:17.321029+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T22:56:17.241461+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-27T22:38:15.317457+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871034+00:00",
                    "last_updated": "2023-11-27T22:38:17.003557+00:00",
                    "context": {
                      "id": "01HG9EXS8N29C2ER0F94PZPSHC",
                      "parent_id": "01HG9EXS8N8RFQYVWN8F28TSV0",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T22:56:17.241149+00:00",
                      "context": {
                        "id": "01HG9FYSTS424PDJC6ENZ6F1WB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:56:17.241797+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9FYSTSV4SGVDR0NHSGZQKY",
                    "parent_id": "01HG9FYSTS424PDJC6ENZ6F1WB",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T22:56:17.242201+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T22:56:17.242271+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T22:56:17.242305+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T22:56:17.242412+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T22:56:17.242506+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T22:56:17.242843+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9FYSTSV4SGVDR0NHSGZQKY",
            "parent_id": "01HG9FYSTS424PDJC6ENZ6F1WB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "b3043cbb7d420be28f8f5b889db7591a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:56:17.241400+00:00",
            "finish": "2023-11-27T22:56:17.321029+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "3cb5593b1e0bd4d0642b34f83bd62a39",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T03:30:12.961270+00:00",
            "finish": "2023-11-28T03:30:13.041875+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T03:30:12.961330+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_living_room_light",
                    "state": "on",
                    "attributes": {
                      "id": "1680553973480",
                      "last_triggered": "2023-11-27T22:56:17.241560+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Living room light"
                    },
                    "last_changed": "2023-11-27T11:37:20.871034+00:00",
                    "last_updated": "2023-11-27T22:56:17.320863+00:00",
                    "context": {
                      "id": "01HG9FYSTSV4SGVDR0NHSGZQKY",
                      "parent_id": "01HG9FYSTS424PDJC6ENZ6F1WB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:8d",
                        "unique_id": "00:12:4b:00:25:10:d4:8d:1:0x0006",
                        "device_id": "dce92ffa17e37194c258023c978b2cb9",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T03:30:12.960983+00:00",
                      "context": {
                        "id": "01HG9ZMCB0ZHR2JE8TQJC8D5RW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T03:30:12.963030+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9ZMCB195JXEMSVCKSRPJHW",
                    "parent_id": "01HG9ZMCB0ZHR2JE8TQJC8D5RW",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T03:30:12.963434+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T03:30:12.963505+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T03:30:12.963535+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T03:30:12.963639+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T03:30:12.963729+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T03:30:12.964084+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "living_room"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "dce92ffa17e37194c258023c978b2cb9"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {},
                        "target": {
                          "area_id": "living_room"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1680553973480",
            "alias": "SWITCH - Living room light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "dce92ffa17e37194c258023c978b2cb9",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {},
                    "target": {
                      "area_id": "living_room"
                    }
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9ZMCB195JXEMSVCKSRPJHW",
            "parent_id": "01HG9ZMCB0ZHR2JE8TQJC8D5RW",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "3cb5593b1e0bd4d0642b34f83bd62a39",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T03:30:12.961270+00:00",
            "finish": "2023-11-28T03:30:13.041875+00:00"
          },
          "domain": "automation",
          "item_id": "1680553973480",
          "trigger": "event 'zha_event'"
        }
      }
    ],
    "automation.1674924848329": [
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "8aa3be10c417f7a1ccb5262499aec4da",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T01:39:26.272923+00:00",
            "finish": "2023-11-27T01:39:26.288522+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T01:39:26.272995+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-27T01:38:38.071751+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-26T11:01:53.598495+00:00",
                    "last_updated": "2023-11-27T01:38:38.088662+00:00",
                    "context": {
                      "id": "01HG76VBBQZGYYWT3M566JHX2N",
                      "parent_id": "01HG76VBBQ37E1RVP3M42ZGGNF",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T01:39:26.272769+00:00",
                      "context": {
                        "id": "01HG76WTE0BGBH1M1GQPPDN8XN",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T01:39:26.273279+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG76WTE02SEK6QA4NYCK247R",
                    "parent_id": "01HG76WTE0BGBH1M1GQPPDN8XN",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T01:39:26.273605+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T01:39:26.273644+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T01:39:26.273666+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T01:39:26.273750+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T01:39:26.273826+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T01:39:26.274056+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG76WTE02SEK6QA4NYCK247R",
            "parent_id": "01HG76WTE0BGBH1M1GQPPDN8XN",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "8aa3be10c417f7a1ccb5262499aec4da",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T01:39:26.272923+00:00",
            "finish": "2023-11-27T01:39:26.288522+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "1d59f8402cb82c1b801648ab766c6c1f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:10:24.848882+00:00",
            "finish": "2023-11-27T22:10:24.869496+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T22:10:24.848942+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-27T01:39:26.273092+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.870083+00:00",
                    "last_updated": "2023-11-27T11:37:20.870083+00:00",
                    "context": {
                      "id": "01HG893M76XSFT49GPDZMHJRM5",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T22:10:24.848617+00:00",
                      "context": {
                        "id": "01HG9DASYGXGS1PPPPTVPG9PDW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:10:24.849286+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9DASYGBY88ECCRRMFYPBW8",
                    "parent_id": "01HG9DASYGXGS1PPPPTVPG9PDW",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T22:10:24.849814+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T22:10:24.850135+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T22:10:24.850167+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T22:10:24.850301+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T22:10:24.850421+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T22:10:24.850787+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9DASYGBY88ECCRRMFYPBW8",
            "parent_id": "01HG9DASYGXGS1PPPPTVPG9PDW",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "1d59f8402cb82c1b801648ab766c6c1f",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:10:24.848882+00:00",
            "finish": "2023-11-27T22:10:24.869496+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "8af95bd5529a4a2b9a03faa997284bcb",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:58:39.591744+00:00",
            "finish": "2023-11-27T22:58:39.608785+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T22:58:39.591802+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-27T22:10:24.849047+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.870083+00:00",
                    "last_updated": "2023-11-27T22:10:24.869320+00:00",
                    "context": {
                      "id": "01HG9DASYGBY88ECCRRMFYPBW8",
                      "parent_id": "01HG9DASYGXGS1PPPPTVPG9PDW",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-27T22:58:39.591506+00:00",
                      "context": {
                        "id": "01HG9G34V7W80RTZ08G1ZTN232",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:58:39.592104+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9G34V7GT6APYA959T1V983",
                    "parent_id": "01HG9G34V7W80RTZ08G1ZTN232",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T22:58:39.592523+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-27T22:58:39.592593+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-27T22:58:39.592626+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-27T22:58:39.592733+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-27T22:58:39.592826+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-27T22:58:39.593166+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9G34V7GT6APYA959T1V983",
            "parent_id": "01HG9G34V7W80RTZ08G1ZTN232",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "8af95bd5529a4a2b9a03faa997284bcb",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:58:39.591744+00:00",
            "finish": "2023-11-27T22:58:39.608785+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "8c3bea2f4f7c06d403f724d16a479ada",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:12:25.561887+00:00",
            "finish": "2023-11-28T01:12:25.578686+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T01:12:25.561944+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-27T22:58:39.591896+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.870083+00:00",
                    "last_updated": "2023-11-27T22:58:39.608609+00:00",
                    "context": {
                      "id": "01HG9G34V7GT6APYA959T1V983",
                      "parent_id": "01HG9G34V7W80RTZ08G1ZTN232",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T01:12:25.561631+00:00",
                      "context": {
                        "id": "01HG9QR2PSSX6X41NXPTZ4C0M3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T01:12:25.562266+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9QR2PS97AE97MTVQDVSEHE",
                    "parent_id": "01HG9QR2PSSX6X41NXPTZ4C0M3",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T01:12:25.562659+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T01:12:25.562725+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T01:12:25.562757+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T01:12:25.562860+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T01:12:25.562950+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T01:12:25.563290+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9QR2PS97AE97MTVQDVSEHE",
            "parent_id": "01HG9QR2PSSX6X41NXPTZ4C0M3",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "8c3bea2f4f7c06d403f724d16a479ada",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:12:25.561887+00:00",
            "finish": "2023-11-28T01:12:25.578686+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "d4f7aac54b74558f059b08c90122c033",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:12:37.728707+00:00",
            "finish": "2023-11-28T01:12:37.745287+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T01:12:37.728796+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.switch_toggle_office_light",
                    "state": "on",
                    "attributes": {
                      "id": "1674924848329",
                      "last_triggered": "2023-11-28T01:12:25.562035+00:00",
                      "mode": "restart",
                      "current": 0,
                      "friendly_name": "SWITCH - Toggle Office light"
                    },
                    "last_changed": "2023-11-27T11:37:20.870083+00:00",
                    "last_updated": "2023-11-28T01:12:25.578478+00:00",
                    "context": {
                      "id": "01HG9QR2PS97AE97MTVQDVSEHE",
                      "parent_id": "01HG9QR2PSSX6X41NXPTZ4C0M3",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "event",
                    "event": {
                      "event_type": "zha_event",
                      "data": {
                        "device_ieee": "00:12:4b:00:25:10:d4:93",
                        "unique_id": "00:12:4b:00:25:10:d4:93:1:0x0006",
                        "device_id": "5edfb7a20cc6bb8f565bac615b96acb1",
                        "endpoint_id": 1,
                        "cluster_id": 6,
                        "command": "toggle",
                        "args": [],
                        "params": {}
                      },
                      "origin": "LOCAL",
                      "time_fired": "2023-11-28T01:12:37.728454+00:00",
                      "context": {
                        "id": "01HG9QREK0ZHRPK7SMEQE44T63",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "description": "event 'zha_event'"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T01:12:37.729104+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9QREK0PRXP7B06Z0WRTD4E",
                    "parent_id": "01HG9QREK0ZHRPK7SMEQE44T63",
                    "user_id": null
                  }
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T01:12:37.729529+00:00",
                "changed_variables": {
                  "command": "toggle",
                  "cluster_id": 6,
                  "endpoint_id": 1
                },
                "result": {
                  "choice": 0
                }
              }
            ],
            "action/1/choose/0": [
              {
                "path": "action/1/choose/0",
                "timestamp": "2023-11-28T01:12:37.729597+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/1/choose/0/conditions/0": [
              {
                "path": "action/1/choose/0/conditions/0",
                "timestamp": "2023-11-28T01:12:37.729628+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/1": [
              {
                "path": "action/1/choose/0/conditions/1",
                "timestamp": "2023-11-28T01:12:37.729735+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/conditions/2": [
              {
                "path": "action/1/choose/0/conditions/2",
                "timestamp": "2023-11-28T01:12:37.729828+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/1/choose/0/sequence/0": [
              {
                "path": "action/1/choose/0/sequence/0",
                "timestamp": "2023-11-28T01:12:37.730165+00:00",
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "toggle",
                    "service_data": {
                      "transition": 30,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "mode": "restart",
            "max_exceeded": "silent",
            "trigger": [
              {
                "platform": "event",
                "event_type": "zha_event",
                "event_data": {
                  "device_id": "5edfb7a20cc6bb8f565bac615b96acb1"
                }
              }
            ],
            "action": [
              {
                "variables": {
                  "command": "{{ trigger.event.data.command }}",
                  "cluster_id": "{{ trigger.event.data.cluster_id }}",
                  "endpoint_id": "{{ trigger.event.data.endpoint_id }}"
                }
              },
              {
                "choose": [
                  {
                    "conditions": [
                      "{{ command == \"toggle\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "light.toggle",
                        "data": {
                          "transition": 30
                        },
                        "target": {
                          "area_id": "office"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"on\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": [
                      {
                        "service": "script.turn_on_off_christian_pc",
                        "data": {}
                      }
                    ]
                  },
                  {
                    "conditions": [
                      "{{ command == \"off\" }}",
                      "{{ cluster_id == 6 }}",
                      "{{ endpoint_id == 1 }}"
                    ],
                    "sequence": []
                  }
                ]
              }
            ],
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": ""
          },
          "blueprint_inputs": {
            "id": "1674924848329",
            "alias": "SWITCH - Toggle Office light",
            "description": "",
            "use_blueprint": {
              "path": "seamus65/ZHA - Sonoff SNZB-01.yaml",
              "input": {
                "remote": "5edfb7a20cc6bb8f565bac615b96acb1",
                "single_press": [
                  {
                    "service": "light.toggle",
                    "data": {
                      "transition": 30
                    },
                    "target": {
                      "area_id": "office"
                    }
                  }
                ],
                "double_press": [
                  {
                    "service": "script.turn_on_off_christian_pc",
                    "data": {}
                  }
                ]
              }
            }
          },
          "context": {
            "id": "01HG9QREK0PRXP7B06Z0WRTD4E",
            "parent_id": "01HG9QREK0ZHRPK7SMEQE44T63",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1/choose/0/sequence/0",
          "run_id": "d4f7aac54b74558f059b08c90122c033",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T01:12:37.728707+00:00",
            "finish": "2023-11-28T01:12:37.745287+00:00"
          },
          "domain": "automation",
          "item_id": "1674924848329",
          "trigger": "event 'zha_event'"
        }
      }
    ],
    "automation.1675913952899": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "1093c445fb773ac9f3d579443f1921c3",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T04:00:00.186137+00:00",
            "finish": "2023-11-27T04:00:00.187555+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T04:00:00.186189+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_sleep_time",
                    "state": "on",
                    "attributes": {
                      "id": "1675913952899",
                      "last_triggered": "2023-11-26T04:00:00.053335+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on sleep time"
                    },
                    "last_changed": "2023-11-26T11:01:53.598835+00:00",
                    "last_updated": "2023-11-26T11:01:53.598835+00:00",
                    "context": {
                      "id": "01HG5MNZSY8RMN54846HHAZHNR",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T01:00:00.185880-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T04:00:00.186577+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG7EY6NTZDG4170H4JJTQG7E",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.sleep_time"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1675913952899",
            "alias": "LIGHT - Turn on sleep time",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.sleep_time"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG7EY6NTZDG4170H4JJTQG7E",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "1093c445fb773ac9f3d579443f1921c3",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T04:00:00.186137+00:00",
            "finish": "2023-11-27T04:00:00.187555+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "f8149173f8bc22e9a61d848304397736",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T04:00:00.093795+00:00",
            "finish": "2023-11-28T04:00:00.094685+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T04:00:00.093820+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_on_sleep_time",
                    "state": "on",
                    "attributes": {
                      "id": "1675913952899",
                      "last_triggered": "2023-11-27T04:00:00.186316+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn on sleep time"
                    },
                    "last_changed": "2023-11-27T11:37:20.870390+00:00",
                    "last_updated": "2023-11-27T11:37:20.870390+00:00",
                    "context": {
                      "id": "01HG893M76YD0G50GBYZWXG6YM",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T01:00:00.093612-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T04:00:00.094028+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGA1AXJXHQR2TPANJRK5C1ZG",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "input_boolean",
                    "service": "turn_on",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "input_boolean.sleep_time"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1675913952899",
            "alias": "LIGHT - Turn on sleep time",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "input_boolean.turn_on",
                "data": {},
                "target": {
                  "entity_id": "input_boolean.sleep_time"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGA1AXJXHQR2TPANJRK5C1ZG",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "f8149173f8bc22e9a61d848304397736",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T04:00:00.093795+00:00",
            "finish": "2023-11-28T04:00:00.094685+00:00"
          },
          "domain": "automation",
          "item_id": "1675913952899",
          "trigger": "time"
        }
      }
    ],
    "automation.1697494475587": [
      {
        "extended_dict": {
          "last_step": "action/1",
          "run_id": "f023dad8903fe6d97abb9614fd8dddb0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T04:00:00.220927+00:00",
            "finish": "2023-11-27T04:00:00.715636+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T04:00:00.220964+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.turn_off_server",
                    "state": "on",
                    "attributes": {
                      "id": "1697494475587",
                      "last_triggered": "2023-11-26T04:00:00.309666+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SERVER - Turn off"
                    },
                    "last_changed": "2023-11-26T11:01:53.601843+00:00",
                    "last_updated": "2023-11-26T11:01:53.601843+00:00",
                    "context": {
                      "id": "01HG5MNZT1FCS836DRMGVW5Q7X",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-27T01:00:00.220710-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T04:00:00.221278+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG7EY6PWMYXJD4WM9833YTVK",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom",
                        "kitchen",
                        "living_room",
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-27T04:00:00.317224+00:00",
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "server_shutdown",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1697494475587",
            "alias": "Turn off server",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": [
                    "bedroom",
                    "kitchen",
                    "living_room",
                    "office"
                  ]
                },
                "enabled": true
              },
              {
                "service": "shell_command.server_shutdown",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG7EY6PWMYXJD4WM9833YTVK",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1",
          "run_id": "f023dad8903fe6d97abb9614fd8dddb0",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T04:00:00.220927+00:00",
            "finish": "2023-11-27T04:00:00.715636+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/1",
          "run_id": "0145bd8e0736c0ace7ff7cde33ded9b7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T04:00:00.353886+00:00",
            "finish": "2023-11-28T04:00:00.828060+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-28T04:00:00.353908+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.turn_off_server",
                    "state": "on",
                    "attributes": {
                      "id": "1697494475587",
                      "last_triggered": "2023-11-27T04:00:00.221076+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "SERVER - Turn off"
                    },
                    "last_changed": "2023-11-27T11:37:20.873440+00:00",
                    "last_updated": "2023-11-27T11:37:20.873440+00:00",
                    "context": {
                      "id": "01HG893M7993TNH9G2KCNEGRGD",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "time",
                    "now": "2023-11-28T01:00:00.353748-03:00",
                    "description": "time",
                    "entity_id": null
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-28T04:00:00.354096+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HGA1AXV13S26EAMSBF6P8GWM",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "area_id": [
                        "bedroom",
                        "kitchen",
                        "living_room",
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2023-11-28T04:00:00.455719+00:00",
                "result": {
                  "params": {
                    "domain": "shell_command",
                    "service": "server_shutdown",
                    "service_data": {},
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1697494475587",
            "alias": "Turn off server",
            "description": "",
            "trigger": [
              {
                "platform": "time",
                "at": "01:00:00"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {},
                "target": {
                  "area_id": [
                    "bedroom",
                    "kitchen",
                    "living_room",
                    "office"
                  ]
                },
                "enabled": true
              },
              {
                "service": "shell_command.server_shutdown",
                "data": {}
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HGA1AXV13S26EAMSBF6P8GWM",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/1",
          "run_id": "0145bd8e0736c0ace7ff7cde33ded9b7",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-28T04:00:00.353886+00:00",
            "finish": "2023-11-28T04:00:00.828060+00:00"
          },
          "domain": "automation",
          "item_id": "1697494475587",
          "trigger": "time"
        }
      }
    ],
    "automation.1684185616423": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "90aa9884b95150e0683a027dadfc2cb5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T16:40:34.469723+00:00",
            "finish": "2023-11-27T16:40:35.516619+00:00"
          },
          "domain": "automation",
          "item_id": "1684185616423",
          "trigger": "state of vacuum.local_cleaner_robot",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T16:40:34.469767+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.vacuum_work_is_done",
                    "state": "on",
                    "attributes": {
                      "id": "1684185616423",
                      "last_triggered": "2023-11-24T16:25:20.829595+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "VACUUM - Work is done"
                    },
                    "last_changed": "2023-11-27T11:37:20.872071+00:00",
                    "last_updated": "2023-11-27T11:37:20.872071+00:00",
                    "context": {
                      "id": "01HG893M7866FWJM3DSC5K7ZG0",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "vacuum.local_cleaner_robot",
                    "from_state": {
                      "entity_id": "vacuum.local_cleaner_robot",
                      "state": "cleaning",
                      "attributes": {
                        "fan_speed_list": [
                          "Low",
                          "Medium",
                          "High"
                        ],
                        "fan_speed": "High",
                        "power": true,
                        "error": 0,
                        "activate": true,
                        "direction_control": "foward",
                        "command": "single_room",
                        "status": "cleaning",
                        "friendly_name": "Local Cleaner Robot",
                        "supported_features": 14263
                      },
                      "last_changed": "2023-11-27T16:33:59.883129+00:00",
                      "last_updated": "2023-11-27T16:34:00.107605+00:00",
                      "context": {
                        "id": "01HG8T2T9BVRZWVETZHFX4408E",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "vacuum.local_cleaner_robot",
                      "state": "cleaning",
                      "attributes": {
                        "fan_speed_list": [
                          "Low",
                          "Medium",
                          "High"
                        ],
                        "fan_speed": "High",
                        "power": true,
                        "error": 0,
                        "activate": true,
                        "direction_control": "foward",
                        "command": "single_room",
                        "status": "workcompleted",
                        "friendly_name": "Local Cleaner Robot",
                        "supported_features": 14263
                      },
                      "last_changed": "2023-11-27T16:33:59.883129+00:00",
                      "last_updated": "2023-11-27T16:40:34.468918+00:00",
                      "context": {
                        "id": "01HG8TEVD4MNT4ZF410X3ATYJ4",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": "status",
                    "description": "state of vacuum.local_cleaner_robot"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T16:40:34.470094+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG8TEVD5PT0G3Y3HZ6SY85HA",
                    "parent_id": "01HG8TEVD4MNT4ZF410X3ATYJ4",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "notify",
                    "service_data": {
                      "title": "Vacuum cleaner",
                      "message": "Job completed"
                    },
                    "target": {}
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1684185616423",
            "alias": "VACUUM - Work is done",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "vacuum.local_cleaner_robot"
                ],
                "attribute": "status",
                "to": "workcompleted"
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "notify.notify",
                "data": {
                  "title": "Vacuum cleaner",
                  "message": "Job completed"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG8TEVD5PT0G3Y3HZ6SY85HA",
            "parent_id": "01HG8TEVD4MNT4ZF410X3ATYJ4",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "90aa9884b95150e0683a027dadfc2cb5",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T16:40:34.469723+00:00",
            "finish": "2023-11-27T16:40:35.516619+00:00"
          },
          "domain": "automation",
          "item_id": "1684185616423",
          "trigger": "state of vacuum.local_cleaner_robot"
        }
      }
    ],
    "automation.1674779503847": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "feefce2c4da9bb8b27cb63b07e225477",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:12:31.021694+00:00",
            "finish": "2023-11-27T21:12:31.036929+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T21:12:31.021721+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_off_office",
                    "state": "on",
                    "attributes": {
                      "id": "1674779503847",
                      "last_triggered": "2023-11-25T22:46:17.326539+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn off Office"
                    },
                    "last_changed": "2023-11-27T11:37:20.869933+00:00",
                    "last_updated": "2023-11-27T11:37:20.869933+00:00",
                    "context": {
                      "id": "01HG893M75Y9WBSP4BDVEF8C3T",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "group.computers",
                    "from_state": {
                      "entity_id": "group.computers",
                      "state": "on",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-27T11:37:47.013821+00:00",
                      "last_updated": "2023-11-27T11:37:47.013821+00:00",
                      "context": {
                        "id": "01HG894DR5EARV3Z625KMDZ8BR",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "group.computers",
                      "state": "off",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-27T21:12:01.019490+00:00",
                      "last_updated": "2023-11-27T21:12:01.019490+00:00",
                      "context": {
                        "id": "01HG99ZW7VFYBDCCKA2H9WGECB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 30.0
                    },
                    "attribute": null,
                    "description": "state of group.computers"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T21:12:31.021937+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9A0SHDVC5MWPT0GH63MX1X",
                    "parent_id": "01HG99ZW7VFYBDCCKA2H9WGECB",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "transition": 5,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674779503847",
            "alias": "LIGHT - Turn off Office",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "group.computers"
                ],
                "from": "on",
                "to": "off",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9A0SHDVC5MWPT0GH63MX1X",
            "parent_id": "01HG99ZW7VFYBDCCKA2H9WGECB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "feefce2c4da9bb8b27cb63b07e225477",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T21:12:31.021694+00:00",
            "finish": "2023-11-27T21:12:31.036929+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "5c3459b2392ff627c7283e5a11fb3d44",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:59:31.232938+00:00",
            "finish": "2023-11-27T22:59:31.247646+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2023-11-27T22:59:31.232977+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.light_turn_off_office",
                    "state": "on",
                    "attributes": {
                      "id": "1674779503847",
                      "last_triggered": "2023-11-27T21:12:31.021782+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "LIGHT - Turn off Office"
                    },
                    "last_changed": "2023-11-27T11:37:20.869933+00:00",
                    "last_updated": "2023-11-27T21:12:31.036845+00:00",
                    "context": {
                      "id": "01HG9A0SHDVC5MWPT0GH63MX1X",
                      "parent_id": "01HG99ZW7VFYBDCCKA2H9WGECB",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "alias": null,
                    "platform": "state",
                    "entity_id": "group.computers",
                    "from_state": {
                      "entity_id": "group.computers",
                      "state": "on",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-27T22:09:56.099480+00:00",
                      "last_updated": "2023-11-27T22:09:56.099480+00:00",
                      "context": {
                        "id": "01HG9D9XW3GHPFQR4RTJGRGQ1N",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "group.computers",
                      "state": "off",
                      "attributes": {
                        "entity_id": [
                          "binary_sensor.cecilia_pc",
                          "binary_sensor.christian_pc"
                        ],
                        "order": 3,
                        "friendly_name": "computers"
                      },
                      "last_changed": "2023-11-27T22:59:01.231386+00:00",
                      "last_updated": "2023-11-27T22:59:01.231386+00:00",
                      "context": {
                        "id": "01HG9G3SZECZBNRQ737T6YJP3Q",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 30.0
                    },
                    "attribute": null,
                    "description": "state of group.computers"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2023-11-27T22:59:31.233308+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01HG9G4Q90A9R1N5V97FFAFVD1",
                    "parent_id": "01HG9G3SZECZBNRQ737T6YJP3Q",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {
                      "transition": 5,
                      "area_id": [
                        "office"
                      ]
                    },
                    "target": {
                      "area_id": [
                        "office"
                      ]
                    }
                  },
                  "running_script": false
                }
              }
            ]
          },
          "config": {
            "id": "1674779503847",
            "alias": "LIGHT - Turn off Office",
            "description": "",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "group.computers"
                ],
                "from": "on",
                "to": "off",
                "for": {
                  "hours": 0,
                  "minutes": 0,
                  "seconds": 30
                }
              }
            ],
            "condition": [],
            "action": [
              {
                "service": "light.turn_off",
                "data": {
                  "transition": 5
                },
                "target": {
                  "area_id": "office"
                }
              }
            ],
            "mode": "single"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01HG9G4Q90A9R1N5V97FFAFVD1",
            "parent_id": "01HG9G3SZECZBNRQ737T6YJP3Q",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "5c3459b2392ff627c7283e5a11fb3d44",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2023-11-27T22:59:31.232938+00:00",
            "finish": "2023-11-27T22:59:31.247646+00:00"
          },
          "domain": "automation",
          "item_id": "1674779503847",
          "trigger": "state of group.computers"
        }
      }
    ]
  }
}